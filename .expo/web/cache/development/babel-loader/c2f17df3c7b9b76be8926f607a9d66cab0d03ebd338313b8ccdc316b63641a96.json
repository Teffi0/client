{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\nvar _native = require(\"@react-navigation/native\");\nvar _styles = _interopRequireDefault(require(\"../styles/styles\"));\nvar _dateFormatter = require(\"../utils/dateFormatter\");\nvar _taskScreenHelpers = require(\"../utils/taskScreenHelpers\");\nvar _DropdownItem = _interopRequireDefault(require(\"../components/DropdownItem\"));\nvar _tasks = require(\"../utils/tasks\");\nvar _icons = require(\"../icons\");\nvar _NewTaskScreen = _interopRequireDefault(require(\"./NewTaskScreen\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _excluded = [\"serviceName\"];\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\fred\\\\Desktop\\\\client\\\\src\\\\screens\\\\TaskDetailScreen.js\";\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar TaskDetailScreen = function TaskDetailScreen(_ref) {\n  var route = _ref.route;\n  var navigation = (0, _native.useNavigation)();\n  var _route$params = route.params;\n  _route$params = _route$params === void 0 ? {} : _route$params;\n  var serviceName = _route$params.serviceName,\n    initialTask = (0, _objectWithoutProperties2.default)(_route$params, _excluded);\n  var _useState = (0, _react.useState)(initialTask),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    task = _useState2[0],\n    setTask = _useState2[1];\n  var _useState3 = (0, _react.useState)(false),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    isModalVisible = _useState4[0],\n    setModalVisible = _useState4[1];\n  var _useState5 = (0, _react.useState)([]),\n    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n    selectedInventory = _useState6[0],\n    setSelectedInventory = _useState6[1];\n  var _useState7 = (0, _react.useState)([]),\n    _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n    inventoryItems = _useState8[0],\n    setInventoryItems = _useState8[1];\n  var _useState9 = (0, _react.useState)([]),\n    _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n    taskInventory = _useState10[0],\n    setTaskInventory = _useState10[1];\n  var _useState11 = (0, _react.useState)(false),\n    _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n    isNewTaskScreenVisible = _useState12[0],\n    setNewTaskScreenVisible = _useState12[1];\n  var _useState13 = (0, _react.useState)(null),\n    _useState14 = (0, _slicedToArray2.default)(_useState13, 2),\n    draftData = _useState14[0],\n    setDraftData = _useState14[1];\n  var handleAddTaskPress = function () {\n    var _ref2 = (0, _asyncToGenerator2.default)(function* () {\n      if (task.status === 'в процессе') {\n        setModalVisible(true);\n      } else {\n        try {\n          var updatedTask = Object.assign({}, task, {\n            status: 'в процессе'\n          });\n          yield (0, _taskScreenHelpers.updateTaskStatus)(task.id, updatedTask);\n          setTask(updatedTask);\n          navigation.navigate('Tabs', {\n            screen: 'TasksScreen'\n          });\n        } catch (error) {\n          console.error('Ошибка при обновлении статуса задачи:', error);\n        }\n      }\n    });\n    return function handleAddTaskPress() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleBackPress = function handleBackPress() {\n    navigation.goBack();\n  };\n  (0, _react.useEffect)(function () {}, [task.id]);\n  (0, _react.useEffect)(function () {\n    var fetchTaskInventory = function () {\n      var _ref3 = (0, _asyncToGenerator2.default)(function* () {\n        if (task.status === 'выполнено') {\n          try {\n            var response = yield fetch(`http://31.129.101.174/tasks/${task.id}/inventory`);\n            var data = yield response.json();\n            setTaskInventory(data);\n          } catch (error) {\n            console.error('Ошибка при получении расходников для задачи:', error);\n          }\n        }\n      });\n      return function fetchTaskInventory() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    fetchTaskInventory();\n  }, [task.status, task.id]);\n  (0, _react.useEffect)(function () {\n    (0, _asyncToGenerator2.default)(function* () {\n      var data = yield (0, _tasks.fetchDraftData)(task.id);\n      setDraftData(data);\n    })();\n  }, [task.id, task.status]);\n  var handleInventoryChange = function handleInventoryChange(newSelectedInventory) {\n    setSelectedInventory(newSelectedInventory);\n  };\n  var handleEditPress = function handleEditPress() {\n    if (draftData) {\n      setNewTaskScreenVisible(true);\n    } else {\n      navigation.navigate('TaskDetail', {\n        screen: 'TaskDetailScreen',\n        params: Object.assign({}, task, {\n          serviceName: serviceName\n        })\n      });\n    }\n  };\n  var completeTask = function () {\n    var _ref5 = (0, _asyncToGenerator2.default)(function* () {\n      if (selectedInventory.length === 0) {\n        alert('Выберите инвентарь перед завершением задачи.');\n        return;\n      }\n      try {\n        var updatedTask = Object.assign({}, task, {\n          status: 'выполнено'\n        });\n        var statusResponse = yield (0, _taskScreenHelpers.updateTaskStatus)(task.id, updatedTask);\n        var filteredInventory = selectedInventory.filter(function (item) {\n          return item.quantity > 0;\n        });\n        var inventoryResponse = yield fetch(`http://31.129.101.174/tasks/${task.id}/complete`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            inventory: filteredInventory.map(function (item) {\n              return {\n                inventory_id: item.id,\n                quantity: item.quantity\n              };\n            })\n          })\n        });\n        if (!inventoryResponse.ok) {\n          throw new Error('Ошибка при обновлении инвентаря');\n        }\n        var inventoryResult = yield inventoryResponse.json();\n        setModalVisible(false);\n        navigation.navigate('Tabs', {\n          screen: 'TasksScreen'\n        });\n      } catch (error) {\n        console.error('Ошибка при завершении задачи:', error);\n      }\n    });\n    return function completeTask() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var fetchInventoryItems = function () {\n    var _ref6 = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        var response = yield fetch('http://31.129.101.174/inventory');\n        var data = yield response.json();\n        setInventoryItems(data);\n      } catch (error) {\n        console.error('Ошибка при получении инвентаря:', error);\n      }\n    });\n    return function fetchInventoryItems() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  (0, _react.useEffect)(function () {\n    fetchInventoryItems();\n  }, []);\n  (0, _react.useEffect)(function () {\n    var updateTaskDetails = function () {\n      var _ref7 = (0, _asyncToGenerator2.default)(function* () {\n        var participants = yield (0, _tasks.fetchTaskParticipants)(task.id);\n        setTask(Object.assign({}, task, {\n          employees: participants\n        }));\n      });\n      return function updateTaskDetails() {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n    updateTaskDetails();\n  }, [task.id]);\n  var Section = function Section(_ref8) {\n    var title = _ref8.title,\n      children = _ref8.children;\n    return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n      style: _styles.default.section,\n      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: _styles.default.sectionTitle,\n        children: title\n      }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n        style: _styles.default.sectionContent,\n        children: children\n      })]\n    });\n  };\n  var Row = function Row(_ref9) {\n    var title = _ref9.title,\n      value = _ref9.value;\n    var displayValue = value;\n    if (Array.isArray(value) && value.length > 0 && value[0].hasOwnProperty('full_name')) {\n      displayValue = value.map(function (employee) {\n        return employee.full_name;\n      }).join(', ');\n    }\n    return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n      style: _styles.default.rowStyle,\n      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: _styles.default.rowTitle,\n        children: title\n      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: _styles.default.rowValue,\n        children: displayValue\n      })]\n    });\n  };\n  return (0, _jsxRuntime.jsxs)(_reactNativeSafeAreaContext.SafeAreaView, {\n    style: _styles.default.container,\n    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n      style: _styles.default.contentContainerTask,\n      children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n        style: _styles.default.taskHeader,\n        children: [(0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n          onPress: handleBackPress,\n          children: (0, _jsxRuntime.jsx)(_icons.BackIcon, {})\n        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: [_styles.default.titleMedium, {\n            flex: 1,\n            textAlign: 'center'\n          }],\n          children: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u0437\\u0430\\u0434\\u0430\\u0447\\u0430\"\n        }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n          onPress: handleEditPress,\n          children: (0, _jsxRuntime.jsx)(_icons.EditIcon, {})\n        })]\n      }), (0, _jsxRuntime.jsxs)(_reactNative.ScrollView, {\n        contentContainerStyle: _styles.default.scrollViewContent,\n        showsVerticalScrollIndicator: false,\n        overScrollMode: \"never\",\n        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: _styles.default.headlineMedium,\n          children: serviceName\n        }), (0, _jsxRuntime.jsxs)(Section, {\n          title: \"\\u041A\\u043B\\u0438\\u0435\\u043D\\u0442\",\n          children: [(0, _jsxRuntime.jsx)(Row, {\n            title: \"\\u0424\\u0418\\u041E:\",\n            value: task.fullname_client\n          }), (0, _jsxRuntime.jsx)(Row, {\n            title: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\",\n            value: task.phone\n          }), (0, _jsxRuntime.jsx)(Row, {\n            title: \"\\u0410\\u0434\\u0440\\u0435\\u0441:\",\n            value: task.address_client\n          })]\n        }), (0, _jsxRuntime.jsxs)(Section, {\n          title: \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0430\",\n          children: [(0, _jsxRuntime.jsx)(Row, {\n            title: \"\\u0421\\u043F\\u043E\\u0441\\u043E\\u0431 \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B:\",\n            value: task.payment || 'Не указан'\n          }), (0, _jsxRuntime.jsx)(Row, {\n            title: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C:\",\n            value: task.cost ? `${task.cost} руб.` : 'Не указана'\n          })]\n        }), (0, _jsxRuntime.jsxs)(Section, {\n          title: \"\\u0420\\u0430\\u0431\\u043E\\u0442\\u0430\",\n          children: [(0, _jsxRuntime.jsx)(Row, {\n            title: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439:\",\n            value: task.responsible || 'Не назначен'\n          }), (0, _jsxRuntime.jsx)(Row, {\n            title: \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0438:\",\n            value: task.employees || 'Нет информации'\n          }), (0, _jsxRuntime.jsx)(Row, {\n            title: \"\\u0414\\u0430\\u0442\\u0430 \\u0438 \\u0432\\u0440\\u0435\\u043C\\u044F \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430:\",\n            value: task.start_date ? `${(0, _dateFormatter.formatDate)(task.start_date)} ${(0, _dateFormatter.formatTime)(task.start_time)}` : 'Не указаны'\n          }), (0, _jsxRuntime.jsx)(Row, {\n            title: \"\\u0414\\u0430\\u0442\\u0430 \\u0438 \\u0432\\u0440\\u0435\\u043C\\u044F \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F:\",\n            value: task.end_date ? `${(0, _dateFormatter.formatDate)(task.end_date)} ${(0, _dateFormatter.formatTime)(task.end_time)}` : 'Не указаны'\n          })]\n        }), task.status === 'выполнено' && (0, _jsxRuntime.jsx)(Section, {\n          title: \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\\u043D\\u0438\\u043A\\u0438\",\n          children: taskInventory.length > 0 ? taskInventory.map(function (item, index) {\n            return (0, _jsxRuntime.jsx)(Row, {\n              title: item.name,\n              value: `Количество: ${item.quantity}`\n            }, index);\n          }) : (0, _jsxRuntime.jsx)(_reactNative.Text, {\n            style: _styles.default.bodyMedium,\n            children: \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\\u043D\\u0438\\u043A\\u0438 \\u043D\\u0435 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C.\"\n          })\n        }), (0, _jsxRuntime.jsx)(Section, {\n          title: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n          children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n            style: [_styles.default.bodyMedium, {\n              marginBottom: 300\n            }],\n            children: task.description || 'Описание отсутствует.'\n          })\n        })]\n      }), (0, _jsxRuntime.jsx)(_reactNative.Modal, {\n        visible: isModalVisible,\n        animationType: \"slide\",\n        onRequestClose: function onRequestClose() {\n          return setModalVisible(false);\n        },\n        children: (0, _jsxRuntime.jsxs)(_reactNative.View, {\n          style: _styles.default.contentContainer,\n          children: [(0, _jsxRuntime.jsx)(_DropdownItem.default, {\n            label: \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\\u043D\\u0438\\u043A\\u0438\",\n            options: inventoryItems,\n            selectedValues: selectedInventory,\n            onValueChange: handleInventoryChange\n          }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n            style: _styles.default.addButton,\n            onPress: completeTask,\n            children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n              style: _styles.default.addButtonText,\n              children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u0440\\u0430\\u0431\\u043E\\u0442\\u0443\"\n            })\n          })]\n        })\n      }), task.status !== 'выполнено' && (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n        style: _styles.default.addButton,\n        onPress: handleAddTaskPress,\n        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: _styles.default.addButtonText,\n          children: task.status === 'в процессе' ? 'Добавить расходники' : 'Начать выполнение'\n        })\n      })]\n    }), (0, _jsxRuntime.jsx)(_reactNative.Modal, {\n      visible: isNewTaskScreenVisible,\n      animationType: \"slide\",\n      onRequestClose: function onRequestClose() {\n        return setNewTaskScreenVisible(false);\n      },\n      children: (0, _jsxRuntime.jsx)(_NewTaskScreen.default, {\n        onClose: function onClose() {\n          return setNewTaskScreenVisible(false);\n        },\n        draftData: draftData\n      })\n    })]\n  });\n};\nvar _default = exports.default = TaskDetailScreen;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_reactNativeSafeAreaContext","_native","_styles","_interopRequireDefault","_dateFormatter","_taskScreenHelpers","_DropdownItem","_tasks","_icons","_NewTaskScreen","_jsxRuntime","_excluded","_this","_jsxFileName","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","TaskDetailScreen","_ref","route","navigation","useNavigation","_route$params","params","serviceName","initialTask","_objectWithoutProperties2","_useState","useState","_useState2","_slicedToArray2","task","setTask","_useState3","_useState4","isModalVisible","setModalVisible","_useState5","_useState6","selectedInventory","setSelectedInventory","_useState7","_useState8","inventoryItems","setInventoryItems","_useState9","_useState10","taskInventory","setTaskInventory","_useState11","_useState12","isNewTaskScreenVisible","setNewTaskScreenVisible","_useState13","_useState14","draftData","setDraftData","handleAddTaskPress","_ref2","_asyncToGenerator2","status","updatedTask","assign","updateTaskStatus","id","navigate","screen","error","console","apply","arguments","handleBackPress","goBack","useEffect","fetchTaskInventory","_ref3","response","fetch","data","json","fetchDraftData","handleInventoryChange","newSelectedInventory","handleEditPress","completeTask","_ref5","length","alert","statusResponse","filteredInventory","filter","item","quantity","inventoryResponse","method","headers","body","JSON","stringify","inventory","map","inventory_id","ok","Error","inventoryResult","fetchInventoryItems","_ref6","updateTaskDetails","_ref7","participants","fetchTaskParticipants","employees","Section","_ref8","title","children","jsxs","View","style","styles","section","jsx","Text","sectionTitle","sectionContent","Row","_ref9","value","displayValue","Array","isArray","employee","full_name","join","rowStyle","rowTitle","rowValue","SafeAreaView","container","contentContainerTask","taskHeader","TouchableOpacity","onPress","BackIcon","titleMedium","flex","textAlign","EditIcon","ScrollView","contentContainerStyle","scrollViewContent","showsVerticalScrollIndicator","overScrollMode","headlineMedium","fullname_client","phone","address_client","payment","cost","responsible","start_date","formatDate","formatTime","start_time","end_date","end_time","index","name","bodyMedium","marginBottom","description","Modal","visible","animationType","onRequestClose","contentContainer","label","options","selectedValues","onValueChange","addButton","addButtonText","onClose","_default","exports"],"sources":["C:/Users/fred/Desktop/client/src/screens/TaskDetailScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, Modal } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport styles from '../styles/styles';\r\nimport { formatDate, formatTime } from '../utils/dateFormatter';\r\nimport { updateTaskStatus } from '../utils/taskScreenHelpers';\r\nimport DropdownItem from '../components/DropdownItem';\r\nimport { fetchTaskParticipants, fetchDraftData } from '../utils/tasks';\r\nimport { BackIcon, EditIcon } from '../icons';\r\nimport NewTaskScreen from './NewTaskScreen';\r\n\r\nconst TaskDetailScreen = ({ route }) => {\r\n  const navigation = useNavigation();\r\n  const { params: { serviceName, ...initialTask } = {} } = route;\r\n  const [task, setTask] = useState(initialTask);\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const [selectedInventory, setSelectedInventory] = useState([]);\r\n  const [inventoryItems, setInventoryItems] = useState([]);\r\n  const [taskInventory, setTaskInventory] = useState([]);\r\n  const [isNewTaskScreenVisible, setNewTaskScreenVisible] = useState(false);\r\n  const [draftData, setDraftData] = useState(null);\r\n\r\n  const handleAddTaskPress = async () => {\r\n    if (task.status === 'в процессе') {\r\n      setModalVisible(true);\r\n    } else {\r\n      try {\r\n        const updatedTask = { ...task, status: 'в процессе' };\r\n        await updateTaskStatus(task.id, updatedTask); // Отправляем полный объект задачи\r\n        setTask(updatedTask); // Обновляем состояние задачи\r\n        navigation.navigate('Tabs', { screen: 'TasksScreen' });\r\n      } catch (error) {\r\n        console.error('Ошибка при обновлении статуса задачи:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBackPress = () => {\r\n    navigation.goBack(); // Это вызовет возврат к предыдущему экрану в стеке навигации\r\n  };\r\n\r\n  useEffect(() => {\r\n  }, [task.id]);\r\n\r\n  useEffect(() => {\r\n    const fetchTaskInventory = async () => {\r\n      if (task.status === 'выполнено') {\r\n        try {\r\n          // Предполагается, что у тебя есть эндпойнт для получения инвентаря конкретной задачи\r\n          const response = await fetch(`http://31.129.101.174/tasks/${task.id}/inventory`);\r\n          const data = await response.json();\r\n          setTaskInventory(data);\r\n        } catch (error) {\r\n          console.error('Ошибка при получении расходников для задачи:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchTaskInventory();\r\n  }, [task.status, task.id]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await fetchDraftData(task.id);\r\n      setDraftData(data);\r\n    })();\r\n  }, [task.id, task.status]);\r\n\r\n  const handleInventoryChange = (newSelectedInventory) => {\r\n    setSelectedInventory(newSelectedInventory);\r\n  };\r\n\r\n  const handleEditPress = () => {\r\n    if (draftData) {\r\n      setNewTaskScreenVisible(true);\r\n    } else {\r\n      navigation.navigate('TaskDetail', {\r\n        screen: 'TaskDetailScreen',\r\n        params: { ...task, serviceName },\r\n      });\r\n    }\r\n  };\r\n\r\n  const completeTask = async () => {\r\n    // Проверяем, что выбран хотя бы один инвентарь\r\n    if (selectedInventory.length === 0) {\r\n      alert('Выберите инвентарь перед завершением задачи.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Обновляем статус задачи\r\n      const updatedTask = { ...task, status: 'выполнено' };\r\n      const statusResponse = await updateTaskStatus(task.id, updatedTask);\r\n\r\n      // Фильтруем выбранный инвентарь, исключая элементы с количеством ноль\r\n      const filteredInventory = selectedInventory.filter(item => item.quantity > 0);\r\n\r\n      // Отправляем данные о выбранном инвентаре на сервер\r\n      const inventoryResponse = await fetch(`http://31.129.101.174/tasks/${task.id}/complete`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          inventory: filteredInventory.map(item => ({\r\n            inventory_id: item.id,\r\n            quantity: item.quantity\r\n          })),\r\n        }),\r\n      });\r\n\r\n      if (!inventoryResponse.ok) {\r\n        throw new Error('Ошибка при обновлении инвентаря');\r\n      }\r\n\r\n      // Получаем ответ от сервера\r\n      const inventoryResult = await inventoryResponse.json();\r\n\r\n      // Закрыть модальное окно и перейти к списку задач\r\n      setModalVisible(false);\r\n      navigation.navigate('Tabs', { screen: 'TasksScreen' });\r\n    } catch (error) {\r\n      console.error('Ошибка при завершении задачи:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const fetchInventoryItems = async () => {\r\n    try {\r\n      const response = await fetch('http://31.129.101.174/inventory');\r\n      const data = await response.json();\r\n      setInventoryItems(data);\r\n    } catch (error) {\r\n      console.error('Ошибка при получении инвентаря:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchInventoryItems();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Функция для обновления информации о задаче, включая участников\r\n    const updateTaskDetails = async () => {\r\n      const participants = await fetchTaskParticipants(task.id);\r\n      setTask({ ...task, employees: participants });\r\n    };\r\n\r\n    updateTaskDetails();\r\n  }, [task.id]);\r\n\r\n  const Section = ({ title, children }) => (\r\n    <View style={styles.section}>\r\n      <Text style={styles.sectionTitle}>{title}</Text>\r\n      <View style={styles.sectionContent}>\r\n        {children}\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  const Row = ({ title, value }) => {\r\n    let displayValue = value;\r\n\r\n    // Проверяем, является ли value массивом и содержит ли он объекты с полем full_name\r\n    if (Array.isArray(value) && value.length > 0 && value[0].hasOwnProperty('full_name')) {\r\n      displayValue = value.map(employee => employee.full_name).join(', ');\r\n    }\r\n\r\n    return (\r\n      <View style={styles.rowStyle}>\r\n        <Text style={styles.rowTitle}>{title}</Text>\r\n        <Text style={styles.rowValue}>{displayValue}</Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.contentContainerTask}>\r\n        <View style={styles.taskHeader}>\r\n        <TouchableOpacity onPress={handleBackPress}>\r\n            <BackIcon />\r\n          </TouchableOpacity>\r\n          <Text style={[styles.titleMedium, { flex: 1, textAlign: 'center' }]}>Новая задача</Text>\r\n          <TouchableOpacity onPress={handleEditPress}>\r\n            <EditIcon />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <ScrollView contentContainerStyle={styles.scrollViewContent} showsVerticalScrollIndicator={false} overScrollMode=\"never\">\r\n          <Text style={styles.headlineMedium}>{serviceName}</Text>\r\n\r\n          <Section title=\"Клиент\">\r\n            <Row title=\"ФИО:\" value={task.fullname_client} />\r\n            <Row title=\"Телефон:\" value={task.phone} />\r\n            <Row title=\"Адрес:\" value={task.address_client} />\r\n          </Section>\r\n\r\n          <Section title=\"Оплата\">\r\n            <Row title=\"Способ оплаты:\" value={task.payment || 'Не указан'} />\r\n            <Row title=\"Стоимость:\" value={task.cost ? `${task.cost} руб.` : 'Не указана'} />\r\n          </Section>\r\n\r\n          <Section title=\"Работа\">\r\n            <Row title=\"Ответственный:\" value={task.responsible || 'Не назначен'} />\r\n            <Row title=\"Участники:\" value={task.employees || 'Нет информации'} />\r\n            <Row title=\"Дата и время начала:\" value={task.start_date ? `${formatDate(task.start_date)} ${formatTime(task.start_time)}` : 'Не указаны'} />\r\n            <Row title=\"Дата и время окончания:\" value={task.end_date ? `${formatDate(task.end_date)} ${formatTime(task.end_time)}` : 'Не указаны'} />\r\n          </Section>\r\n\r\n          {task.status === 'выполнено' && (\r\n            <Section title=\"Расходники\">\r\n              {taskInventory.length > 0 ? (\r\n                taskInventory.map((item, index) => (\r\n                  <Row key={index} title={item.name} value={`Количество: ${item.quantity}`} />\r\n                ))\r\n              ) : (\r\n                <Text style={styles.bodyMedium}>Расходники не использовались.</Text>\r\n              )}\r\n            </Section>\r\n          )}\r\n\r\n          <Section title=\"Описание\">\r\n            <Text style={[styles.bodyMedium, { marginBottom: 300 }]}>{task.description || 'Описание отсутствует.'}</Text>\r\n          </Section>\r\n        </ScrollView>\r\n\r\n        <Modal\r\n          visible={isModalVisible}\r\n          animationType=\"slide\"\r\n          onRequestClose={() => setModalVisible(false)}\r\n        >\r\n          <View style={styles.contentContainer}>\r\n            <DropdownItem\r\n              label=\"Расходники\"\r\n              options={inventoryItems}\r\n              selectedValues={selectedInventory}\r\n              onValueChange={handleInventoryChange}\r\n            />\r\n            <TouchableOpacity style={styles.addButton} onPress={completeTask}>\r\n              <Text style={styles.addButtonText}>Завершить работу</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </Modal>\r\n\r\n        {task.status !== 'выполнено' && (\r\n          <TouchableOpacity style={styles.addButton} onPress={handleAddTaskPress}>\r\n            <Text style={styles.addButtonText}>\r\n              {task.status === 'в процессе' ? 'Добавить расходники' : 'Начать выполнение'}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        )}\r\n      </View>\r\n      <Modal\r\n        visible={isNewTaskScreenVisible}\r\n        animationType=\"slide\"\r\n        onRequestClose={() => setNewTaskScreenVisible(false)}\r\n      >\r\n        <NewTaskScreen onClose={() => setNewTaskScreenVisible(false)} draftData={draftData} />\r\n      </Modal>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default TaskDetailScreen;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}