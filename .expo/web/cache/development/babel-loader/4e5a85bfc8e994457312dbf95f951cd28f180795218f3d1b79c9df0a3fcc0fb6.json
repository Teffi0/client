{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\fred\\\\Desktop\\\\client\\\\src\\\\screens\\\\TasksScreen.js\",\n  _this = this;\nimport React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ModalDropdown from 'react-native-modal-dropdown';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { format, getYear } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport styles from '../styles/styles';\nimport { CalendarIcon, TodayIcon } from '../icons';\nimport AddButton from '../components/AddButton';\nimport CustomCalendar from '../components/CustomCalendar';\nimport VerticalCalendar from '../components/VerticalCalendar';\nimport NewTaskScreen from './NewTaskScreen';\nimport { isToday, fetchTaskDates, fetchTasksForSelectedDate } from '../utils/tasks';\nimport { taskEventEmitter } from '../Events';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar VIEW_MODES = {\n  TODAY: 'today',\n  CALENDAR: 'calendar'\n};\nvar TasksScreen = function TasksScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    taskDates = _useState4[0],\n    setTaskDates = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isNewTaskScreenVisible = _useState6[0],\n    setNewTaskScreenVisible = _useState6[1];\n  var _useState7 = useState(new Date()),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedDate = _useState8[0],\n    setSelectedDate = _useState8[1];\n  var _useState9 = useState(VIEW_MODES.TODAY),\n    _useState10 = _slicedToArray(_useState9, 2),\n    viewMode = _useState10[0],\n    setViewMode = _useState10[1];\n  var _useState11 = useState(format(selectedDate, 'd MMMM', {\n      locale: ru\n    })),\n    _useState12 = _slicedToArray(_useState11, 2),\n    headerTitle = _useState12[0],\n    setHeaderTitle = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isUserResponsible = _useState14[0],\n    setIsUserResponsible = _useState14[1];\n  var _useState15 = useState(getYear(new Date())),\n    _useState16 = _slicedToArray(_useState15, 2),\n    currentYear = _useState16[0],\n    setCurrentYear = _useState16[1];\n  var _useState17 = useState(currentYear),\n    _useState18 = _slicedToArray(_useState17, 2),\n    selectedYear = _useState18[0],\n    setSelectedYear = _useState18[1];\n  var checkIfUserIsResponsible = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var userId = yield AsyncStorage.getItem('userId');\n        var response = yield fetch(`http://31.129.101.174/responsibles/check/${userId}`);\n        var data = yield response.json();\n        setIsUserResponsible(data.isResponsible);\n      } catch (error) {\n        console.error('Ошибка при проверке ответственности:', error);\n      }\n    });\n    return function checkIfUserIsResponsible() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    checkIfUserIsResponsible();\n  }, []);\n  var fetchData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        yield fetchTaskDates(setTaskDates);\n        yield fetchTasksForSelectedDate(selectedDate, setTasks);\n        setHeaderTitle(isToday(selectedDate) ? 'Сегодня' : format(selectedDate, 'd MMMM', {\n          locale: ru\n        }));\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    });\n    return function fetchData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchData();\n    taskEventEmitter.on('taskUpdated', fetchData);\n    return function () {\n      return taskEventEmitter.off('taskUpdated', fetchData);\n    };\n  }, [selectedDate]);\n  var handleViewModeToggle = useCallback(function () {\n    setViewMode(function (prevMode) {\n      return prevMode === VIEW_MODES.TODAY ? VIEW_MODES.CALENDAR : VIEW_MODES.TODAY;\n    });\n  }, []);\n  var handleYearChange = function handleYearChange(year) {\n    setSelectedYear(year);\n  };\n  var renderCalendar = function renderCalendar() {\n    return viewMode === VIEW_MODES.TODAY ? _jsxDEV(CustomCalendar, {\n      selectedDate: selectedDate,\n      onDateChange: setSelectedDate,\n      tasks: tasks,\n      taskDates: taskDates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, _this) : _jsxDEV(VerticalCalendar, {\n      selectedDate: selectedDate,\n      onDateChange: setSelectedDate,\n      tasks: tasks,\n      taskDates: taskDates,\n      renderAddButton: renderAddButton,\n      selectedYear: selectedYear,\n      onYearChange: handleYearChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, _this);\n  };\n  var renderAddButton = function renderAddButton() {\n    return isUserResponsible ? _jsxDEV(AddButton, {\n      onPress: handleAddButtonPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 32\n    }, _this) : null;\n  };\n  var handleAddButtonPress = useCallback(function () {\n    setNewTaskScreenVisible(true);\n  }, []);\n  var years = [getYear(new Date()) - 2, getYear(new Date()) - 1, getYear(new Date())];\n  var renderYearPicker = function renderYearPicker() {\n    return _jsxDEV(View, {\n      style: styles.yearPickerContainer,\n      children: [_jsxDEV(View, {\n        style: styles.dropdownArrow,\n        children: _jsxDEV(Text, {\n          children: \"\\u2193\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, _this), _jsxDEV(ModalDropdown, {\n        options: years.map(function (year) {\n          return year.toString();\n        }),\n        defaultValue: selectedYear.toString(),\n        onSelect: function onSelect(index, value) {\n          return handleYearChange(Number(value));\n        },\n        style: styles.dropdownStyle,\n        textStyle: styles.dropdownTextStyle,\n        dropdownTextStyle: styles.dropdownTextItemStyle,\n        dropdownStyle: styles.dropdown,\n        renderSeparator: function renderSeparator() {\n          return _jsxDEV(View, {\n            style: styles.dropdownSeparator\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 34\n          }, _this);\n        },\n        renderRow: function renderRow(option) {\n          return console.log(years.map(function (year) {\n            return year.toString();\n          })), console.log(option), _jsxDEV(View, {\n            style: styles.dropdownRow,\n            children: _jsxDEV(Text, {\n              style: styles.dropdownTextItemStyle,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, _this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.contentContainer,\n      children: [_jsxDEV(View, {\n        style: styles.taskHeader,\n        children: [_jsxDEV(Text, {\n          style: styles.titleMedium,\n          children: viewMode === VIEW_MODES.TODAY ? headerTitle : 'Календарь'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, _this), _jsxDEV(View, {\n          style: styles.calendarBlock,\n          children: [viewMode === VIEW_MODES.TODAY && _jsxDEV(Text, {\n            style: styles.title,\n            children: format(selectedDate, 'MMMM, yyyy', {\n              locale: ru\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 47\n          }, _this), viewMode === VIEW_MODES.CALENDAR && renderYearPicker(), _jsxDEV(TouchableOpacity, {\n            onPress: handleViewModeToggle,\n            children: viewMode === VIEW_MODES.TODAY ? _jsxDEV(CalendarIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 48\n            }, _this) : _jsxDEV(TodayIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 67\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, _this), renderCalendar(), viewMode === VIEW_MODES.TODAY && renderAddButton()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, _this), _jsxDEV(Modal, {\n      visible: isNewTaskScreenVisible,\n      onRequestClose: function onRequestClose() {\n        return setNewTaskScreenVisible(false);\n      },\n      children: _jsxDEV(NewTaskScreen, {\n        onClose: function onClose() {\n          return setNewTaskScreenVisible(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, _this);\n};\nexport default TasksScreen;","map":{"version":3,"names":["React","useState","useEffect","useCallback","View","Text","TouchableOpacity","Modal","ModalDropdown","SafeAreaView","format","getYear","ru","styles","CalendarIcon","TodayIcon","AddButton","CustomCalendar","VerticalCalendar","NewTaskScreen","isToday","fetchTaskDates","fetchTasksForSelectedDate","taskEventEmitter","AsyncStorage","jsxDEV","_jsxDEV","VIEW_MODES","TODAY","CALENDAR","TasksScreen","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","_useState4","taskDates","setTaskDates","_useState5","_useState6","isNewTaskScreenVisible","setNewTaskScreenVisible","_useState7","Date","_useState8","selectedDate","setSelectedDate","_useState9","_useState10","viewMode","setViewMode","_useState11","locale","_useState12","headerTitle","setHeaderTitle","_useState13","_useState14","isUserResponsible","setIsUserResponsible","_useState15","_useState16","currentYear","setCurrentYear","_useState17","_useState18","selectedYear","setSelectedYear","checkIfUserIsResponsible","_ref","_asyncToGenerator","userId","getItem","response","fetch","data","json","isResponsible","error","console","apply","arguments","fetchData","_ref2","on","off","handleViewModeToggle","prevMode","handleYearChange","year","renderCalendar","onDateChange","fileName","_jsxFileName","lineNumber","columnNumber","_this","renderAddButton","onYearChange","onPress","handleAddButtonPress","years","renderYearPicker","style","yearPickerContainer","children","dropdownArrow","options","map","toString","defaultValue","onSelect","index","value","Number","dropdownStyle","textStyle","dropdownTextStyle","dropdownTextItemStyle","dropdown","renderSeparator","dropdownSeparator","renderRow","option","log","dropdownRow","container","contentContainer","taskHeader","titleMedium","calendarBlock","title","visible","onRequestClose","onClose"],"sources":["C:/Users/fred/Desktop/client/src/screens/TasksScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { View, Text, TouchableOpacity, Modal } from 'react-native';\r\nimport ModalDropdown from 'react-native-modal-dropdown';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { format, getYear } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\nimport styles from '../styles/styles';\r\nimport { CalendarIcon, TodayIcon } from '../icons';\r\nimport AddButton from '../components/AddButton';\r\nimport CustomCalendar from '../components/CustomCalendar';\r\nimport VerticalCalendar from '../components/VerticalCalendar';\r\nimport NewTaskScreen from './NewTaskScreen';\r\nimport { isToday, fetchTaskDates, fetchTasksForSelectedDate } from '../utils/tasks';\r\nimport { taskEventEmitter } from '../Events';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst VIEW_MODES = {\r\n  TODAY: 'today',\r\n  CALENDAR: 'calendar',\r\n};\r\n\r\nconst TasksScreen = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [taskDates, setTaskDates] = useState([]);\r\n  const [isNewTaskScreenVisible, setNewTaskScreenVisible] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [viewMode, setViewMode] = useState(VIEW_MODES.TODAY);\r\n  const [headerTitle, setHeaderTitle] = useState(format(selectedDate, 'd MMMM', { locale: ru }));\r\n  const [isUserResponsible, setIsUserResponsible] = useState(false);\r\n  const [currentYear, setCurrentYear] = useState(getYear(new Date())); // Текущий год\r\n  const [selectedYear, setSelectedYear] = useState(currentYear);\r\n\r\n  const checkIfUserIsResponsible = async () => {\r\n    try {\r\n      const userId = await AsyncStorage.getItem('userId');\r\n      // Замените URL на ваш серверный API для проверки\r\n      const response = await fetch(`http://31.129.101.174/responsibles/check/${userId}`);\r\n      const data = await response.json();\r\n\r\n      setIsUserResponsible(data.isResponsible);\r\n    } catch (error) {\r\n      console.error('Ошибка при проверке ответственности:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkIfUserIsResponsible();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      await fetchTaskDates(setTaskDates);\r\n      await fetchTasksForSelectedDate(selectedDate, setTasks);\r\n      setHeaderTitle(isToday(selectedDate) ? 'Сегодня' : format(selectedDate, 'd MMMM', { locale: ru }));\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    taskEventEmitter.on('taskUpdated', fetchData);\r\n    return () => taskEventEmitter.off('taskUpdated', fetchData);\r\n  }, [selectedDate]);\r\n\r\n  const handleViewModeToggle = useCallback(() => {\r\n    setViewMode(prevMode => prevMode === VIEW_MODES.TODAY ? VIEW_MODES.CALENDAR : VIEW_MODES.TODAY);\r\n  }, []);\r\n\r\n  const handleYearChange = (year) => {\r\n    setSelectedYear(year);\r\n  };\r\n\r\n  const renderCalendar = () => (\r\n    viewMode === VIEW_MODES.TODAY\r\n      ? <CustomCalendar selectedDate={selectedDate} onDateChange={setSelectedDate} tasks={tasks} taskDates={taskDates} />\r\n      : <VerticalCalendar selectedDate={selectedDate} onDateChange={setSelectedDate} tasks={tasks} taskDates={taskDates} renderAddButton={renderAddButton} selectedYear={selectedYear} onYearChange={handleYearChange} />\r\n  );\r\n\r\n  const renderAddButton = () => {\r\n    return isUserResponsible ? <AddButton onPress={handleAddButtonPress} /> : null;\r\n  };\r\n\r\n  const handleAddButtonPress = useCallback(() => {\r\n    setNewTaskScreenVisible(true);\r\n  }, []);\r\n\r\n  const years = [getYear(new Date()) - 2, getYear(new Date()) - 1, getYear(new Date())];\r\n\r\n  const renderYearPicker = () => {\r\n    return (\r\n      <View style={styles.yearPickerContainer}>\r\n        <View style={styles.dropdownArrow}>\r\n          <Text>↓</Text>\r\n        </View>\r\n        <ModalDropdown\r\n          options={years.map(year => year.toString())}\r\n          defaultValue={selectedYear.toString()}\r\n          onSelect={(index, value) => handleYearChange(Number(value))}\r\n          style={styles.dropdownStyle}\r\n          textStyle={styles.dropdownTextStyle}\r\n          dropdownTextStyle={styles.dropdownTextItemStyle}\r\n          dropdownStyle={styles.dropdown}\r\n          renderSeparator={() => <View style={styles.dropdownSeparator} />}\r\n          renderRow={(option) => (\r\n            console.log(years.map(year => year.toString())),\r\n            console.log(option),\r\n            <View style={styles.dropdownRow}>\r\n              <Text style={styles.dropdownTextItemStyle}>{option}</Text>\r\n            </View>\r\n          )}\r\n        />\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.contentContainer}>\r\n        <View style={styles.taskHeader}>\r\n          <Text style={styles.titleMedium}>{viewMode === VIEW_MODES.TODAY ? headerTitle : 'Календарь'}</Text>\r\n          <View style={styles.calendarBlock}>\r\n            {viewMode === VIEW_MODES.TODAY && <Text style={styles.title}>{format(selectedDate, 'MMMM, yyyy', { locale: ru })}</Text>}\r\n            {viewMode === VIEW_MODES.CALENDAR && renderYearPicker()}\r\n            <TouchableOpacity onPress={handleViewModeToggle}>\r\n              {viewMode === VIEW_MODES.TODAY ? <CalendarIcon /> : <TodayIcon />}\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        {renderCalendar()}\r\n        {viewMode === VIEW_MODES.TODAY && renderAddButton()}\r\n      </View>\r\n      <Modal visible={isNewTaskScreenVisible} onRequestClose={() => setNewTaskScreenVisible(false)}>\r\n        <NewTaskScreen onClose={() => setNewTaskScreenVisible(false)} />\r\n      </Modal>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default TasksScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}