{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _styles = _interopRequireDefault(require(\"../styles/styles\"));\nvar _TaskForm = _interopRequireDefault(require(\"../components/TaskForm\"));\nvar _SuccessModal = require(\"../components/SuccessModal\");\nvar _formReducer = require(\"../reducers/formReducer\");\nvar _taskScreenHelpers = require(\"../utils/taskScreenHelpers\");\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"C:\\\\Users\\\\fred\\\\Desktop\\\\client\\\\src\\\\screens\\\\NewTaskScreen.js\";\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction NewTaskScreen(_ref) {\n  var onClose = _ref.onClose,\n    draftData = _ref.draftData,\n    selectedDate = _ref.selectedDate;\n  var _useState = (0, _react.useState)(false),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    isSuccessModalVisible = _useState2[0],\n    setIsSuccessModalVisible = _useState2[1];\n  var _useState3 = (0, _react.useState)(false),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    isPressed = _useState4[0],\n    setIsPressed = _useState4[1];\n  var addButtonTextStyles = _styles.default.addButtonText;\n  var _useReducer = (0, _react.useReducer)(_formReducer.formReducer, _formReducer.initialState),\n    _useReducer2 = (0, _slicedToArray2.default)(_useReducer, 2),\n    formData = _useReducer2[0],\n    dispatchFormData = _useReducer2[1];\n  var handleSave = (0, _react.useCallback)((0, _asyncToGenerator2.default)(function* () {\n    if (formData.status === 'отсутствует') {\n      formData.status = \"новая\";\n    }\n    if (formData.status === 'черновик') {\n      var updatedFormData = Object.assign({}, formData, {\n        status: 'новая'\n      });\n      if ((0, _taskScreenHelpers.validateFormData)(updatedFormData)) {\n        yield (0, _taskScreenHelpers.updateDraft)(draftData.id, updatedFormData);\n        setIsSuccessModalVisible(true);\n      }\n    } else {\n      var isValid = yield (0, _taskScreenHelpers.handleSaveTask)(formData, setIsSuccessModalVisible);\n      if (isValid) {\n        setIsSuccessModalVisible(true);\n      }\n    }\n  }), [formData, draftData]);\n  (0, _react.useEffect)(function () {\n    if (draftData) {\n      dispatchFormData({\n        type: 'SET_FORM',\n        payload: draftData\n      });\n    }\n  }, [draftData, dispatchFormData]);\n  var closeSuccessModal = function closeSuccessModal() {\n    setIsSuccessModalVisible(false);\n    onClose();\n  };\n  (0, _react.useEffect)(function () {\n    (0, _taskScreenHelpers.fetchOptions)(dispatchFormData);\n  }, []);\n  (0, _react.useEffect)(function () {\n    if (selectedDate) {\n      dispatchFormData({\n        type: 'UPDATE_FORM',\n        payload: {\n          startDate: selectedDate\n        }\n      });\n    } else {\n      dispatchFormData({\n        type: 'UPDATE_FORM',\n        payload: {\n          startDate: new Date()\n        }\n      });\n    }\n  }, [selectedDate]);\n  var addButtonStyles = Object.assign({}, _styles.default.addButton, isPressed && _styles.default.addButtonPressed);\n  return (0, _jsxRuntime.jsxs)(_reactNativeSafeAreaContext.SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: [(0, _jsxRuntime.jsx)(_TaskForm.default, {\n      formData: formData,\n      dispatchFormData: dispatchFormData,\n      onSave: handleSave,\n      onClose: onClose,\n      draftData: draftData\n    }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n      style: addButtonStyles,\n      onPress: handleSave,\n      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: addButtonTextStyles,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\"\n      })\n    }), (0, _jsxRuntime.jsx)(_SuccessModal.SuccessModal, {\n      isVisible: isSuccessModalVisible,\n      onClose: closeSuccessModal\n    })]\n  });\n}\nNewTaskScreen.propTypes = {\n  onClose: _propTypes.default.func.isRequired,\n  draftData: _propTypes.default.object,\n  selectedDate: _propTypes.default.instanceOf(Date)\n};\nvar _default = exports.default = NewTaskScreen;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_styles","_interopRequireDefault","_TaskForm","_SuccessModal","_formReducer","_taskScreenHelpers","_propTypes","_reactNativeSafeAreaContext","_jsxRuntime","_jsxFileName","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","NewTaskScreen","_ref","onClose","draftData","selectedDate","_useState","useState","_useState2","_slicedToArray2","isSuccessModalVisible","setIsSuccessModalVisible","_useState3","_useState4","isPressed","setIsPressed","addButtonTextStyles","styles","addButtonText","_useReducer","useReducer","formReducer","initialState","_useReducer2","formData","dispatchFormData","handleSave","useCallback","_asyncToGenerator2","status","updatedFormData","assign","validateFormData","updateDraft","id","isValid","handleSaveTask","useEffect","type","payload","closeSuccessModal","fetchOptions","startDate","Date","addButtonStyles","addButton","addButtonPressed","jsxs","SafeAreaView","style","flex","children","jsx","onSave","TouchableOpacity","onPress","Text","SuccessModal","isVisible","propTypes","PropTypes","func","isRequired","object","instanceOf","_default","exports"],"sources":["C:/Users/fred/Desktop/client/src/screens/NewTaskScreen.js"],"sourcesContent":["import React, { useState, useReducer, useEffect, useCallback } from 'react';\r\nimport { View, TouchableOpacity, Text } from 'react-native';\r\nimport styles from '../styles/styles';\r\nimport TaskForm from '../components/TaskForm';\r\nimport { SuccessModal } from '../components/SuccessModal';\r\nimport { formReducer, initialState } from '../reducers/formReducer';\r\nimport { fetchOptions, handleSaveTask, updateDraft, validateFormData } from '../utils/taskScreenHelpers';\r\nimport PropTypes from 'prop-types';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\n\r\nfunction NewTaskScreen({ onClose, draftData, selectedDate }) {\r\n  const [isSuccessModalVisible, setIsSuccessModalVisible] = useState(false);\r\n  const [isPressed, setIsPressed] = useState(false);\r\n\r\n  const addButtonTextStyles = styles.addButtonText;\r\n\r\n  const [formData, dispatchFormData] = useReducer(formReducer, initialState);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    if (formData.status === 'отсутствует') {\r\n      formData.status=\"новая\";\r\n    }\r\n    if (formData.status === 'черновик') {\r\n      const updatedFormData = { ...formData, status: 'новая' };\r\n      // Валидируем обновленные данные\r\n      if (validateFormData(updatedFormData)) {\r\n        await updateDraft(draftData.id, updatedFormData);\r\n        setIsSuccessModalVisible(true); // Показываем модальное окно об успешном добавлении\r\n      }\r\n    } else {\r\n      // В противном случае обновляем статус и вызываем handleSaveTask\r\n      const isValid = await handleSaveTask(formData, setIsSuccessModalVisible);\r\n      if (isValid) {\r\n        setIsSuccessModalVisible(true); // Показываем модальное окно об успешном добавлении\r\n      }\r\n    }\r\n  }, [formData, draftData]);\r\n  \r\n  useEffect(() => {\r\n    if (draftData) {\r\n      // Инициализируем форму данными для редактирования\r\n      dispatchFormData({ type: 'SET_FORM', payload: draftData });\r\n    }\r\n  }, [draftData, dispatchFormData]);\r\n\r\n  const closeSuccessModal = () => {\r\n    setIsSuccessModalVisible(false);\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOptions(dispatchFormData);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedDate) {\r\n      // Заполняем начальную дату в formData\r\n      dispatchFormData({ type: 'UPDATE_FORM', payload: { startDate: selectedDate } });\r\n    } else {\r\n      // Если selectedDate не определен, устанавливаем сегодняшнюю дату\r\n      dispatchFormData({ type: 'UPDATE_FORM', payload: { startDate: new Date() } });\r\n    }\r\n  }, [selectedDate]);\r\n\r\n  const addButtonStyles = {\r\n    ...styles.addButton,\r\n    ...(isPressed && styles.addButtonPressed),\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1 }}>\r\n      <TaskForm\r\n        formData={formData}\r\n        dispatchFormData={dispatchFormData}\r\n        onSave={handleSave}\r\n        onClose={onClose}\r\n        draftData={draftData}\r\n      />\r\n      <TouchableOpacity style={addButtonStyles} onPress={handleSave}>\r\n        <Text style={addButtonTextStyles}>Добавить задачу</Text>\r\n      </TouchableOpacity>\r\n      <SuccessModal isVisible={isSuccessModalVisible} onClose={closeSuccessModal} />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nNewTaskScreen.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  draftData: PropTypes.object,\r\n  selectedDate: PropTypes.instanceOf(Date) // Убираем isRequired\r\n};\r\n\r\nexport default NewTaskScreen;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}