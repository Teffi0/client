{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _dateFns = require(\"date-fns\");\nvar _locale = require(\"date-fns/locale\");\nvar _styles = _interopRequireDefault(require(\"../styles/styles\"));\nvar _RenderMonth = _interopRequireDefault(require(\"./RenderMonth\"));\nvar _TasksForSelectedDateComponent = _interopRequireDefault(require(\"./TasksForSelectedDateComponent\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\fred\\\\Desktop\\\\client\\\\src\\\\components\\\\VerticalCalendar.js\";\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar screenHeight = _reactNative.Dimensions.get('window').height;\nvar VerticalCalendar = function VerticalCalendar(_ref) {\n  var tasks = _ref.tasks,\n    taskDates = _ref.taskDates,\n    renderAddButton = _ref.renderAddButton;\n  var flatListRef = (0, _react.useRef)(null);\n  var _useState = (0, _react.useState)(new Date()),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    selectedDate = _useState2[0],\n    setSelectedDate = _useState2[1];\n  var _useState3 = (0, _react.useState)(Array.from({\n      length: 5\n    }, function (_, i) {\n      return (0, _dateFns.addMonths)((0, _dateFns.startOfMonth)(new Date()), i - 2);\n    })),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    data = _useState4[0],\n    setData = _useState4[1];\n  var _useState5 = (0, _react.useState)(0),\n    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n    page = _useState6[0],\n    setPage = _useState6[1];\n  var _useState7 = (0, _react.useState)(false),\n    _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n    modalVisible = _useState8[0],\n    setModalVisible = _useState8[1];\n  var _useState9 = (0, _react.useState)(false),\n    _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n    isFullSize = _useState10[0],\n    setIsFullSize = _useState10[1];\n  var _useState11 = (0, _react.useState)(false),\n    _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n    isClosing = _useState12[0],\n    setIsClosing = _useState12[1];\n  var ModalFullHeight = screenHeight * 0.05;\n  var ModalHeight = screenHeight * 0.35;\n  var modalHeight = (0, _react.useRef)(new _reactNative.Animated.Value(ModalHeight));\n  var _useState13 = (0, _react.useState)([]),\n    _useState14 = (0, _slicedToArray2.default)(_useState13, 2),\n    expandedClients = _useState14[0],\n    setExpandedClients = _useState14[1];\n  var handleToggleClient = (0, _react.useCallback)(function (client) {\n    setExpandedClients(function (current) {\n      return current.includes(client) ? current.filter(function (c) {\n        return c !== client;\n      }) : [].concat((0, _toConsumableArray2.default)(current), [client]);\n    });\n  }, []);\n  var tasksBySelectedDate = (0, _react.useMemo)(function () {\n    return tasks.filter(function (task) {\n      return (0, _dateFns.format)((0, _dateFns.parseISO)(task.start_date), 'yyyy-MM-dd') === (0, _dateFns.format)(selectedDate, 'yyyy-MM-dd');\n    }).reduce(function (acc, task) {\n      var client = task.fullname_client;\n      if (!acc[client]) {\n        acc[client] = [];\n      }\n      acc[client].push(task);\n      return acc;\n    }, {});\n  }, [tasks, selectedDate]);\n  (0, _react.useEffect)(function () {\n    if (isFullSize) {\n      _reactNative.Animated.timing(modalHeight.current, {\n        toValue: ModalFullHeight,\n        duration: 300,\n        useNativeDriver: false\n      }).start();\n    } else {\n      _reactNative.Animated.timing(modalHeight.current, {\n        toValue: ModalHeight,\n        duration: 300,\n        useNativeDriver: false\n      }).start();\n    }\n  }, [isFullSize]);\n  var panResponder = (0, _react.useRef)(_reactNative.PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant() {\n      modalHeight.current.setOffset(modalHeight.current._value);\n      modalHeight.current.setValue(0);\n    },\n    onPanResponderMove: _reactNative.Animated.event([null, {\n      dy: modalHeight.current\n    }], {\n      useNativeDriver: false,\n      listener: function listener(event, gestureState) {\n        var currentHeight = modalHeight.current.__getValue();\n        if (currentHeight < ModalFullHeight) {\n          modalHeight.current.setValue(0);\n        }\n      }\n    }),\n    onPanResponderRelease: function onPanResponderRelease(event, gestureState) {\n      modalHeight.current.flattenOffset();\n      var currentHeight = modalHeight.current._value + gestureState.dy;\n      var upwardThreshold = ModalHeight + (screenHeight - ModalHeight) / 2;\n      if (gestureState.dy < 0) {\n        if (currentHeight < upwardThreshold) {\n          openFullModal();\n        } else {\n          openModal();\n        }\n      } else {\n        if (currentHeight > ModalHeight) {\n          closeModal();\n        } else {\n          openModal();\n        }\n      }\n    }\n  })).current;\n  var onEndReached = (0, _react.useCallback)(function () {\n    setData(function (prevData) {\n      var start = (0, _dateFns.addMonths)((0, _dateFns.startOfMonth)(new Date()), page * 5 - 2);\n      var newData = Array.from({\n        length: 5\n      }, function (_, i) {\n        return (0, _dateFns.addMonths)(start, i);\n      });\n      return (0, _toConsumableArray2.default)(new Set([].concat((0, _toConsumableArray2.default)(prevData), newData)));\n    });\n    setPage(function (prevPage) {\n      return prevPage + 1;\n    });\n  }, [page]);\n  (0, _react.useEffect)(function () {\n    var _flatListRef$current;\n    (_flatListRef$current = flatListRef.current) == null ? void 0 : _flatListRef$current.scrollToIndex({\n      index: 2,\n      animated: false\n    });\n  }, []);\n  var handleDatePress = (0, _react.useCallback)(function (day) {\n    setSelectedDate(day);\n    setModalVisible(true);\n    openModal();\n  }, []);\n  var openFullModal = (0, _react.useCallback)(function () {\n    _reactNative.Animated.spring(modalHeight.current, {\n      toValue: ModalFullHeight,\n      useNativeDriver: false,\n      bounciness: 0\n    }).start(function () {\n      return setIsFullSize(true);\n    });\n  }, [ModalFullHeight]);\n  var openModal = (0, _react.useCallback)(function () {\n    setModalVisible(true);\n    _reactNative.Animated.spring(modalHeight.current, {\n      toValue: ModalHeight,\n      useNativeDriver: false,\n      bounciness: 0\n    }).start(function () {\n      return setIsFullSize(false);\n    });\n  }, [ModalHeight]);\n  var closeModal = (0, _react.useCallback)(function () {\n    setIsClosing(true);\n    _reactNative.Animated.spring(modalHeight.current, {\n      toValue: screenHeight,\n      useNativeDriver: false,\n      bounciness: 0\n    }).start(function () {\n      setModalVisible(false);\n      setIsFullSize(false);\n      modalHeight.current.setValue(ModalHeight - screenHeight);\n      setIsClosing(false);\n    });\n  }, [screenHeight, ModalHeight]);\n  var renderItem = (0, _react.useCallback)(function (_ref2) {\n    var item = _ref2.item;\n    return (0, _jsxRuntime.jsx)(_RenderMonth.default, {\n      date: item,\n      handleDatePress: handleDatePress,\n      taskDates: taskDates\n    });\n  }, [handleDatePress, taskDates]);\n  var getItemLayout = (0, _react.useCallback)(function (_, index) {\n    return {\n      length: 400,\n      offset: 400 * index,\n      index: index\n    };\n  }, []);\n  var keyExtractor = (0, _react.useCallback)(function (item, index) {\n    return `${(0, _dateFns.format)(item, 'yyyy-MM')}-${index}`;\n  }, []);\n  var modifiedRenderAddButton = (0, _react.useCallback)(function () {\n    if (!isClosing) return renderAddButton();\n  }, [isClosing, renderAddButton]);\n  return (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {\n    children: [(0, _jsxRuntime.jsx)(_reactNative.FlatList, {\n      ref: flatListRef,\n      data: data,\n      initialNumToRender: 5,\n      maxToRenderPerBatch: 5,\n      windowSize: 5,\n      renderItem: renderItem,\n      keyExtractor: keyExtractor,\n      getItemLayout: getItemLayout,\n      onEndReached: onEndReached,\n      onEndReachedThreshold: 0.5,\n      showsVerticalScrollIndicator: false,\n      removeClippedSubviews: true,\n      initialScrollIndex: 1\n    }), (0, _jsxRuntime.jsxs)(_reactNative.Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        return closeModal();\n      },\n      children: [(0, _jsxRuntime.jsx)(_reactNative.Animated.View, Object.assign({\n        style: [_styles.default.modalOverlay, {\n          top: modalHeight.current\n        }]\n      }, panResponder.panHandlers, {\n        children: (0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: _styles.default.container,\n          children: (0, _jsxRuntime.jsxs)(_reactNative.View, {\n            style: _styles.default.contentContainer,\n            children: [(0, _jsxRuntime.jsx)(_reactNative.View, {\n              style: _styles.default.taskHeader,\n              children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n                style: _styles.default.modalText,\n                children: (0, _dateFns.format)(selectedDate, 'd-MMMM', {\n                  locale: _locale.ru\n                })\n              })\n            }), (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {\n              showsVerticalScrollIndicator: false,\n              style: _styles.default.modalScrollView,\n              overScrollMode: \"never\",\n              children: (0, _jsxRuntime.jsx)(_TasksForSelectedDateComponent.default, {\n                tasksByClient: tasksBySelectedDate,\n                expandedClients: expandedClients,\n                toggleClient: handleToggleClient\n              })\n            })]\n          })\n        })\n      })), modifiedRenderAddButton()]\n    })]\n  });\n};\nVerticalCalendar.propTypes = {\n  tasks: _propTypes.default.array.isRequired,\n  taskDates: _propTypes.default.object.isRequired,\n  renderAddButton: _propTypes.default.func.isRequired\n};\nvar _default = exports.default = VerticalCalendar;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_dateFns","_locale","_styles","_interopRequireDefault","_RenderMonth","_TasksForSelectedDateComponent","_propTypes","_jsxRuntime","_this","_jsxFileName","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","screenHeight","Dimensions","height","VerticalCalendar","_ref","tasks","taskDates","renderAddButton","flatListRef","useRef","_useState","useState","Date","_useState2","_slicedToArray2","selectedDate","setSelectedDate","_useState3","Array","from","length","_","addMonths","startOfMonth","_useState4","data","setData","_useState5","_useState6","page","setPage","_useState7","_useState8","modalVisible","setModalVisible","_useState9","_useState10","isFullSize","setIsFullSize","_useState11","_useState12","isClosing","setIsClosing","ModalFullHeight","ModalHeight","modalHeight","Animated","Value","_useState13","_useState14","expandedClients","setExpandedClients","handleToggleClient","useCallback","client","current","includes","filter","c","concat","_toConsumableArray2","tasksBySelectedDate","useMemo","task","format","parseISO","start_date","reduce","acc","fullname_client","push","useEffect","timing","toValue","duration","useNativeDriver","start","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","setOffset","_value","setValue","onPanResponderMove","event","dy","listener","gestureState","currentHeight","__getValue","onPanResponderRelease","flattenOffset","upwardThreshold","openFullModal","openModal","closeModal","onEndReached","prevData","newData","Set","prevPage","_flatListRef$current","scrollToIndex","index","animated","handleDatePress","day","spring","bounciness","renderItem","_ref2","item","jsx","date","getItemLayout","offset","keyExtractor","modifiedRenderAddButton","jsxs","Fragment","children","FlatList","ref","initialNumToRender","maxToRenderPerBatch","windowSize","onEndReachedThreshold","showsVerticalScrollIndicator","removeClippedSubviews","initialScrollIndex","Modal","animationType","transparent","visible","onRequestClose","View","assign","style","styles","modalOverlay","top","panHandlers","container","contentContainer","taskHeader","Text","modalText","locale","ru","ScrollView","modalScrollView","overScrollMode","tasksByClient","toggleClient","propTypes","PropTypes","array","isRequired","object","func","_default","exports"],"sources":["C:/Users/fred/Desktop/client/src/components/VerticalCalendar.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\r\nimport { View, Text, FlatList, Modal, Animated, PanResponder, Dimensions, ScrollView } from 'react-native';\r\nimport { format, addMonths, startOfMonth, parseISO } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\nimport styles from '../styles/styles';\r\nimport RenderMonth from './RenderMonth';\r\nimport TasksForSelectedDateComponent from './TasksForSelectedDateComponent';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\nconst VerticalCalendar = ({ tasks, taskDates, renderAddButton }) => {\r\n  const flatListRef = useRef(null);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [data, setData] = useState(Array.from({ length: 5 }, (_, i) => addMonths(startOfMonth(new Date()), i - 2)));\r\n  const [page, setPage] = useState(0);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [isFullSize, setIsFullSize] = useState(false);\r\n  const [isClosing, setIsClosing] = useState(false);\r\n\r\n  const ModalFullHeight = screenHeight * 0.05;\r\n  const ModalHeight = screenHeight * 0.35;\r\n  const modalHeight = useRef(new Animated.Value(ModalHeight));\r\n\r\n  const [expandedClients, setExpandedClients] = useState([]);\r\n\r\n  const handleToggleClient = useCallback((client) => {\r\n    setExpandedClients((current) =>\r\n      current.includes(client)\r\n        ? current.filter((c) => c !== client)\r\n        : [...current, client]\r\n    );\r\n  }, []);\r\n\r\n  const tasksBySelectedDate = useMemo(() => tasks.filter(task =>\r\n    format(parseISO(task.start_date), 'yyyy-MM-dd') === format(selectedDate, 'yyyy-MM-dd')\r\n  ).reduce((acc, task) => {\r\n    const client = task.fullname_client;\r\n    if (!acc[client]) {\r\n      acc[client] = [];\r\n    }\r\n    acc[client].push(task);\r\n    return acc;\r\n  }, {}), [tasks, selectedDate]);\r\n\r\n  useEffect(() => {\r\n    if (isFullSize) {\r\n      Animated.timing(modalHeight.current, {\r\n        toValue: ModalFullHeight,\r\n        duration: 300,\r\n        useNativeDriver: false,\r\n      }).start();\r\n    } else {\r\n      Animated.timing(modalHeight.current, {\r\n        toValue: ModalHeight,\r\n        duration: 300,\r\n        useNativeDriver: false,\r\n      }).start();\r\n    }\r\n  }, [isFullSize]);\r\n\r\n  const panResponder = useRef(\r\n    PanResponder.create({\r\n      onStartShouldSetPanResponder: () => true,\r\n      onPanResponderGrant: () => {\r\n        modalHeight.current.setOffset(modalHeight.current._value);\r\n        modalHeight.current.setValue(0);\r\n      },\r\n      onPanResponderMove: Animated.event(\r\n        [null, { dy: modalHeight.current }],\r\n        {\r\n          useNativeDriver: false,\r\n          listener: (event, gestureState) => {\r\n            const currentHeight = modalHeight.current.__getValue();\r\n            if (currentHeight < ModalFullHeight) {\r\n              modalHeight.current.setValue(0);\r\n            }\r\n          },\r\n        }\r\n      ),\r\n\r\n      onPanResponderRelease: (event, gestureState) => {\r\n        modalHeight.current.flattenOffset();\r\n        const currentHeight = modalHeight.current._value + gestureState.dy;\r\n        const upwardThreshold = ModalHeight + (screenHeight - ModalHeight) / 2;\r\n\r\n        if (gestureState.dy < 0) {\r\n          if (currentHeight < upwardThreshold) {\r\n            openFullModal();\r\n          } else {\r\n            openModal();\r\n          }\r\n        } else {\r\n          if (currentHeight > ModalHeight) {\r\n            closeModal();\r\n          } else {\r\n            openModal();\r\n          }\r\n        }\r\n      },\r\n\r\n\r\n    })\r\n  ).current;\r\n\r\n  const onEndReached = useCallback(() => {\r\n    setData(prevData => {\r\n      const start = addMonths(startOfMonth(new Date()), page * 5 - 2);\r\n      const newData = Array.from({ length: 5 }, (_, i) => addMonths(start, i));\r\n      return [...new Set([...prevData, ...newData])];\r\n    });\r\n    setPage(prevPage => prevPage + 1);\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    flatListRef.current?.scrollToIndex({ index: 2, animated: false });\r\n  }, []);\r\n\r\n  const handleDatePress = useCallback((day) => {\r\n    setSelectedDate(day);\r\n    setModalVisible(true);\r\n    openModal();\r\n  }, []);\r\n\r\n  const openFullModal = useCallback(() => {\r\n    Animated.spring(modalHeight.current, {\r\n      toValue: ModalFullHeight,\r\n      useNativeDriver: false,\r\n      bounciness: 0\r\n    }).start(() => setIsFullSize(true));\r\n  }, [ModalFullHeight]);\r\n\r\n  const openModal = useCallback(() => {\r\n    setModalVisible(true);\r\n    Animated.spring(modalHeight.current, {\r\n      toValue: ModalHeight,\r\n      useNativeDriver: false,\r\n      bounciness: 0\r\n    }).start(() => setIsFullSize(false));\r\n  }, [ModalHeight]);\r\n\r\n  const closeModal = useCallback(() => {\r\n    setIsClosing(true); // Начало процесса закрытия модального окна\r\n    Animated.spring(modalHeight.current, {\r\n      toValue: screenHeight,\r\n      useNativeDriver: false,\r\n      bounciness: 0\r\n    }).start(() => {\r\n      setModalVisible(false);\r\n      setIsFullSize(false);\r\n      modalHeight.current.setValue(ModalHeight - screenHeight);\r\n      setIsClosing(false); // Завершение процесса закрытия модального окна\r\n    });\r\n  }, [screenHeight, ModalHeight]);\r\n\r\n  const renderItem = useCallback(({ item }) => (\r\n    <RenderMonth date={item} handleDatePress={handleDatePress} taskDates={taskDates} />\r\n  ), [handleDatePress, taskDates]);\r\n\r\n  const getItemLayout = useCallback((_, index) => ({\r\n    length: 400, offset: 400 * index, index\r\n  }), []);\r\n\r\n  const keyExtractor = useCallback((item, index) => `${format(item, 'yyyy-MM')}-${index}`, []);\r\n\r\n  const modifiedRenderAddButton = useCallback(() => {\r\n    if (!isClosing) return renderAddButton();\r\n  }, [isClosing, renderAddButton]);\r\n\r\n  return (\r\n    <>\r\n      <FlatList\r\n        ref={flatListRef}\r\n        data={data}\r\n        initialNumToRender={5}\r\n        maxToRenderPerBatch={5}\r\n        windowSize={5}\r\n        renderItem={renderItem}\r\n        keyExtractor={keyExtractor}\r\n        getItemLayout={getItemLayout}\r\n        onEndReached={onEndReached}\r\n        onEndReachedThreshold={0.5}\r\n        showsVerticalScrollIndicator={false}\r\n        removeClippedSubviews={true}\r\n        initialScrollIndex={1}\r\n      />\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => closeModal()}\r\n      >\r\n        <Animated.View style={[styles.modalOverlay, { top: modalHeight.current }]} {...panResponder.panHandlers}>\r\n          <View style={styles.container}>\r\n            <View style={styles.contentContainer}>\r\n              <View style={styles.taskHeader}>\r\n                <Text style={styles.modalText}>{format(selectedDate, 'd-MMMM', { locale: ru })}</Text>\r\n              </View>\r\n              <ScrollView showsVerticalScrollIndicator={false} style={styles.modalScrollView} overScrollMode=\"never\">\r\n                <TasksForSelectedDateComponent\r\n                  tasksByClient={tasksBySelectedDate}\r\n                  expandedClients={expandedClients}\r\n                  toggleClient={handleToggleClient}\r\n                />\r\n              </ScrollView>\r\n\r\n            </View>\r\n          </View>\r\n        </Animated.View>\r\n        {modifiedRenderAddButton()}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nVerticalCalendar.propTypes = {\r\n  tasks: PropTypes.array.isRequired,\r\n  taskDates: PropTypes.object.isRequired,\r\n  renderAddButton: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default VerticalCalendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}