{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport axios from 'axios';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useNavigation } from '@react-navigation/native';\nimport { BackIcon, EditIcon, DeleteIcon, None, DocumentIcon } from \"../icons\";\nimport styles from \"../styles/styles\";\nimport { debounce } from 'lodash';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Pagination = React.memo(function (_ref) {\n  var currentPage = _ref.currentPage,\n    totalPages = _ref.totalPages,\n    onPageChange = _ref.onPageChange;\n  var pages = React.useMemo(function () {\n    return Array.from({\n      length: totalPages\n    }, function (_, i) {\n      return i + 1;\n    });\n  }, [totalPages]);\n  return _jsx(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    children: pages.map(function (page) {\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return onPageChange(page);\n        },\n        children: _jsx(Text, {\n          style: {\n            marginHorizontal: 8,\n            color: currentPage === page ? 'blue' : 'black'\n          },\n          children: page\n        })\n      }, page);\n    })\n  });\n});\nvar ChangeHistoryModal = function ChangeHistoryModal(_ref2) {\n  var isVisible = _ref2.isVisible,\n    onClose = _ref2.onClose;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    history = _useState2[0],\n    setHistory = _useState2[1];\n  useEffect(function () {\n    var fetchHistory = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        try {\n          var response = yield axios.get(`http://31.129.101.174/employees/changes/all`);\n          setHistory(response.data);\n        } catch (error) {\n          console.error('Ошибка при получении истории изменений:', error);\n        }\n      });\n      return function fetchHistory() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    if (isVisible) {\n      fetchHistory();\n    }\n  }, [isVisible]);\n  return _jsx(Modal, {\n    isVisible: isVisible,\n    onBackdropPress: onClose,\n    children: _jsx(SafeAreaView, {\n      style: styles.container,\n      children: _jsxs(ScrollView, {\n        children: [_jsx(View, {\n          style: styles.contentContainerTask,\n          children: _jsxs(View, {\n            style: styles.taskHeader,\n            children: [_jsx(TouchableOpacity, {\n              onPress: onClose,\n              children: _jsx(BackIcon, {})\n            }), _jsx(Text, {\n              style: [styles.titleMedium, {\n                flex: 1,\n                textAlign: 'center'\n              }],\n              children: \"\\u0416\\u0443\\u0440\\u043D\\u0430\\u043B \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0439\"\n            }), _jsx(TouchableOpacity, {\n              children: _jsx(None, {})\n            })]\n          })\n        }), history.map(function (change, index) {\n          return _jsxs(View, {\n            style: styles.historyItem,\n            children: [_jsxs(Text, {\n              children: [\"\\u0414\\u0430\\u0442\\u0430: \", change.change_timestamp]\n            }), _jsxs(Text, {\n              children: [\"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435: \", change.change_description]\n            }), _jsxs(Text, {\n              children: [\"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C: \", change.user_id]\n            })]\n          }, index);\n        })]\n      })\n    })\n  });\n};\nvar EmployeesScreen = function EmployeesScreen() {\n  var navigation = useNavigation();\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    employees = _useState4[0],\n    setEmployees = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    searchQuery = _useState6[0],\n    setSearchQuery = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedEmployees = _useState8[0],\n    setSelectedEmployees = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isEditing = _useState10[0],\n    setIsEditing = _useState10[1];\n  var _useState11 = useState({}),\n    _useState12 = _slicedToArray(_useState11, 2),\n    editableEmployees = _useState12[0],\n    setEditableEmployees = _useState12[1];\n  var _useState13 = useState(1),\n    _useState14 = _slicedToArray(_useState13, 2),\n    currentPage = _useState14[0],\n    setCurrentPage = _useState14[1];\n  var _useState15 = useState(0),\n    _useState16 = _slicedToArray(_useState15, 2),\n    totalPages = _useState16[0],\n    setTotalPages = _useState16[1];\n  var limit = 10;\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isHistoryModalVisible = _useState18[0],\n    setIsHistoryModalVisible = _useState18[1];\n  useEffect(function () {\n    fetchEmployees();\n  }, [currentPage]);\n  useEffect(function () {\n    if (selectedEmployees.length === 0 && isEditing) {\n      clearEditingState();\n    }\n  }, [selectedEmployees, isEditing]);\n  var fetchEmployees = useCallback(_asyncToGenerator(function* () {\n    try {\n      var response = yield axios.get('http://31.129.101.174/employees', {\n        params: {\n          page: currentPage,\n          limit: limit\n        }\n      });\n      setEmployees(response.data);\n      setTotalPages(response.data.totalPages);\n    } catch (error) {\n      console.error('Ошибка при загрузке сотрудников:', error);\n    }\n  }), [currentPage]);\n  var openHistoryModal = function openHistoryModal() {\n    return setIsHistoryModalVisible(true);\n  };\n  var debouncedSearch = useCallback(debounce(function (query) {\n    if (!query) {\n      fetchEmployees();\n    } else {\n      var lowercasedQuery = query.toLowerCase();\n      setEmployees(employees.filter(function (employee) {\n        return employee.full_name.toLowerCase().includes(lowercasedQuery) || employee.phone_number.toLowerCase().includes(lowercasedQuery) || employee.email.toLowerCase().includes(lowercasedQuery);\n      }));\n    }\n  }, 300), [employees]);\n  useEffect(function () {\n    debouncedSearch(searchQuery);\n  }, [searchQuery]);\n  var handleSearchChange = function handleSearchChange(text) {\n    return setSearchQuery(text);\n  };\n  var assembleFullAddress = useCallback(function (address) {\n    return `город ${address.city}, улица ${address.street}, дом ${address.building}, подъезд ${address.entrance}, этаж ${address.floor}`;\n  }, []);\n  var handleModalFormSubmit = useCallback(function () {\n    var _ref5 = _asyncToGenerator(function* (employeeData) {\n      if (!employeeData.full_name || !employeeData.phone_number || Object.values(employeeData).some(function (val) {\n        return !val;\n      })) {\n        Alert.alert('Ошибка', 'Заполните все поля.');\n        return;\n      }\n      var dataToSend = {\n        full_name: employeeData.full_name,\n        phone_number: employeeData.phone_number,\n        email: employeeData.email,\n        position: employeeData.position\n      };\n      try {\n        if (employeeData.id && employeeData.id !== 9999999) {\n          yield axios.put(`http://31.129.101.174/employees/${employeeData.id}`, dataToSend);\n        } else {\n          var response = yield axios.post('http://31.129.101.174/employees', dataToSend);\n          if (response.data && response.data.id) {\n            setEmployees(function (prevEmployees) {\n              return [].concat(_toConsumableArray(prevEmployees), [_objectSpread(_objectSpread({}, dataToSend), {}, {\n                id: response.data.id\n              })]);\n            });\n          }\n        }\n      } catch (error) {\n        console.error('Ошибка при отправке данных сотрудника:', error);\n        Alert.alert('Ошибка', 'Произошла ошибка при отправке данных');\n      }\n    });\n    return function (_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }(), []);\n  var clearEditingState = function clearEditingState() {\n    setIsEditing(false);\n    setEditableEmployees({});\n    setSelectedEmployees([]);\n  };\n  var handleButtonPress = React.useCallback(_asyncToGenerator(function* () {\n    if (isEditing) {\n      try {\n        yield Promise.all(Object.values(editableEmployees).map(function () {\n          var _ref7 = _asyncToGenerator(function* (employeeData) {\n            yield handleModalFormSubmit(employeeData);\n          });\n          return function (_x2) {\n            return _ref7.apply(this, arguments);\n          };\n        }()));\n        yield fetchEmployees();\n        clearEditingState();\n      } catch (error) {\n        console.error('Ошибка при обновлении данных сотрудников:', error);\n        Alert.alert('Ошибка', 'Произошла ошибка при обновлении данных сотрудников');\n      }\n    } else {\n      var newEmployeeId = 9999999;\n      var newEmployeeData = {\n        id: newEmployeeId,\n        full_name: '',\n        phone_number: '',\n        email: '',\n        position: ''\n      };\n      setEmployees(function (prevEmployees) {\n        return [].concat(_toConsumableArray(prevEmployees), [newEmployeeData]);\n      });\n      setEditableEmployees(_defineProperty({}, newEmployeeId, newEmployeeData));\n      setIsEditing(true);\n      setSelectedEmployees([newEmployeeId]);\n    }\n  }), [isEditing, editableEmployees]);\n  var handleEmployeeDataChange = function handleEmployeeDataChange(employeeId, key, value) {\n    setEditableEmployees(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, employeeId, _objectSpread(_objectSpread({}, prev[employeeId]), {}, _defineProperty({}, key, value))));\n    });\n  };\n  var handleEditPress = function handleEditPress() {\n    if (selectedEmployees.length > 0) {\n      var editable = selectedEmployees.reduce(function (acc, employeeId) {\n        var employee = employees.find(function (e) {\n          return e.id === employeeId;\n        });\n        if (employee) {\n          acc[employeeId] = _objectSpread({}, employee);\n        }\n        return acc;\n      }, {});\n      setEditableEmployees(editable);\n      setIsEditing(true);\n    } else {\n      Alert.alert('Выберите сотрудника', 'Для редактирования выберите сотрудника из списка.');\n    }\n  };\n  var handleDeleteEmployee = function () {\n    var _ref8 = _asyncToGenerator(function* (employeeId) {\n      try {\n        yield axios.delete(`http://31.129.101.174/employees/${employeeId}`);\n        fetchEmployees();\n      } catch (error) {\n        console.error('Ошибка при удалении сотрудника:', error);\n      }\n    });\n    return function handleDeleteEmployee(_x3) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var handleSelectEmployee = function handleSelectEmployee(employeeId) {\n    setSelectedEmployees(function (prevSelected) {\n      var newSelectedEmployees = prevSelected.includes(employeeId) ? prevSelected.filter(function (id) {\n        return id !== employeeId;\n      }) : [].concat(_toConsumableArray(prevSelected), [employeeId]);\n      return newSelectedEmployees;\n    });\n  };\n  var handleSelectAllEmployees = function handleSelectAllEmployees() {\n    if (selectedEmployees.length === employees.length) {\n      setSelectedEmployees([]);\n    } else {\n      setSelectedEmployees(employees.map(function (employee) {\n        return employee.id;\n      }));\n    }\n  };\n  var renderRow = useCallback(function (_ref9) {\n    var item = _ref9.item;\n    return _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(View, {\n        style: styles.headercheckboxTableCell,\n        children: _jsx(TouchableOpacity, {\n          style: styles.checkboxTable,\n          onPress: function onPress() {\n            return handleSelectEmployee(item.id);\n          },\n          children: selectedEmployees.includes(item.id) && _jsx(View, {\n            style: styles.checkboxTableSelected\n          })\n        })\n      }), editableEmployees[item.id] ? _jsxs(React.Fragment, {\n        children: [_jsx(TextInput, {\n          style: styles.cell,\n          value: editableEmployees[item.id].full_name,\n          onChangeText: function onChangeText(text) {\n            return handleEmployeeDataChange(item.id, 'full_name', text);\n          }\n        }), _jsx(TextInput, {\n          style: styles.cell,\n          value: editableEmployees[item.id].phone_number,\n          onChangeText: function onChangeText(text) {\n            return handleEmployeeDataChange(item.id, 'phone_number', text);\n          }\n        }), _jsx(TextInput, {\n          style: styles.cell,\n          value: editableEmployees[item.id].email,\n          onChangeText: function onChangeText(text) {\n            return handleEmployeeDataChange(item.id, 'email', text);\n          }\n        }), _jsx(TextInput, {\n          style: styles.cell,\n          value: editableEmployees[item.id].position,\n          onChangeText: function onChangeText(text) {\n            return handleEmployeeDataChange(item.id, 'position', text);\n          }\n        })]\n      }) : _jsxs(React.Fragment, {\n        children: [_jsx(Text, {\n          style: styles.cell,\n          children: item.full_name\n        }), _jsx(Text, {\n          style: styles.cell,\n          children: item.phone_number\n        }), _jsx(Text, {\n          style: styles.cell,\n          children: item.email\n        }), _jsx(Text, {\n          style: styles.cell,\n          children: item.position\n        })]\n      })]\n    });\n  }, [editableEmployees, selectedEmployees]);\n  var handleBackPress = function handleBackPress() {\n    if (isEditing) {\n      if (selectedEmployees.length === 0) {\n        confirmCancelEditing();\n      } else {\n        Alert.alert(\"Предупреждение\", \"Данные могут не сохраниться. Отменить редактирование?\", [{\n          text: \"Нет\"\n        }, {\n          text: \"Да\",\n          onPress: confirmCancelEditing\n        }], {\n          cancelable: false\n        });\n      }\n    } else {\n      navigation.goBack();\n    }\n  };\n  var confirmCancelEditing = function confirmCancelEditing() {\n    setIsEditing(false);\n    setEditableEmployees({});\n    setSelectedEmployees([]);\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.contentContainerTask,\n      children: [_jsxs(View, {\n        style: styles.taskHeader,\n        children: [_jsx(TouchableOpacity, {\n          onPress: handleBackPress,\n          children: _jsx(BackIcon, {})\n        }), _jsx(Text, {\n          style: [styles.titleMedium, {\n            flex: 1,\n            textAlign: 'center'\n          }],\n          children: \"\\u0411\\u0430\\u0437\\u0430 \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u043E\\u0432\"\n        }), selectedEmployees.length === 0 ? _jsx(TouchableOpacity, {\n          onPress: openHistoryModal,\n          children: _jsx(DocumentIcon, {})\n        }) : isEditing ? _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return handleDeleteEmployee(selectedEmployees[0]);\n          },\n          children: _jsx(DeleteIcon, {})\n        }) : _jsx(TouchableOpacity, {\n          onPress: handleEditPress,\n          children: _jsx(EditIcon, {})\n        })]\n      }), _jsx(TextInput, {\n        style: styles.searchInput,\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u0441\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0430\\u043C\",\n        onChangeText: handleSearchChange,\n        value: searchQuery\n      }), isHistoryModalVisible && _jsx(ChangeHistoryModal, {\n        isVisible: isHistoryModalVisible,\n        onClose: function onClose() {\n          return setIsHistoryModalVisible(false);\n        }\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        overScrollMode: \"never\",\n        children: _jsx(SafeAreaView, {\n          children: _jsx(FlatList, {\n            data: employees,\n            keyExtractor: function keyExtractor(item) {\n              return String(item.id);\n            },\n            renderItem: renderRow,\n            ListHeaderComponent: _jsxs(View, {\n              style: styles.headerTable,\n              children: [_jsx(View, {\n                style: styles.headercheckboxTableCell,\n                children: _jsx(TouchableOpacity, {\n                  style: styles.checkboxTable,\n                  onPress: handleSelectAllEmployees,\n                  children: selectedEmployees.length === employees.length ? _jsx(View, {\n                    style: styles.checkboxTableSelected\n                  }) : null\n                })\n              }), _jsx(Text, {\n                style: styles.headerCell,\n                children: \"\\u0424\\u0418\\u041E\"\n              }), _jsx(Text, {\n                style: styles.headerCell,\n                children: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\"\n              }), _jsx(Text, {\n                style: styles.headerCell,\n                children: \"Email\"\n              }), _jsx(Text, {\n                style: styles.headerCell,\n                children: \"\\u0414\\u043E\\u043B\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C\"\n              })]\n            }),\n            ListFooterComponent: _jsx(Pagination, {\n              currentPage: currentPage,\n              totalPages: totalPages,\n              onPageChange: setCurrentPage\n            })\n          })\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.addButton,\n        onPress: handleButtonPress,\n        children: _jsx(Text, {\n          style: styles.addButtonText,\n          children: isEditing ? \"Применить изменения\" : \"Добавить сотрудника\"\n        })\n      })]\n    })\n  });\n};\nexport default EmployeesScreen;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","View","Text","FlatList","ScrollView","Button","Alert","TextInput","TouchableOpacity","Modal","axios","SafeAreaView","useNavigation","BackIcon","EditIcon","DeleteIcon","None","DocumentIcon","styles","debounce","jsx","_jsx","jsxs","_jsxs","Pagination","memo","_ref","currentPage","totalPages","onPageChange","pages","Array","from","length","_","i","style","flexDirection","justifyContent","children","map","page","onPress","marginHorizontal","color","ChangeHistoryModal","_ref2","isVisible","onClose","_useState","_useState2","_slicedToArray","history","setHistory","fetchHistory","_ref3","_asyncToGenerator","response","get","data","error","console","apply","arguments","onBackdropPress","container","contentContainerTask","taskHeader","titleMedium","flex","textAlign","change","index","historyItem","change_timestamp","change_description","user_id","EmployeesScreen","navigation","_useState3","_useState4","employees","setEmployees","_useState5","_useState6","searchQuery","setSearchQuery","_useState7","_useState8","selectedEmployees","setSelectedEmployees","_useState9","_useState10","isEditing","setIsEditing","_useState11","_useState12","editableEmployees","setEditableEmployees","_useState13","_useState14","setCurrentPage","_useState15","_useState16","setTotalPages","limit","_useState17","_useState18","isHistoryModalVisible","setIsHistoryModalVisible","fetchEmployees","clearEditingState","params","openHistoryModal","debouncedSearch","query","lowercasedQuery","toLowerCase","filter","employee","full_name","includes","phone_number","email","handleSearchChange","text","assembleFullAddress","address","city","street","building","entrance","floor","handleModalFormSubmit","_ref5","employeeData","Object","values","some","val","alert","dataToSend","position","id","put","post","prevEmployees","concat","_toConsumableArray","_objectSpread","_x","handleButtonPress","Promise","all","_ref7","_x2","newEmployeeId","newEmployeeData","_defineProperty","handleEmployeeDataChange","employeeId","key","value","prev","handleEditPress","editable","reduce","acc","find","e","handleDeleteEmployee","_ref8","delete","_x3","handleSelectEmployee","prevSelected","newSelectedEmployees","handleSelectAllEmployees","renderRow","_ref9","item","row","headercheckboxTableCell","checkboxTable","checkboxTableSelected","Fragment","cell","onChangeText","handleBackPress","confirmCancelEditing","cancelable","goBack","searchInput","placeholder","horizontal","overScrollMode","keyExtractor","String","renderItem","ListHeaderComponent","headerTable","headerCell","ListFooterComponent","addButton","addButtonText"],"sources":["C:/Users/fred/Desktop/crm/src/screens/EmployeesScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { View, Text, FlatList, ScrollView, Button, Alert, TextInput, TouchableOpacity, Modal } from 'react-native';\r\nimport axios from 'axios';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { BackIcon, EditIcon, DeleteIcon, None, DocumentIcon } from '../icons';\r\nimport styles from '../styles/styles';\r\nimport { debounce } from 'lodash';\r\n\r\nconst Pagination = React.memo(({ currentPage, totalPages, onPageChange }) => {\r\n  const pages = React.useMemo(() => {\r\n    return Array.from({ length: totalPages }, (_, i) => i + 1);\r\n  }, [totalPages]);\r\n\r\n  return (\r\n    <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\r\n      {pages.map(page => (\r\n        <TouchableOpacity key={page} onPress={() => onPageChange(page)}>\r\n          <Text style={{ marginHorizontal: 8, color: currentPage === page ? 'blue' : 'black' }}>\r\n            {page}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n});\r\n\r\nconst ChangeHistoryModal = ({ isVisible, onClose }) => {\r\n  const [history, setHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchHistory = async () => {\r\n      try {\r\n        const response = await axios.get(`http://31.129.101.174/employees/changes/all`);\r\n        setHistory(response.data);\r\n      } catch (error) {\r\n        console.error('Ошибка при получении истории изменений:', error);\r\n      }\r\n    };\r\n\r\n    if (isVisible) {\r\n      fetchHistory();\r\n    }\r\n  }, [isVisible]);\r\n\r\n  return (\r\n    <Modal isVisible={isVisible} onBackdropPress={onClose}>\r\n      <SafeAreaView style={styles.container}>\r\n        <ScrollView>\r\n          <View style={styles.contentContainerTask}>\r\n            <View style={styles.taskHeader}>\r\n              <TouchableOpacity onPress={onClose}>\r\n                <BackIcon />\r\n              </TouchableOpacity>\r\n              <Text style={[styles.titleMedium, { flex: 1, textAlign: 'center' }]}>Журнал изменений</Text>\r\n              <TouchableOpacity>\r\n                <None />\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n          {history.map((change, index) => (\r\n            <View key={index} style={styles.historyItem}>\r\n              <Text>Дата: {change.change_timestamp}</Text>\r\n              <Text>Описание: {change.change_description}</Text>\r\n              <Text>Пользователь: {change.user_id}</Text>\r\n            </View>\r\n          ))}\r\n        </ScrollView>\r\n      </SafeAreaView>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst EmployeesScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [employees, setEmployees] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editableEmployees, setEditableEmployees] = useState({});\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const limit = 10;\r\n  const [isHistoryModalVisible, setIsHistoryModalVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchEmployees();\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    if (selectedEmployees.length === 0 && isEditing) {\r\n      clearEditingState();\r\n    }\r\n  }, [selectedEmployees, isEditing]);\r\n\r\n  const fetchEmployees = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('http://31.129.101.174/employees', {\r\n        params: { page: currentPage, limit }\r\n      });\r\n      setEmployees(response.data);\r\n      setTotalPages(response.data.totalPages);\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке сотрудников:', error);\r\n    }\r\n  }, [currentPage]);\r\n\r\n  const openHistoryModal = () => setIsHistoryModalVisible(true);\r\n\r\n  const debouncedSearch = useCallback(debounce((query) => {\r\n    if (!query) {\r\n      fetchEmployees();\r\n    } else {\r\n      const lowercasedQuery = query.toLowerCase();\r\n      setEmployees(employees.filter(employee =>\r\n        employee.full_name.toLowerCase().includes(lowercasedQuery) ||\r\n        employee.phone_number.toLowerCase().includes(lowercasedQuery) ||\r\n        employee.email.toLowerCase().includes(lowercasedQuery)\r\n      ));\r\n    }\r\n  }, 300), [employees]);\r\n\r\n  useEffect(() => {\r\n    debouncedSearch(searchQuery);\r\n  }, [searchQuery]);\r\n\r\n  const handleSearchChange = (text) => setSearchQuery(text);\r\n\r\n  const assembleFullAddress = useCallback((address) => {\r\n    return `город ${address.city}, улица ${address.street}, дом ${address.building}, подъезд ${address.entrance}, этаж ${address.floor}`;\r\n  }, []);\r\n\r\n  const handleModalFormSubmit = useCallback(async (employeeData) => {\r\n    // Изменил clientData на employeeData\r\n    if (!employeeData.full_name || !employeeData.phone_number || Object.values(employeeData).some(val => !val)) {\r\n      Alert.alert('Ошибка', 'Заполните все поля.');\r\n      return;\r\n    }\r\n\r\n    const dataToSend = {\r\n      full_name: employeeData.full_name,\r\n      phone_number: employeeData.phone_number,\r\n      email: employeeData.email,\r\n      position: employeeData.position,\r\n    };\r\n\r\n    try {\r\n      if (employeeData.id && employeeData.id !== 9999999) {\r\n        await axios.put(`http://31.129.101.174/employees/${employeeData.id}`, dataToSend);\r\n      } else {\r\n        const response = await axios.post('http://31.129.101.174/employees', dataToSend);\r\n        if (response.data && response.data.id) {\r\n          setEmployees(prevEmployees => [...prevEmployees, { ...dataToSend, id: response.data.id }]);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при отправке данных сотрудника:', error);\r\n      Alert.alert('Ошибка', 'Произошла ошибка при отправке данных');\r\n    }\r\n  }, []);\r\n\r\n  const clearEditingState = () => {\r\n    setIsEditing(false);\r\n    setEditableEmployees({});\r\n    setSelectedEmployees([]);\r\n  };\r\n\r\n  const handleButtonPress = React.useCallback(async () => {\r\n    if (isEditing) {\r\n      try {\r\n        await Promise.all(Object.values(editableEmployees).map(async (employeeData) => {\r\n          await handleModalFormSubmit(employeeData);\r\n        }));\r\n\r\n        await fetchEmployees();\r\n\r\n        clearEditingState();\r\n      } catch (error) {\r\n        console.error('Ошибка при обновлении данных сотрудников:', error);\r\n        Alert.alert('Ошибка', 'Произошла ошибка при обновлении данных сотрудников');\r\n      }\r\n    } else {\r\n      const newEmployeeId = 9999999;\r\n      const newEmployeeData = {\r\n        id: newEmployeeId,\r\n        full_name: '',\r\n        phone_number: '',\r\n        email: '',\r\n        position: ''\r\n      };\r\n\r\n      setEmployees(prevEmployees => [...prevEmployees, newEmployeeData]);\r\n      setEditableEmployees({ [newEmployeeId]: newEmployeeData });\r\n      setIsEditing(true);\r\n      setSelectedEmployees([newEmployeeId]);\r\n    }\r\n  }, [isEditing, editableEmployees]);\r\n\r\n  const handleEmployeeDataChange = (employeeId, key, value) => {\r\n    setEditableEmployees(prev => ({\r\n      ...prev,\r\n      [employeeId]: {\r\n        ...prev[employeeId],\r\n        [key]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleEditPress = () => {\r\n    if (selectedEmployees.length > 0) {\r\n      const editable = selectedEmployees.reduce((acc, employeeId) => {\r\n        const employee = employees.find(e => e.id === employeeId);\r\n        if (employee) {\r\n          acc[employeeId] = { ...employee };\r\n        }\r\n        return acc;\r\n      }, {});\r\n\r\n      setEditableEmployees(editable);\r\n      setIsEditing(true);\r\n    } else {\r\n      Alert.alert('Выберите сотрудника', 'Для редактирования выберите сотрудника из списка.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteEmployee = async (employeeId) => {\r\n    try {\r\n      await axios.delete(`http://31.129.101.174/employees/${employeeId}`);\r\n      fetchEmployees();\r\n    } catch (error) {\r\n      console.error('Ошибка при удалении сотрудника:', error);\r\n    }\r\n  };\r\n\r\n  const handleSelectEmployee = (employeeId) => {\r\n    setSelectedEmployees(prevSelected => {\r\n      const newSelectedEmployees = prevSelected.includes(employeeId)\r\n        ? prevSelected.filter(id => id !== employeeId)\r\n        : [...prevSelected, employeeId];\r\n      return newSelectedEmployees;\r\n    });\r\n  };\r\n\r\n  const handleSelectAllEmployees = () => {\r\n    if (selectedEmployees.length === employees.length) {\r\n      setSelectedEmployees([]);\r\n    } else {\r\n      setSelectedEmployees(employees.map(employee => employee.id));\r\n    }\r\n  };\r\n\r\n  const renderRow = useCallback(({ item }) => (\r\n    <View style={styles.row}>\r\n      <View style={styles.headercheckboxTableCell}>\r\n        <TouchableOpacity\r\n          style={styles.checkboxTable}\r\n          onPress={() => handleSelectEmployee(item.id)}\r\n        >\r\n          {selectedEmployees.includes(item.id) && <View style={styles.checkboxTableSelected} />}\r\n        </TouchableOpacity>\r\n      </View>\r\n      {editableEmployees[item.id] ? (\r\n        <React.Fragment>\r\n          <TextInput\r\n            style={styles.cell}\r\n            value={editableEmployees[item.id].full_name}\r\n            onChangeText={(text) => handleEmployeeDataChange(item.id, 'full_name', text)}\r\n          />\r\n          <TextInput\r\n            style={styles.cell}\r\n            value={editableEmployees[item.id].phone_number}\r\n            onChangeText={(text) => handleEmployeeDataChange(item.id, 'phone_number', text)}\r\n          />\r\n          <TextInput\r\n            style={styles.cell}\r\n            value={editableEmployees[item.id].email}\r\n            onChangeText={(text) => handleEmployeeDataChange(item.id, 'email', text)}\r\n          />\r\n          <TextInput\r\n            style={styles.cell}\r\n            value={editableEmployees[item.id].position}\r\n            onChangeText={(text) => handleEmployeeDataChange(item.id, 'position', text)}\r\n          />\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          <Text style={styles.cell}>{item.full_name}</Text>\r\n          <Text style={styles.cell}>{item.phone_number}</Text>\r\n          <Text style={styles.cell}>{item.email}</Text>\r\n          <Text style={styles.cell}>{item.position}</Text>\r\n        </React.Fragment>\r\n      )}\r\n    </View>\r\n  ), [editableEmployees, selectedEmployees]);\r\n\r\n  const handleBackPress = () => {\r\n    if (isEditing) {\r\n      if (selectedEmployees.length === 0) {\r\n        confirmCancelEditing();\r\n      } else {\r\n        Alert.alert(\r\n          \"Предупреждение\",\r\n          \"Данные могут не сохраниться. Отменить редактирование?\",\r\n          [\r\n            { text: \"Нет\" },\r\n            { text: \"Да\", onPress: confirmCancelEditing }\r\n          ],\r\n          { cancelable: false }\r\n        );\r\n      }\r\n    } else {\r\n      navigation.goBack();\r\n    }\r\n  };\r\n\r\n  const confirmCancelEditing = () => {\r\n    setIsEditing(false);\r\n    setEditableEmployees({});\r\n    setSelectedEmployees([]);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.contentContainerTask}>\r\n        <View style={styles.taskHeader}>\r\n          <TouchableOpacity onPress={handleBackPress}>\r\n            <BackIcon />\r\n          </TouchableOpacity>\r\n          <Text style={[styles.titleMedium, { flex: 1, textAlign: 'center' }]}>База сотрудников</Text>\r\n          {selectedEmployees.length === 0 ? (\r\n            <TouchableOpacity onPress={openHistoryModal}>\r\n              <DocumentIcon />\r\n            </TouchableOpacity>\r\n          ) : isEditing ? (\r\n            <TouchableOpacity onPress={() => handleDeleteEmployee(selectedEmployees[0])}>\r\n              <DeleteIcon />\r\n            </TouchableOpacity>\r\n          ) : (\r\n            <TouchableOpacity onPress={handleEditPress}>\r\n              <EditIcon />\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <TextInput\r\n          style={styles.searchInput}\r\n          placeholder=\"Поиск по сотрудникам\"\r\n          onChangeText={handleSearchChange}\r\n          value={searchQuery}\r\n        />\r\n        {isHistoryModalVisible && (\r\n          <ChangeHistoryModal\r\n            isVisible={isHistoryModalVisible}\r\n            onClose={() => setIsHistoryModalVisible(false)}\r\n          />\r\n        )}\r\n        <ScrollView horizontal overScrollMode=\"never\">\r\n          <SafeAreaView>\r\n            <FlatList\r\n              data={employees}\r\n              keyExtractor={(item) => String(item.id)}\r\n              renderItem={renderRow}\r\n              ListHeaderComponent={\r\n                <View style={styles.headerTable}>\r\n                  <View style={styles.headercheckboxTableCell}>\r\n                    <TouchableOpacity\r\n                      style={styles.checkboxTable}\r\n                      onPress={handleSelectAllEmployees}\r\n                    >\r\n                      {selectedEmployees.length === employees.length ? (\r\n                        <View style={styles.checkboxTableSelected} />\r\n                      ) : null}\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                  <Text style={styles.headerCell}>ФИО</Text>\r\n                  <Text style={styles.headerCell}>Телефон</Text>\r\n                  <Text style={styles.headerCell}>Email</Text>\r\n                  <Text style={styles.headerCell}>Должность</Text>\r\n                </View>\r\n              }\r\n              ListFooterComponent={\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  totalPages={totalPages}\r\n                  onPageChange={setCurrentPage}\r\n                />\r\n              }\r\n            />\r\n          </SafeAreaView>\r\n        </ScrollView>\r\n        <TouchableOpacity style={styles.addButton} onPress={handleButtonPress}>\r\n          <Text style={styles.addButtonText}>\r\n            {isEditing ? \"Применить изменения\" : \"Добавить сотрудника\"}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default EmployeesScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}