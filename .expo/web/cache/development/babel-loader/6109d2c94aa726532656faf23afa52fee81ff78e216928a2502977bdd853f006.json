{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { format, addMonths, startOfMonth, parseISO } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport styles from \"../styles/styles\";\nimport RenderMonth from \"./RenderMonth\";\nimport TasksForSelectedDateComponent from \"./TasksForSelectedDateComponent\";\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get('window').height;\nvar VerticalCalendar = function VerticalCalendar(_ref) {\n  var tasks = _ref.tasks,\n    taskDates = _ref.taskDates,\n    renderAddButton = _ref.renderAddButton;\n  var flatListRef = useRef(null);\n  var _useState = useState(new Date()),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDate = _useState2[0],\n    setSelectedDate = _useState2[1];\n  var _useState3 = useState(Array.from({\n      length: 5\n    }, function (_, i) {\n      return addMonths(startOfMonth(new Date()), i - 2);\n    })),\n    _useState4 = _slicedToArray(_useState3, 2),\n    data = _useState4[0],\n    setData = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    page = _useState6[0],\n    setPage = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    modalVisible = _useState8[0],\n    setModalVisible = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isClosing = _useState10[0],\n    setIsClosing = _useState10[1];\n  var _useState11 = useState(new Set()),\n    _useState12 = _slicedToArray(_useState11, 2),\n    expandedClients = _useState12[0],\n    setExpandedClients = _useState12[1];\n  var handleToggleClient = useCallback(function (client) {\n    setExpandedClients(function (current) {\n      var updated = new Set(current);\n      if (updated.has(client)) {\n        updated.delete(client);\n      } else {\n        updated.add(client);\n      }\n      return updated;\n    });\n  }, []);\n  var tasksBySelectedDate = useMemo(function () {\n    return tasks.filter(function (task) {\n      return format(parseISO(task.start_date), 'yyyy-MM-dd') === format(selectedDate, 'yyyy-MM-dd');\n    }).reduce(function (acc, task) {\n      var client = task.fullname_client;\n      acc[client] = acc[client] || [];\n      acc[client].push(task);\n      return acc;\n    }, {});\n  }, [tasks, selectedDate]);\n  var onEndReached = useCallback(function () {\n    setData(function (prevData) {\n      var start = addMonths(startOfMonth(new Date()), page * 5 - 2);\n      var newData = Array.from({\n        length: 5\n      }, function (_, i) {\n        return addMonths(start, i);\n      });\n      return _toConsumableArray(new Set([].concat(_toConsumableArray(prevData), newData)));\n    });\n    setPage(function (prevPage) {\n      return prevPage + 1;\n    });\n  }, [page]);\n  useEffect(function () {\n    var _flatListRef$current;\n    (_flatListRef$current = flatListRef.current) == null ? void 0 : _flatListRef$current.scrollToIndex({\n      index: 2,\n      animated: false\n    });\n  }, []);\n  var handleDatePress = useCallback(function (day) {\n    setSelectedDate(day);\n    setModalVisible(true);\n  }, []);\n  var renderItem = useCallback(function (_ref2) {\n    var item = _ref2.item;\n    return _jsx(RenderMonth, {\n      date: item,\n      handleDatePress: handleDatePress,\n      taskDates: taskDates\n    });\n  }, [handleDatePress, taskDates]);\n  var getItemLayout = useCallback(function (_, index) {\n    return {\n      length: 400,\n      offset: 400 * index,\n      index: index\n    };\n  }, []);\n  var keyExtractor = useCallback(function (item, index) {\n    return `${format(item, 'yyyy-MM')}-${index}`;\n  }, []);\n  var modifiedRenderAddButton = useCallback(function () {\n    if (!isClosing) return renderAddButton();\n  }, [isClosing, renderAddButton]);\n  return _jsxs(_Fragment, {\n    children: [_jsx(FlatList, {\n      ref: flatListRef,\n      data: data,\n      initialNumToRender: 5,\n      maxToRenderPerBatch: 5,\n      windowSize: 5,\n      renderItem: renderItem,\n      keyExtractor: keyExtractor,\n      getItemLayout: getItemLayout,\n      onEndReached: onEndReached,\n      onEndReachedThreshold: 0.5,\n      showsVerticalScrollIndicator: false,\n      removeClippedSubviews: true,\n      initialScrollIndex: 1\n    }), _jsxs(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        return closeModal();\n      },\n      children: [_jsx(View, {\n        style: styles.container,\n        children: _jsxs(View, {\n          style: styles.contentContainer,\n          children: [_jsx(View, {\n            style: styles.taskHeader,\n            children: _jsx(Text, {\n              style: styles.modalText,\n              children: format(selectedDate, 'd-MMMM', {\n                locale: ru\n              })\n            })\n          }), _jsx(ScrollView, {\n            showsVerticalScrollIndicator: false,\n            style: styles.modalScrollView,\n            overScrollMode: \"never\",\n            children: _jsx(TasksForSelectedDateComponent, {\n              tasksByClient: tasksBySelectedDate,\n              expandedClients: expandedClients,\n              toggleClient: handleToggleClient\n            })\n          })]\n        })\n      }), modifiedRenderAddButton()]\n    })]\n  });\n};\nVerticalCalendar.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  taskDates: PropTypes.object.isRequired,\n  renderAddButton: PropTypes.func.isRequired\n};\nexport default VerticalCalendar;","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useMemo","View","Text","FlatList","Modal","Animated","PanResponder","Dimensions","ScrollView","format","addMonths","startOfMonth","parseISO","ru","styles","RenderMonth","TasksForSelectedDateComponent","PropTypes","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","screenHeight","get","height","VerticalCalendar","_ref","tasks","taskDates","renderAddButton","flatListRef","_useState","Date","_useState2","_slicedToArray","selectedDate","setSelectedDate","_useState3","Array","from","length","_","i","_useState4","data","setData","_useState5","_useState6","page","setPage","_useState7","_useState8","modalVisible","setModalVisible","_useState9","_useState10","isClosing","setIsClosing","_useState11","Set","_useState12","expandedClients","setExpandedClients","handleToggleClient","client","current","updated","has","delete","add","tasksBySelectedDate","filter","task","start_date","reduce","acc","fullname_client","push","onEndReached","prevData","start","newData","_toConsumableArray","concat","prevPage","_flatListRef$current","scrollToIndex","index","animated","handleDatePress","day","renderItem","_ref2","item","date","getItemLayout","offset","keyExtractor","modifiedRenderAddButton","children","ref","initialNumToRender","maxToRenderPerBatch","windowSize","onEndReachedThreshold","showsVerticalScrollIndicator","removeClippedSubviews","initialScrollIndex","animationType","transparent","visible","onRequestClose","closeModal","style","container","contentContainer","taskHeader","modalText","locale","modalScrollView","overScrollMode","tasksByClient","toggleClient","propTypes","array","isRequired","object","func"],"sources":["C:/Users/fred/Desktop/client/src/components/VerticalCalendar.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\r\nimport { View, Text, FlatList, Modal, Animated, PanResponder, Dimensions, ScrollView } from 'react-native';\r\nimport { format, addMonths, startOfMonth, parseISO } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\nimport styles from '../styles/styles';\r\nimport RenderMonth from './RenderMonth';\r\nimport TasksForSelectedDateComponent from './TasksForSelectedDateComponent';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\nconst VerticalCalendar = ({ tasks, taskDates, renderAddButton }) => {\r\n  const flatListRef = useRef(null);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [data, setData] = useState(Array.from({ length: 5 }, (_, i) => addMonths(startOfMonth(new Date()), i - 2)));\r\n  const [page, setPage] = useState(0);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [isClosing, setIsClosing] = useState(false);\r\n\r\n  const [expandedClients, setExpandedClients] = useState(new Set());\r\n\r\n  const handleToggleClient = useCallback((client) => {\r\n    setExpandedClients((current) => {\r\n      const updated = new Set(current);\r\n      if (updated.has(client)) {\r\n        updated.delete(client);\r\n      } else {\r\n        updated.add(client);\r\n      }\r\n      return updated;\r\n    });\r\n  }, []);\r\n\r\n  const tasksBySelectedDate = useMemo(() => tasks.filter(task =>\r\n    format(parseISO(task.start_date), 'yyyy-MM-dd') === format(selectedDate, 'yyyy-MM-dd')\r\n  ).reduce((acc, task) => {\r\n    const client = task.fullname_client;\r\n    acc[client] = acc[client] || [];\r\n    acc[client].push(task);\r\n    return acc;\r\n  }, {}), [tasks, selectedDate]);\r\n\r\n  const onEndReached = useCallback(() => {\r\n    setData(prevData => {\r\n      const start = addMonths(startOfMonth(new Date()), page * 5 - 2);\r\n      const newData = Array.from({ length: 5 }, (_, i) => addMonths(start, i));\r\n      return [...new Set([...prevData, ...newData])];\r\n    });\r\n    setPage(prevPage => prevPage + 1);\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    flatListRef.current?.scrollToIndex({ index: 2, animated: false });\r\n  }, []);\r\n\r\n  const handleDatePress = useCallback((day) => {\r\n    setSelectedDate(day);\r\n    setModalVisible(true);\r\n  }, []);\r\n\r\n  const renderItem = useCallback(({ item }) => (\r\n    <RenderMonth date={item} handleDatePress={handleDatePress} taskDates={taskDates} />\r\n  ), [handleDatePress, taskDates]);\r\n\r\n  const getItemLayout = useCallback((_, index) => ({\r\n    length: 400, offset: 400 * index, index\r\n  }), []);\r\n\r\n  const keyExtractor = useCallback((item, index) => `${format(item, 'yyyy-MM')}-${index}`, []);\r\n\r\n  const modifiedRenderAddButton = useCallback(() => {\r\n    if (!isClosing) return renderAddButton();\r\n  }, [isClosing, renderAddButton]);\r\n\r\n  return (\r\n    <>\r\n      <FlatList\r\n        ref={flatListRef}\r\n        data={data}\r\n        initialNumToRender={5}\r\n        maxToRenderPerBatch={5}\r\n        windowSize={5}\r\n        renderItem={renderItem}\r\n        keyExtractor={keyExtractor}\r\n        getItemLayout={getItemLayout}\r\n        onEndReached={onEndReached}\r\n        onEndReachedThreshold={0.5}\r\n        showsVerticalScrollIndicator={false}\r\n        removeClippedSubviews={true}\r\n        initialScrollIndex={1}\r\n      />\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => closeModal()}\r\n      >\r\n        <View style={styles.container}>\r\n          <View style={styles.contentContainer}>\r\n            <View style={styles.taskHeader}>\r\n              <Text style={styles.modalText}>{format(selectedDate, 'd-MMMM', { locale: ru })}</Text>\r\n            </View>\r\n            <ScrollView showsVerticalScrollIndicator={false} style={styles.modalScrollView} overScrollMode=\"never\">\r\n              <TasksForSelectedDateComponent\r\n                tasksByClient={tasksBySelectedDate}\r\n                expandedClients={expandedClients}\r\n                toggleClient={handleToggleClient}\r\n              />\r\n            </ScrollView>\r\n\r\n          </View>\r\n        </View>\r\n        {modifiedRenderAddButton()}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nVerticalCalendar.propTypes = {\r\n  tasks: PropTypes.array.isRequired,\r\n  taskDates: PropTypes.object.isRequired,\r\n  renderAddButton: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default VerticalCalendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}