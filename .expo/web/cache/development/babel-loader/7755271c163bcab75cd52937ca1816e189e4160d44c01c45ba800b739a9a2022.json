{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\fred\\\\Desktop\\\\client\\\\src\\\\Navigation.js\";\nimport React, { useEffect, useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ClientBaseScreen from './screens/ClientBaseScreen';\nimport EmployeesScreen from './screens/EmployeesScreen';\nimport InventoryScreen from './screens/InventoryScreen';\nimport NotificationsScreen from './screens/NotificationsScreen';\nimport TasksScreen from './screens/TasksScreen';\nimport FeedScreen from './screens/FeedScreen';\nimport FinanceScreen from './screens/FinanceScreen';\nimport TaskDetailScreen from './screens/TaskDetailScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport TabIconLabel from './components/TabIconLabel';\nimport styles from './styles/styles';\nimport { TasksIcon, FeedIcon, FinanceIcon, ProfileIcon } from './icons';\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar TabScreens = [{\n  name: 'Tasks',\n  component: TasksScreen,\n  IconComponent: TasksIcon,\n  label: 'Задачи'\n}, {\n  name: 'Feed',\n  component: FeedScreen,\n  IconComponent: FeedIcon,\n  label: 'Лента'\n}, {\n  name: 'Finance',\n  component: FinanceScreen,\n  IconComponent: FinanceIcon,\n  label: 'Доходы'\n}, {\n  name: 'Profile',\n  component: ProfileScreen,\n  IconComponent: ProfileIcon,\n  label: 'Профиль',\n  nestedScreens: [ClientBaseScreen, EmployeesScreen, InventoryScreen, NotificationsScreen]\n}];\nfunction ProfileStackScreen() {\n  var _this = this;\n  return React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"ProfileScreen\",\n    component: ProfileScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), TabScreens.find(function (screen) {\n    return screen.name === 'Profile';\n  }).nestedScreens.map(function (ScreenComponent, index) {\n    return React.createElement(Stack.Screen, {\n      key: index,\n      name: `Profile${ScreenComponent.name.replace('Screen', '')}`,\n      component: ScreenComponent,\n      options: {\n        headerShown: false\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    });\n  }));\n}\nfunction TabNavigator() {\n  var _this2 = this;\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Tasks\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarActiveTintColor: styles.whiteColor.color,\n        tabBarInactiveTintColor: styles.darkGreyColor.color,\n        tabBarLabelStyle: styles.tabText,\n        tabBarStyle: styles.tabBar,\n        headerShown: false\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, TabScreens.map(function (_ref2) {\n    var name = _ref2.name,\n      component = _ref2.component,\n      IconComponent = _ref2.IconComponent,\n      label = _ref2.label,\n      nestedScreens = _ref2.nestedScreens;\n    return React.createElement(Tab.Screen, {\n      key: name,\n      name: name,\n      component: nestedScreens && name === 'Profile' ? ProfileStackScreen : component,\n      options: {\n        tabBarLabel: '',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused;\n          return React.createElement(TabIconLabel, {\n            icon: React.createElement(IconComponent, {\n              active: focused,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 62\n              }\n            }),\n            label: label,\n            focused: focused,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 42\n            }\n          });\n        }\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    });\n  }));\n}\nexport default function Navigation() {\n  var _useState = useState('Login'),\n    _useState2 = _slicedToArray(_useState, 2),\n    initialRouteName = _useState2[0],\n    setInitialRouteName = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isTokenChecked = _useState4[0],\n    setIsTokenChecked = _useState4[1];\n  useEffect(function () {\n    var checkToken = function () {\n      var _ref4 = _asyncToGenerator(function* () {\n        var token = yield AsyncStorage.getItem('userToken');\n        if (token) {\n          setInitialRouteName('Tabs');\n        }\n        setIsTokenChecked(true);\n      });\n      return function checkToken() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    checkToken();\n  }, []);\n  if (!isTokenChecked) {\n    return null;\n  }\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: initialRouteName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Tabs\",\n    component: TabNavigator,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"TaskDetail\",\n    component: TaskDetailScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"names":["React","useEffect","useState","createStackNavigator","createBottomTabNavigator","NavigationContainer","AsyncStorage","ProfileScreen","ClientBaseScreen","EmployeesScreen","InventoryScreen","NotificationsScreen","TasksScreen","FeedScreen","FinanceScreen","TaskDetailScreen","LoginScreen","TabIconLabel","styles","TasksIcon","FeedIcon","FinanceIcon","ProfileIcon","Stack","Tab","TabScreens","name","component","IconComponent","label","nestedScreens","ProfileStackScreen","_this","createElement","Navigator","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Screen","options","headerShown","find","screen","map","ScreenComponent","index","key","replace","TabNavigator","_this2","initialRouteName","screenOptions","_ref","route","tabBarActiveTintColor","whiteColor","color","tabBarInactiveTintColor","darkGreyColor","tabBarLabelStyle","tabText","tabBarStyle","tabBar","_ref2","tabBarLabel","tabBarIcon","_ref3","focused","icon","active","Navigation","_useState","_useState2","_slicedToArray","setInitialRouteName","_useState3","_useState4","isTokenChecked","setIsTokenChecked","checkToken","_ref4","_asyncToGenerator","token","getItem","apply","arguments"],"sources":["C:/Users/fred/Desktop/client/src/Navigation.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport ClientBaseScreen from './screens/ClientBaseScreen';\r\nimport EmployeesScreen from './screens/EmployeesScreen';\r\nimport InventoryScreen from './screens/InventoryScreen';\r\nimport NotificationsScreen from './screens/NotificationsScreen';\r\nimport TasksScreen from './screens/TasksScreen';\r\nimport FeedScreen from './screens/FeedScreen';\r\nimport FinanceScreen from './screens/FinanceScreen';\r\nimport TaskDetailScreen from './screens/TaskDetailScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\n\r\nimport TabIconLabel from './components/TabIconLabel';\r\nimport styles from './styles/styles';\r\nimport { TasksIcon, FeedIcon, FinanceIcon, ProfileIcon } from './icons';\r\n\r\nconst Stack = createStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst TabScreens = [\r\n  { name: 'Tasks', component: TasksScreen, IconComponent: TasksIcon, label: 'Задачи' },\r\n  { name: 'Feed', component: FeedScreen, IconComponent: FeedIcon, label: 'Лента' },\r\n  { name: 'Finance', component: FinanceScreen, IconComponent: FinanceIcon, label: 'Доходы' },\r\n  { name: 'Profile', component: ProfileScreen, IconComponent: ProfileIcon, label: 'Профиль', nestedScreens: [ClientBaseScreen, EmployeesScreen, InventoryScreen, NotificationsScreen] }\r\n];\r\n\r\nfunction ProfileStackScreen() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"ProfileScreen\"\r\n        component={ProfileScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n      {TabScreens.find(screen => screen.name === 'Profile').nestedScreens.map((ScreenComponent, index) => (\r\n        <Stack.Screen\r\n          key={index}\r\n          name={`Profile${ScreenComponent.name.replace('Screen', '')}`}\r\n          component={ScreenComponent}\r\n          options={{ headerShown: false }}\r\n        />\r\n      ))}\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n\r\nfunction TabNavigator() {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Tasks\"\r\n      screenOptions={({ route }) => ({\r\n        tabBarActiveTintColor: styles.whiteColor.color,\r\n        tabBarInactiveTintColor: styles.darkGreyColor.color,\r\n        tabBarLabelStyle: styles.tabText,\r\n        tabBarStyle: styles.tabBar,\r\n        headerShown: false\r\n      })}\r\n    >\r\n      {TabScreens.map(({ name, component, IconComponent, label, nestedScreens }) => (\r\n        <Tab.Screen\r\n          key={name}\r\n          name={name}\r\n          component={nestedScreens && name === 'Profile' ? ProfileStackScreen : component}\r\n          options={{\r\n            tabBarLabel: '',\r\n            tabBarIcon: ({ focused }) => <TabIconLabel icon={<IconComponent active={focused} />} label={label} focused={focused} />\r\n          }}\r\n        />\r\n      ))}\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nexport default function Navigation() {\r\n  const [initialRouteName, setInitialRouteName] = useState('Login');\r\n  const [isTokenChecked, setIsTokenChecked] = useState(false); // Новое состояние для отслеживания загрузки токена\r\n\r\n  useEffect(() => {\r\n    const checkToken = async () => {\r\n      const token = await AsyncStorage.getItem('userToken');\r\n      if (token) {\r\n        setInitialRouteName('Tabs');\r\n      }\r\n      setIsTokenChecked(true); // Обновление состояния после проверки токена\r\n    };\r\n\r\n    checkToken();\r\n  }, []);\r\n\r\n  // Рендерим NavigationContainer только после загрузки токена\r\n  if (!isTokenChecked) {\r\n    return null; // Или индикатор загрузки\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName={initialRouteName}>\r\n        <Stack.Screen name=\"Tabs\" component={TabNavigator} options={{ headerShown: false }} />\r\n        <Stack.Screen name=\"TaskDetail\" component={TaskDetailScreen} options={{ headerShown: false }} />\r\n        <Stack.Screen name=\"Login\" component={LoginScreen}  options={{ headerShown: false }} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,gBAAgB,MAAM,4BAA4B;AACzD,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAOC,mBAAmB,MAAM,+BAA+B;AAC/D,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,gBAAgB,MAAM,4BAA4B;AACzD,OAAOC,WAAW,MAAM,uBAAuB;AAE/C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,WAAW,QAAQ,SAAS;AAEvE,IAAMC,KAAK,GAAGpB,oBAAoB,CAAC,CAAC;AACpC,IAAMqB,GAAG,GAAGpB,wBAAwB,CAAC,CAAC;AAEtC,IAAMqB,UAAU,GAAG,CACjB;EAAEC,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEf,WAAW;EAAEgB,aAAa,EAAET,SAAS;EAAEU,KAAK,EAAE;AAAS,CAAC,EACpF;EAAEH,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAEd,UAAU;EAAEe,aAAa,EAAER,QAAQ;EAAES,KAAK,EAAE;AAAQ,CAAC,EAChF;EAAEH,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEb,aAAa;EAAEc,aAAa,EAAEP,WAAW;EAAEQ,KAAK,EAAE;AAAS,CAAC,EAC1F;EAAEH,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEpB,aAAa;EAAEqB,aAAa,EAAEN,WAAW;EAAEO,KAAK,EAAE,SAAS;EAAEC,aAAa,EAAE,CAACtB,gBAAgB,EAAEC,eAAe,EAAEC,eAAe,EAAEC,mBAAmB;AAAE,CAAC,CACtL;AAED,SAASoB,kBAAkBA,CAAA,EAAG;EAAA,IAAAC,KAAA;EAC5B,OACEhC,KAAA,CAAAiC,aAAA,CAACV,KAAK,CAACW,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACdxC,KAAA,CAAAiC,aAAA,CAACV,KAAK,CAACkB,MAAM;IACXf,IAAI,EAAC,eAAe;IACpBC,SAAS,EAAEpB,aAAc;IACzBmC,OAAO,EAAE;MAAEC,WAAW,EAAE;IAAM,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACjC,CAAC,EACDf,UAAU,CAACmB,IAAI,CAAC,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAACnB,IAAI,KAAK,SAAS;EAAA,EAAC,CAACI,aAAa,CAACgB,GAAG,CAAC,UAACC,eAAe,EAAEC,KAAK;IAAA,OAC7FhD,KAAA,CAAAiC,aAAA,CAACV,KAAK,CAACkB,MAAM;MACXQ,GAAG,EAAED,KAAM;MACXtB,IAAI,EAAG,UAASqB,eAAe,CAACrB,IAAI,CAACwB,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAE,EAAE;MAC7DvB,SAAS,EAAEoB,eAAgB;MAC3BL,OAAO,EAAE;QAAEC,WAAW,EAAE;MAAM,CAAE;MAAAR,MAAA,EAAAH,KAAA;MAAAI,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACjC,CAAC;EAAA,CACH,CACc,CAAC;AAEtB;AAGA,SAASW,YAAYA,CAAA,EAAG;EAAA,IAAAC,MAAA;EACtB,OACEpD,KAAA,CAAAiC,aAAA,CAACT,GAAG,CAACU,SAAS;IACZmB,gBAAgB,EAAC,OAAO;IACxBC,aAAa,EAAE,SAAAA,cAAAC,IAAA;MAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAA,OAAQ;QAC7BC,qBAAqB,EAAEvC,MAAM,CAACwC,UAAU,CAACC,KAAK;QAC9CC,uBAAuB,EAAE1C,MAAM,CAAC2C,aAAa,CAACF,KAAK;QACnDG,gBAAgB,EAAE5C,MAAM,CAAC6C,OAAO;QAChCC,WAAW,EAAE9C,MAAM,CAAC+C,MAAM;QAC1BtB,WAAW,EAAE;MACf,CAAC;IAAA,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEFf,UAAU,CAACqB,GAAG,CAAC,UAAAoB,KAAA;IAAA,IAAGxC,IAAI,GAAAwC,KAAA,CAAJxC,IAAI;MAAEC,SAAS,GAAAuC,KAAA,CAATvC,SAAS;MAAEC,aAAa,GAAAsC,KAAA,CAAbtC,aAAa;MAAEC,KAAK,GAAAqC,KAAA,CAALrC,KAAK;MAAEC,aAAa,GAAAoC,KAAA,CAAbpC,aAAa;IAAA,OACrE9B,KAAA,CAAAiC,aAAA,CAACT,GAAG,CAACiB,MAAM;MACTQ,GAAG,EAAEvB,IAAK;MACVA,IAAI,EAAEA,IAAK;MACXC,SAAS,EAAEG,aAAa,IAAIJ,IAAI,KAAK,SAAS,GAAGK,kBAAkB,GAAGJ,SAAU;MAChFe,OAAO,EAAE;QACPyB,WAAW,EAAE,EAAE;QACfC,UAAU,EAAE,SAAAA,WAAAC,KAAA;UAAA,IAAGC,OAAO,GAAAD,KAAA,CAAPC,OAAO;UAAA,OAAOtE,KAAA,CAAAiC,aAAA,CAAChB,YAAY;YAACsD,IAAI,EAAEvE,KAAA,CAAAiC,aAAA,CAACL,aAAa;cAAC4C,MAAM,EAAEF,OAAQ;cAAAnC,MAAA,EAAAiB,MAAA;cAAAhB,QAAA;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAA,CAAE,CAAE;YAACX,KAAK,EAAEA,KAAM;YAACyC,OAAO,EAAEA,OAAQ;YAAAnC,MAAA,EAAAiB,MAAA;YAAAhB,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,CAAE,CAAC;QAAA;MACzH,CAAE;MAAAL,MAAA,EAAAiB,MAAA;MAAAhB,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACH,CAAC;EAAA,CACH,CACY,CAAC;AAEpB;AAEA,eAAe,SAASiC,UAAUA,CAAA,EAAG;EACnC,IAAAC,SAAA,GAAgDxE,QAAQ,CAAC,OAAO,CAAC;IAAAyE,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1DrB,gBAAgB,GAAAsB,UAAA;IAAEE,mBAAmB,GAAAF,UAAA;EAC5C,IAAAG,UAAA,GAA4C5E,QAAQ,CAAC,KAAK,CAAC;IAAA6E,UAAA,GAAAH,cAAA,CAAAE,UAAA;IAApDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAExC9E,SAAS,CAAC,YAAM;IACd,IAAMiF,UAAU;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QAC7B,IAAMC,KAAK,SAAS/E,YAAY,CAACgF,OAAO,CAAC,WAAW,CAAC;QACrD,IAAID,KAAK,EAAE;UACTR,mBAAmB,CAAC,MAAM,CAAC;QAC7B;QACAI,iBAAiB,CAAC,IAAI,CAAC;MACzB,CAAC;MAAA,gBANKC,UAAUA,CAAA;QAAA,OAAAC,KAAA,CAAAI,KAAA,OAAAC,SAAA;MAAA;IAAA,GAMf;IAEDN,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAGN,IAAI,CAACF,cAAc,EAAE;IACnB,OAAO,IAAI;EACb;EAEA,OACEhF,KAAA,CAAAiC,aAAA,CAAC5B,mBAAmB;IAAA8B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClBxC,KAAA,CAAAiC,aAAA,CAACV,KAAK,CAACW,SAAS;IAACmB,gBAAgB,EAAEA,gBAAiB;IAAAlB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClDxC,KAAA,CAAAiC,aAAA,CAACV,KAAK,CAACkB,MAAM;IAACf,IAAI,EAAC,MAAM;IAACC,SAAS,EAAEwB,YAAa;IAACT,OAAO,EAAE;MAAEC,WAAW,EAAE;IAAM,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EACtFxC,KAAA,CAAAiC,aAAA,CAACV,KAAK,CAACkB,MAAM;IAACf,IAAI,EAAC,YAAY;IAACC,SAAS,EAAEZ,gBAAiB;IAAC2B,OAAO,EAAE;MAAEC,WAAW,EAAE;IAAM,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAChGxC,KAAA,CAAAiC,aAAA,CAACV,KAAK,CAACkB,MAAM;IAACf,IAAI,EAAC,OAAO;IAACC,SAAS,EAAEX,WAAY;IAAE0B,OAAO,EAAE;MAAEC,WAAW,EAAE;IAAM,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACvE,CACE,CAAC;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}