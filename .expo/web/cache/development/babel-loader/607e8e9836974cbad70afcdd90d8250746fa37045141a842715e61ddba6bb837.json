{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useRef, useLayoutEffect, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { format, addMonths, startOfMonth, parseISO } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport styles from \"../styles/styles\";\nimport RenderMonth from \"./RenderMonth\";\nimport TasksForSelectedDateComponent from \"./TasksForSelectedDateComponent\";\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get('window').height;\nvar VerticalCalendar = function VerticalCalendar(_ref) {\n  var tasks = _ref.tasks,\n    taskDates = _ref.taskDates,\n    renderAddButton = _ref.renderAddButton;\n  var flatListRef = useRef(null);\n  var _useState = useState(new Date()),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDate = _useState2[0],\n    setSelectedDate = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    modalVisible = _useState4[0],\n    setModalVisible = _useState4[1];\n  var _useState5 = useState(new Set()),\n    _useState6 = _slicedToArray(_useState5, 2),\n    expandedClients = _useState6[0],\n    setExpandedClients = _useState6[1];\n  var data = Array.from({\n    length: 5\n  }, function (_, i) {\n    return addMonths(startOfMonth(new Date()), i - 2);\n  });\n  var tasksBySelectedDate = tasks.filter(function (task) {\n    return format(parseISO(task.start_date), 'yyyy-MM-dd') === format(selectedDate, 'yyyy-MM-dd');\n  }).reduce(function (acc, task) {\n    return (acc[task.fullname_client] = acc[task.fullname_client] || []).push(task), acc;\n  }, {});\n  useLayoutEffect(function () {\n    var _flatListRef$current;\n    return (_flatListRef$current = flatListRef.current) == null ? void 0 : _flatListRef$current.scrollToIndex({\n      index: 1,\n      animated: false\n    });\n  }, []);\n  var handleDatePress = function handleDatePress(day) {\n    setSelectedDate(day);\n    setModalVisible(true);\n    openModal();\n  };\n  var handleToggleClient = function handleToggleClient(client) {\n    return setExpandedClients(function (current) {\n      return new Set(current.has(client) ? current.delete(client) : current.add(client));\n    });\n  };\n  var ModalFullHeight = screenHeight * 0.05;\n  var ModalHeight = screenHeight * 0.35;\n  var modalHeight = useRef(new Animated.Value(ModalHeight));\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isFullSize = _useState8[0],\n    setIsFullSize = _useState8[1];\n  useEffect(function () {\n    Animated.timing(modalHeight.current, {\n      toValue: isFullSize ? ModalFullHeight : ModalHeight,\n      duration: 300,\n      useNativeDriver: true\n    }).start();\n  }, [isFullSize, ModalFullHeight, ModalHeight]);\n  var panResponder = useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant() {\n      modalHeight.current.setOffset(modalHeight.current._value);\n      modalHeight.current.setValue(0);\n    },\n    onPanResponderMove: Animated.event([null, {\n      dy: modalHeight.current\n    }], {\n      useNativeDriver: false,\n      listener: function listener(event, gestureState) {\n        if (modalHeight.current.__getValue() < ModalFullHeight) {\n          modalHeight.current.setValue(0);\n        }\n      }\n    }),\n    onPanResponderRelease: function onPanResponderRelease(event, gestureState) {\n      modalHeight.current.flattenOffset();\n      var currentHeight = modalHeight.current._value + gestureState.dy;\n      var upwardThreshold = ModalHeight + (screenHeight - ModalHeight) / 2;\n      if (gestureState.dy < 0) {\n        currentHeight < upwardThreshold ? openFullModal() : openModal();\n      } else {\n        currentHeight > ModalHeight ? closeModal() : openModal();\n      }\n    }\n  })).current;\n  var animateModal = useCallback(function (value, fullSize) {\n    Animated.spring(modalHeight.current, {\n      toValue: value,\n      useNativeDriver: true,\n      bounciness: 0\n    }).start(function () {\n      return setIsFullSize(fullSize);\n    });\n  }, []);\n  var openFullModal = useCallback(function () {\n    return animateModal(ModalFullHeight, true);\n  }, [ModalFullHeight, animateModal]);\n  var openModal = useCallback(function () {\n    return animateModal(ModalHeight, false);\n  }, [ModalHeight, animateModal]);\n  var closeModal = useCallback(function () {\n    animateModal(screenHeight, false);\n    modalHeight.current.setValue(ModalHeight);\n    setModalVisible(false);\n  }, [ModalHeight, screenHeight, animateModal]);\n  return _jsxs(_Fragment, {\n    children: [_jsx(FlatList, {\n      ref: flatListRef,\n      data: data,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(RenderMonth, {\n          date: item,\n          handleDatePress: handleDatePress,\n          taskDates: taskDates\n        });\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return `${format(item, 'yyyy-MM')}-${index}`;\n      },\n      getItemLayout: function getItemLayout(_, index) {\n        return {\n          length: 400,\n          offset: 400 * index,\n          index: index\n        };\n      },\n      initialNumToRender: 5,\n      maxToRenderPerBatch: 5,\n      windowSize: 5,\n      onEndReachedThreshold: 0.5,\n      showsVerticalScrollIndicator: false,\n      removeClippedSubviews: true,\n      initialScrollIndex: 2\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        return closeModal();\n      },\n      children: _jsx(Animated.View, _objectSpread(_objectSpread({\n        style: [styles.modalOverlay, {\n          transform: [{\n            translateY: modalHeight.current\n          }]\n        }]\n      }, panResponder.panHandlers), {}, {\n        children: _jsx(View, {\n          style: styles.container,\n          children: _jsxs(View, {\n            style: styles.contentContainer,\n            children: [_jsx(View, {\n              style: styles.taskHeader,\n              children: _jsx(Text, {\n                style: styles.modalText,\n                children: format(selectedDate, 'd-MMMM', {\n                  locale: ru\n                })\n              })\n            }), _jsx(ScrollView, {\n              showsVerticalScrollIndicator: false,\n              style: styles.modalScrollView,\n              overScrollMode: \"never\",\n              children: _jsx(TasksForSelectedDateComponent, {\n                tasksByClient: tasksBySelectedDate,\n                expandedClients: expandedClients,\n                toggleClient: handleToggleClient\n              })\n            })]\n          })\n        })\n      }))\n    })]\n  });\n};\nVerticalCalendar.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  taskDates: PropTypes.object.isRequired,\n  renderAddButton: PropTypes.func.isRequired\n};\nexport default VerticalCalendar;","map":{"version":3,"names":["React","useState","useRef","useLayoutEffect","useEffect","useCallback","View","Text","FlatList","Modal","Animated","PanResponder","Dimensions","ScrollView","format","addMonths","startOfMonth","parseISO","ru","styles","RenderMonth","TasksForSelectedDateComponent","PropTypes","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","screenHeight","get","height","VerticalCalendar","_ref","tasks","taskDates","renderAddButton","flatListRef","_useState","Date","_useState2","_slicedToArray","selectedDate","setSelectedDate","_useState3","_useState4","modalVisible","setModalVisible","_useState5","Set","_useState6","expandedClients","setExpandedClients","data","Array","from","length","_","i","tasksBySelectedDate","filter","task","start_date","reduce","acc","fullname_client","push","_flatListRef$current","current","scrollToIndex","index","animated","handleDatePress","day","openModal","handleToggleClient","client","has","delete","add","ModalFullHeight","ModalHeight","modalHeight","Value","_useState7","_useState8","isFullSize","setIsFullSize","timing","toValue","duration","useNativeDriver","start","panResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","setOffset","_value","setValue","onPanResponderMove","event","dy","listener","gestureState","__getValue","onPanResponderRelease","flattenOffset","currentHeight","upwardThreshold","openFullModal","closeModal","animateModal","value","fullSize","spring","bounciness","children","ref","renderItem","_ref2","item","date","keyExtractor","getItemLayout","offset","initialNumToRender","maxToRenderPerBatch","windowSize","onEndReachedThreshold","showsVerticalScrollIndicator","removeClippedSubviews","initialScrollIndex","animationType","transparent","visible","onRequestClose","_objectSpread","style","modalOverlay","transform","translateY","panHandlers","container","contentContainer","taskHeader","modalText","locale","modalScrollView","overScrollMode","tasksByClient","toggleClient","propTypes","array","isRequired","object","func"],"sources":["C:/Users/fred/Desktop/client/src/components/VerticalCalendar.js"],"sourcesContent":["import React, { useState, useRef, useLayoutEffect, useEffect, useCallback } from 'react';\r\nimport { View, Text, FlatList, Modal, Animated, PanResponder, Dimensions, ScrollView } from 'react-native';\r\nimport { format, addMonths, startOfMonth, parseISO } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\nimport styles from '../styles/styles';\r\nimport RenderMonth from './RenderMonth';\r\nimport TasksForSelectedDateComponent from './TasksForSelectedDateComponent';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\nconst VerticalCalendar = ({ tasks, taskDates, renderAddButton }) => {\r\n  const flatListRef = useRef(null);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [expandedClients, setExpandedClients] = useState(new Set());\r\n\r\n  const data = Array.from({ length: 5 }, (_, i) => addMonths(startOfMonth(new Date()), i - 2));\r\n  const tasksBySelectedDate = tasks.filter(task => format(parseISO(task.start_date), 'yyyy-MM-dd') === format(selectedDate, 'yyyy-MM-dd'))\r\n    .reduce((acc, task) => ((acc[task.fullname_client] = acc[task.fullname_client] || []).push(task), acc), {});\r\n\r\n  useLayoutEffect(() => flatListRef.current?.scrollToIndex({ index: 1, animated: false }), []);\r\n\r\n  const handleDatePress = day => {\r\n    setSelectedDate(day);\r\n    setModalVisible(true);\r\n    openModal();\r\n  };\r\n\r\n  const handleToggleClient = client => setExpandedClients(current => new Set(current.has(client) ? current.delete(client) : current.add(client)));\r\n\r\n  const ModalFullHeight = screenHeight * 0.05;\r\n  const ModalHeight = screenHeight * 0.35;\r\n  const modalHeight = useRef(new Animated.Value(ModalHeight));\r\n  const [isFullSize, setIsFullSize] = useState(false);\r\n\r\n  useEffect(() => {\r\n    Animated.timing(modalHeight.current, {\r\n      toValue: isFullSize ? ModalFullHeight : ModalHeight,\r\n      duration: 300,\r\n      useNativeDriver: true, // Изменено здесь\r\n    }).start();\r\n  }, [isFullSize, ModalFullHeight, ModalHeight]);\r\n\r\n  const panResponder = useRef(\r\n    PanResponder.create({\r\n      onStartShouldSetPanResponder: () => true,\r\n      onPanResponderGrant: () => {\r\n        modalHeight.current.setOffset(modalHeight.current._value);\r\n        modalHeight.current.setValue(0);\r\n      },\r\n      onPanResponderMove: Animated.event(\r\n        [null, { dy: modalHeight.current }],\r\n        {\r\n          useNativeDriver: false,\r\n          listener: (event, gestureState) => {\r\n            if (modalHeight.current.__getValue() < ModalFullHeight) {\r\n              modalHeight.current.setValue(0);\r\n            }\r\n          },\r\n        }\r\n      ),\r\n      onPanResponderRelease: (event, gestureState) => {\r\n        modalHeight.current.flattenOffset();\r\n        const currentHeight = modalHeight.current._value + gestureState.dy;\r\n        const upwardThreshold = ModalHeight + (screenHeight - ModalHeight) / 2;\r\n\r\n        if (gestureState.dy < 0) {\r\n          currentHeight < upwardThreshold ? openFullModal() : openModal();\r\n        } else {\r\n          currentHeight > ModalHeight ? closeModal() : openModal();\r\n        }\r\n      },\r\n    })\r\n  ).current;\r\n\r\n  const animateModal = useCallback((value, fullSize) => {\r\n    Animated.spring(modalHeight.current, {\r\n        toValue: value,\r\n        useNativeDriver: true, // Изменено здесь\r\n        bounciness: 0\r\n    }).start(() => setIsFullSize(fullSize));\r\n}, []);\r\n\r\n  const openFullModal = useCallback(() => animateModal(ModalFullHeight, true), [ModalFullHeight, animateModal]);\r\n  const openModal = useCallback(() => animateModal(ModalHeight, false), [ModalHeight, animateModal]);\r\n  const closeModal = useCallback(() => {\r\n    animateModal(screenHeight, false);\r\n    modalHeight.current.setValue(ModalHeight);\r\n    setModalVisible(false);\r\n  }, [ModalHeight, screenHeight, animateModal]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <FlatList\r\n        ref={flatListRef}\r\n        data={data}\r\n        renderItem={({ item }) => <RenderMonth date={item} handleDatePress={handleDatePress} taskDates={taskDates} />}\r\n        keyExtractor={(item, index) => `${format(item, 'yyyy-MM')}-${index}`}\r\n        getItemLayout={(_, index) => ({ length: 400, offset: 400 * index, index })}\r\n        initialNumToRender={5}\r\n        maxToRenderPerBatch={5}\r\n        windowSize={5}\r\n        onEndReachedThreshold={0.5}\r\n        showsVerticalScrollIndicator={false}\r\n        removeClippedSubviews={true}\r\n        initialScrollIndex={2}\r\n      />\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => closeModal()}\r\n      >\r\n        <Animated.View style={[styles.modalOverlay, { transform: [{ translateY: modalHeight.current }] }]} {...panResponder.panHandlers}>\r\n          <View style={styles.container}>\r\n            <View style={styles.contentContainer}>\r\n              <View style={styles.taskHeader}>\r\n                <Text style={styles.modalText}>{format(selectedDate, 'd-MMMM', { locale: ru })}</Text>\r\n              </View>\r\n              <ScrollView showsVerticalScrollIndicator={false} style={styles.modalScrollView} overScrollMode=\"never\">\r\n                <TasksForSelectedDateComponent\r\n                  tasksByClient={tasksBySelectedDate}\r\n                  expandedClients={expandedClients}\r\n                  toggleClient={handleToggleClient}\r\n                />\r\n              </ScrollView>\r\n\r\n            </View>\r\n          </View>\r\n        </Animated.View>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nVerticalCalendar.propTypes = {\r\n  tasks: PropTypes.array.isRequired,\r\n  taskDates: PropTypes.object.isRequired,\r\n  renderAddButton: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default VerticalCalendar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}