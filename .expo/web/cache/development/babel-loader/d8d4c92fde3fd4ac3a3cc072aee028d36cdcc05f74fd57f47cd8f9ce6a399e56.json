{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport styles from \"../styles/styles\";\nimport DateInput from \"./DateInput\";\nimport DropdownEmployee from \"./DropdownEmployee\";\nimport DropdownService from \"./DropdownService\";\nimport DropdownItem from \"./DropdownItem\";\nimport DropdownClient from \"./DropdownClient\";\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport { BackIcon, DeleteIcon } from \"../icons\";\nimport { format } from 'date-fns';\nimport DropdownWithSearch from \"./DropdownWithSearch\";\nimport axios from 'axios';\nimport { fetchServiceNamesByIds, fetchTaskParticipants } from \"../utils/tasks\";\nimport { handleSaveTask, updateDraft } from \"../utils/taskScreenHelpers\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction TaskForm(_ref) {\n  var formData = _ref.formData,\n    dispatchFormData = _ref.dispatchFormData,\n    onClose = _ref.onClose,\n    draftData = _ref.draftData;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedService = _useState2[0],\n    setSelectedService = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedEmployee = _useState4[0],\n    setSelectedEmployee = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    service = _useState6[0],\n    setServices = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    employees = _useState8[0],\n    setEmployees = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    clients = _useState10[0],\n    setClients = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    inventoryItems = _useState12[0],\n    setInventoryItems = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    selectedInventory = _useState14[0],\n    setSelectedInventory = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    preselectedInventory = _useState16[0],\n    setPreselectedInventory = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    selectedClient = _useState18[0],\n    setSelectedClient = _useState18[1];\n  var _useState19 = useState([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    selectedImages = _useState20[0],\n    setSelectedImages = _useState20[1];\n  var _useState21 = useState(0),\n    _useState22 = _slicedToArray(_useState21, 2),\n    currentImageIndex = _useState22[0],\n    setCurrentImageIndex = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    fullScreenImageModalVisible = _useState24[0],\n    setFullScreenImageModalVisible = _useState24[1];\n  var _useState25 = useState(null),\n    _useState26 = _slicedToArray(_useState25, 2),\n    currentImage = _useState26[0],\n    setCurrentImage = _useState26[1];\n  var _useState27 = useState(false),\n    _useState28 = _slicedToArray(_useState27, 2),\n    isFormInitialized = _useState28[0],\n    setIsFormInitialized = _useState28[1];\n  var _useState29 = useState(false),\n    _useState30 = _slicedToArray(_useState29, 2),\n    isNewClientAdded = _useState30[0],\n    setIsNewClientAdded = _useState30[1];\n  var _useState31 = useState(false),\n    _useState32 = _slicedToArray(_useState31, 2),\n    isAddingNewClient = _useState32[0],\n    setIsAddingNewClient = _useState32[1];\n  var _useState33 = useState(false),\n    _useState34 = _slicedToArray(_useState33, 2),\n    isClientFromDraft = _useState34[0],\n    setIsClientFromDraft = _useState34[1];\n  var _useState35 = useState(false),\n    _useState36 = _slicedToArray(_useState35, 2),\n    isDeleteConfirmationVisible = _useState36[0],\n    setDeleteConfirmationVisible = _useState36[1];\n  var _useState37 = useState({\n      city: '',\n      street: '',\n      house: '',\n      entrance: '',\n      floor: ''\n    }),\n    _useState38 = _slicedToArray(_useState37, 2),\n    address = _useState38[0],\n    setAddress = _useState38[1];\n  var resetForm = function resetForm() {\n    setIsNewClientAdded(false);\n    setSelectedClient(null);\n    setAddress({\n      city: '',\n      street: '',\n      house: '',\n      entrance: '',\n      floor: ''\n    });\n    setField('phoneClient', '');\n  };\n  var handleOpenAddClientForm = function handleOpenAddClientForm() {\n    setIsAddingNewClient(true);\n    resetForm();\n  };\n  var renderClientButton = function renderClientButton() {\n    if (isClientFromDraft || selectedClient && !isAddingNewClient) {\n      return _jsx(TouchableOpacity, {\n        onPress: handleUpdateClient,\n        style: styles.buttonClose,\n        children: _jsx(Text, {\n          style: styles.textStyle,\n          children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\"\n        })\n      });\n    } else if (isAddingNewClient) {\n      return _jsx(TouchableOpacity, {\n        onPress: handleAddClient,\n        style: styles.buttonClose,\n        children: _jsx(Text, {\n          style: styles.textStyle,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\"\n        })\n      });\n    } else {\n      return _jsx(TouchableOpacity, {\n        onPress: handleOpenAddClientForm,\n        style: styles.buttonClose,\n        children: _jsx(Text, {\n          style: styles.textStyle,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\"\n        })\n      });\n    }\n  };\n  var fetchClients = useCallback(_asyncToGenerator(function* () {\n    try {\n      var response = yield axios.get(`http://31.129.101.174/clients`);\n      setClients(response.data);\n    } catch (error) {\n      console.error('Ошибка при получении списка клиентов:', error);\n    }\n  }), []);\n  useEffect(function () {\n    fetchClients();\n  }, [fetchClients]);\n  var fetchInventoryItems = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch('http://31.129.101.174/inventory');\n        var data = yield response.json();\n        setInventoryItems(data);\n      } catch (error) {\n        console.error('Ошибка при получении инвентаря:', error);\n      }\n    });\n    return function fetchInventoryItems() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchInventoryItems();\n  }, []);\n  var handleInventoryChange = function handleInventoryChange(newSelectedInventory) {\n    setSelectedInventory(newSelectedInventory);\n    var selectedInventoryData = newSelectedInventory.map(function (item) {\n      return {\n        id: item.id,\n        quantity: item.quantity\n      };\n    });\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        selectedInventory: selectedInventoryData\n      }\n    });\n  };\n  var fetchSelectedInventory = function () {\n    var _ref4 = _asyncToGenerator(function* (taskId) {\n      try {\n        var response = yield axios.get(`http://31.129.101.174/tasks/${taskId}/selected-inventory`);\n        return response.data;\n      } catch (error) {\n        console.error('Ошибка при получении выбранного инвентаря:', error);\n        return [];\n      }\n    });\n    return function fetchSelectedInventory(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var loadData = function () {\n      var _ref5 = _asyncToGenerator(function* () {\n        if (draftData && draftData.id) {\n          var selectedInventoryData = yield fetchSelectedInventory(draftData.id);\n          setPreselectedInventory(selectedInventoryData);\n        }\n      });\n      return function loadData() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    loadData();\n  }, [draftData]);\n  var fetchServices = useCallback(_asyncToGenerator(function* () {\n    try {\n      var response = yield fetch('http://31.129.101.174/services');\n      var data = yield response.json();\n      setServices(data);\n    } catch (error) {\n      console.error('Ошибка при получении инвентаря:', error);\n    }\n  }), []);\n  var fetchEmployees = useCallback(function () {\n    var _ref7 = _asyncToGenerator(function* (taskId) {\n      try {\n        var participantData = yield fetchTaskParticipants(taskId);\n        if (Array.isArray(participantData)) {\n          setEmployees(participantData);\n          var participantIds = participantData.map(function (p) {\n            return p.id;\n          });\n          setSelectedEmployee(participantIds);\n        } else {\n          console.error('Полученные данные не являются массивом:', participantData);\n        }\n      } catch (error) {\n        console.error('Ошибка при получении данных сотрудников:', error);\n      }\n    });\n    return function (_x2) {\n      return _ref7.apply(this, arguments);\n    };\n  }(), []);\n  useEffect(function () {\n    fetchServices();\n    if (draftData && !isFormInitialized) {\n      fetchEmployees(draftData.id);\n    }\n  }, [fetchServices, draftData, isFormInitialized, fetchEmployees]);\n  useEffect(function () {\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        selectedService: selectedService\n      }\n    });\n  }, [selectedService, dispatchFormData]);\n  useEffect(function () {\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        selectedEmployee: selectedEmployee\n      }\n    });\n  }, [selectedEmployee, dispatchFormData]);\n  useEffect(function () {\n    if (draftData && !isFormInitialized) {\n      _asyncToGenerator(function* () {\n        var serviceNames = yield fetchServiceNamesByIds(draftData.service);\n        if (!serviceNames.noServices) {\n          var serviceIds = Object.keys(serviceNames).map(Number);\n          setSelectedService(serviceIds);\n        }\n        var employeeData = yield fetchTaskParticipants(draftData.id);\n        if (employeeData && Array.isArray(employeeData)) {\n          var employeeIds = employeeData.map(function (employee) {\n            return employee.id;\n          });\n          setSelectedEmployee(employeeIds);\n        }\n        var formatTimeString = function formatTimeString(timeString) {\n          return timeString ? new Date('1970-01-01T' + timeString + 'Z') : null;\n        };\n        var formattedDraftData = _objectSpread(_objectSpread({}, draftData), {}, {\n          cost: draftData.cost ? draftData.cost.toString() : '',\n          description: draftData.description || '',\n          startDate: draftData.start_date ? new Date(draftData.start_date) : null,\n          endDate: draftData.end_date ? new Date(draftData.end_date) : null,\n          startDateTime: formatTimeString(draftData.start_time),\n          endDateTime: formatTimeString(draftData.end_time),\n          paymentMethod: draftData.payment || '',\n          fullnameClient: draftData.fullname_client || '',\n          phone: draftData.phone || '',\n          selectedResponsible: draftData.responsible || '',\n          addressClient: draftData.address_client || ''\n        });\n        if (formattedDraftData.fullnameClient) {\n          var client = clients.find(function (c) {\n            return c.full_name === formattedDraftData.fullnameClient;\n          });\n          if (client) {\n            setSelectedClient(client);\n            setIsClientFromDraft(true);\n          }\n        }\n        setIsFormInitialized(true);\n        if (JSON.stringify(formData) !== JSON.stringify(formattedDraftData)) {\n          dispatchFormData({\n            type: 'SET_FORM',\n            payload: formattedDraftData\n          });\n        }\n      })();\n    }\n  }, [draftData, formData, dispatchFormData, isFormInitialized, fetchServiceNamesByIds, fetchTaskParticipants, clients]);\n  useEffect(function () {\n    if (selectedClient) {\n      var addressRegex = /город\\s([^,]+), улица\\s([^,]+), дом\\s([^,]+), подъезд\\s([^,]+), этаж\\s([^,]+)/;\n      var addressMatch = selectedClient.address.match(addressRegex);\n      if (addressMatch) {\n        setAddress({\n          city: addressMatch[1] || '',\n          street: addressMatch[2] || '',\n          house: addressMatch[3] || '',\n          entrance: addressMatch[4] || '',\n          floor: addressMatch[5] || ''\n        });\n        setField('phoneClient', selectedClient.phone_number || '');\n        setIsNewClientAdded(true);\n      }\n    } else {\n      setAddress({\n        city: '',\n        street: '',\n        house: '',\n        entrance: '',\n        floor: ''\n      });\n      setField('phoneClient', '');\n      setIsNewClientAdded(false);\n    }\n  }, [selectedClient]);\n  useEffect(function () {\n    if (draftData) {\n      Object.entries(draftData).forEach(function (_ref9) {\n        var _ref10 = _slicedToArray(_ref9, 2),\n          key = _ref10[0],\n          value = _ref10[1];\n        dispatchFormData({\n          type: 'UPDATE_FORM',\n          payload: _defineProperty({}, key, value)\n        });\n      });\n    }\n  }, [draftData, dispatchFormData]);\n  useEffect(function () {\n    var totalCost = 0;\n    selectedService.forEach(function (serviceId) {\n      var serviceItem = service.find(function (s) {\n        return s.id === serviceId;\n      });\n      if (serviceItem) {\n        totalCost += parseInt(serviceItem.cost, 10);\n      }\n    });\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        cost: totalCost.toString()\n      }\n    });\n  }, [selectedService, service, dispatchFormData]);\n  var updateTotalCost = useCallback(function (selectedItems) {\n    var totalCost = 0;\n    selectedItems.forEach(function (item) {\n      var serviceItem = service.find(function (s) {\n        return s.id === item.id;\n      });\n      if (serviceItem) {\n        totalCost += parseInt(serviceItem.cost, 10);\n      }\n    });\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        cost: totalCost.toString()\n      }\n    });\n  }, [service, dispatchFormData]);\n  var handleSave = useCallback(_asyncToGenerator(function* () {\n    var updatedFormData = _objectSpread({}, formData);\n    if (!updatedFormData.startDate) {\n      var today = new Date();\n      updatedFormData.startDate = format(today, 'yyyy-MM-dd');\n    }\n    updatedFormData.status = 'черновик';\n    try {\n      var isUpdating = draftData && draftData.id;\n      if (isUpdating) {\n        yield updateDraft(draftData.id, updatedFormData);\n      } else {\n        yield handleSaveTask(updatedFormData);\n      }\n    } catch (error) {\n      console.error('Ошибка сохранения задачи', error);\n    }\n  }), [formData, draftData, handleSaveTask]);\n  var handleAddClient = function () {\n    var _ref12 = _asyncToGenerator(function* () {\n      var clientData = {\n        full_name: formData.fullnameClient,\n        phone_number: formData.phoneClient,\n        address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`\n      };\n      try {\n        var response = yield axios.post(`http://31.129.101.174/clients`, clientData);\n        alert('Клиент успешно добавлен');\n        setClients([].concat(_toConsumableArray(clients), [clientData]));\n        setSelectedClient(clientData);\n        setIsAddingNewClient(false);\n      } catch (error) {\n        console.error('Ошибка при добавлении клиента:', error);\n      }\n    });\n    return function handleAddClient() {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (selectedClient && !isNewClientAdded) {\n      var updatedClientData = _objectSpread(_objectSpread({}, selectedClient), {}, {\n        address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`,\n        phone_number: formData.phoneClient\n      });\n      setClients(function (prevClients) {\n        return prevClients.map(function (client) {\n          return client.id === selectedClient.id ? updatedClientData : client;\n        });\n      });\n      setIsNewClientAdded(true);\n    }\n  }, [selectedClient, address, formData.phoneClient]);\n  var handleUpdateClient = function () {\n    var _ref13 = _asyncToGenerator(function* () {\n      var city = address.city,\n        street = address.street,\n        house = address.house,\n        entrance = address.entrance,\n        floor = address.floor;\n      var fullAddress = `город ${city}, улица ${street}, дом ${house}, подъезд ${entrance}, этаж ${floor}`;\n      setField('addressClient', fullAddress);\n      if (!selectedClient) {\n        alert('Клиент не выбран.');\n        return;\n      }\n      var updatedClientData = {\n        full_name: formData.fullnameClient,\n        phone_number: formData.phoneClient,\n        address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`\n      };\n      try {\n        yield axios.put(`http://31.129.101.174/clients/${selectedClient.id}`, updatedClientData);\n        alert('Данные клиента обновлены');\n        var updatedClients = clients.map(function (client) {\n          return client.id === selectedClient.id ? _objectSpread(_objectSpread({}, client), updatedClientData) : client;\n        });\n        setClients(updatedClients);\n      } catch (error) {\n        console.error('Ошибка при обновлении данных клиента:', error);\n      }\n    });\n    return function handleUpdateClient() {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n  var handleAutoUpdateClient = function () {\n    var _ref14 = _asyncToGenerator(function* () {\n      var city = address.city,\n        street = address.street,\n        house = address.house,\n        entrance = address.entrance,\n        floor = address.floor;\n      var fullAddress = `город ${city}, улица ${street}, дом ${house}, подъезд ${entrance}, этаж ${floor}`;\n      setField('addressClient', fullAddress);\n      if (!selectedClient) {\n        alert('Клиент не выбран.');\n        return;\n      }\n      var updatedClientData = {\n        full_name: formData.fullnameClient,\n        phone_number: formData.phoneClient,\n        address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`\n      };\n      try {\n        var updatedClients = clients.map(function (client) {\n          return client.id === selectedClient.id ? _objectSpread(_objectSpread({}, client), updatedClientData) : client;\n        });\n        setClients(updatedClients);\n      } catch (error) {\n        console.error('Ошибка при выборе клиента:', error);\n      }\n    });\n    return function handleAutoUpdateClient() {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n  var openFullScreenImage = function openFullScreenImage(index) {\n    setCurrentImageIndex(index);\n    setFullScreenImageModalVisible(true);\n  };\n  var showNextImage = function showNextImage() {\n    if (currentImageIndex < selectedImages.length - 1) {\n      setCurrentImageIndex(currentImageIndex + 1);\n    }\n  };\n  var showPreviousImage = function showPreviousImage() {\n    if (currentImageIndex > 0) {\n      setCurrentImageIndex(currentImageIndex - 1);\n    }\n  };\n  var FullScreenImageModal = function FullScreenImageModal(_ref15) {\n    var _selectedImages$curre;\n    var isVisible = _ref15.isVisible,\n      onClose = _ref15.onClose;\n    var imageUri = (_selectedImages$curre = selectedImages[currentImageIndex]) == null ? void 0 : _selectedImages$curre.uri;\n    return _jsx(Modal, {\n      visible: isVisible,\n      transparent: false,\n      animationType: \"fade\",\n      onRequestClose: onClose,\n      children: _jsxs(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'black',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: [imageUri && _jsx(Image, {\n          source: {\n            uri: imageUri\n          },\n          style: {\n            width: '100%',\n            height: '100%',\n            resizeMode: 'contain'\n          }\n        }), _jsx(TouchableOpacity, {\n          style: {\n            position: 'absolute',\n            top: 40,\n            right: 20\n          },\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: {\n              color: 'white',\n              fontSize: 30\n            },\n            children: \"\\xD7\"\n          })\n        }), currentImageIndex > 0 && _jsx(TouchableOpacity, {\n          style: {\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            bottom: 0,\n            right: '50%',\n            justifyContent: 'center'\n          },\n          onPress: showPreviousImage,\n          children: _jsx(Text, {\n            style: {\n              color: 'white',\n              fontSize: 42,\n              textAlign: 'left',\n              marginLeft: 20\n            },\n            children: \"\\u2039\"\n          })\n        }), currentImageIndex < selectedImages.length - 1 && _jsx(TouchableOpacity, {\n          style: {\n            position: 'absolute',\n            right: 0,\n            top: 0,\n            bottom: 0,\n            left: '50%',\n            justifyContent: 'center'\n          },\n          onPress: showNextImage,\n          children: _jsx(Text, {\n            style: {\n              color: 'white',\n              fontSize: 42,\n              textAlign: 'right',\n              marginRight: 20\n            },\n            children: \"\\u203A\"\n          })\n        })]\n      })\n    });\n  };\n  var handleRemoveImage = function handleRemoveImage(index) {\n    setSelectedImages(function (currentImages) {\n      var updatedImages = currentImages.filter(function (_, i) {\n        return i !== index;\n      });\n      dispatchFormData({\n        type: 'UPDATE_FORM',\n        payload: {\n          selectedImages: updatedImages.map(function (img) {\n            return img.uri;\n          })\n        }\n      });\n      return updatedImages;\n    });\n  };\n  var handleChoosePhoto = function () {\n    var _ref16 = _asyncToGenerator(function* () {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (!permissionResult.granted) {\n        Alert.alert('Уведомление', 'Необходим доступ к фотографиям для загрузки в отчет');\n        return;\n      }\n      try {\n        var pickerResult = yield ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.Images,\n          allowsMultipleSelection: true,\n          quality: 1\n        });\n        if (!pickerResult.canceled) {\n          var newImages = pickerResult.assets || [];\n          setSelectedImages(function (prevImages) {\n            return [].concat(_toConsumableArray(prevImages), _toConsumableArray(newImages));\n          });\n          dispatchFormData({\n            type: 'UPDATE_FORM',\n            payload: {\n              selectedImages: [].concat(_toConsumableArray(formData.selectedImages), _toConsumableArray(newImages.map(function (img) {\n                return img.uri;\n              })))\n            }\n          });\n        }\n      } catch (error) {\n        Alert.alert('Ошибка', 'Произошла ошибка при выборе фотографий');\n      }\n    });\n    return function handleChoosePhoto() {\n      return _ref16.apply(this, arguments);\n    };\n  }();\n  var uploadImages = function () {\n    var _ref17 = _asyncToGenerator(function* () {\n      if (selectedImages.length === 0) {\n        Alert.alert('Уведомление', 'Пожалуйста, выберите фотографии для загрузки');\n        return;\n      }\n      var formData = new FormData();\n      selectedImages.forEach(function (image, index) {\n        formData.append('photos', {\n          name: `photo_${index}.jpg`,\n          type: 'image/jpeg',\n          uri: Platform.OS === 'android' ? image.uri : image.uri.replace('file://', '')\n        });\n      });\n      try {\n        var taskId = task.id;\n        var response = yield fetch(`http://31.129.101.174/tasks/${taskId}/photos`, {\n          method: 'POST',\n          body: formData,\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (!response.ok) throw new Error('Сетевая ошибка при загрузке изображений');\n        setSelectedImages([]);\n      } catch (error) {\n        Alert.alert('Ошибка', 'Произошла ошибка при загрузке фотографий');\n      }\n    });\n    return function uploadImages() {\n      return _ref17.apply(this, arguments);\n    };\n  }();\n  var ImagePreview = function ImagePreview(_ref18) {\n    var images = _ref18.images,\n      onRemovePress = _ref18.onRemovePress;\n    return _jsxs(ScrollView, {\n      horizontal: true,\n      style: styles.imagePreviewContainer,\n      showsHorizontalScrollIndicator: false,\n      children: [images.map(function (image, index) {\n        return _jsx(View, {\n          style: styles.imageContainer,\n          children: _jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              return openFullScreenImage(index);\n            },\n            style: styles.imagePreview,\n            children: [_jsx(Image, {\n              source: {\n                uri: image.uri\n              },\n              style: styles.image\n            }), _jsx(TouchableOpacity, {\n              style: styles.removeIconContainer,\n              onPress: function onPress() {\n                return onRemovePress(index);\n              },\n              children: _jsx(Text, {\n                style: styles.removeIcon,\n                children: \"\\xD7\"\n              })\n            })]\n          })\n        }, index);\n      }), _jsx(TouchableOpacity, {\n        onPress: handleChoosePhoto,\n        style: styles.image,\n        children: _jsx(View, {\n          style: styles.photoPickerContainer,\n          children: _jsx(Text, {\n            style: styles.photoPickerPlusIcon,\n            children: \"+\"\n          })\n        })\n      })]\n    });\n  };\n  var processServerImages = function processServerImages(serverImages) {\n    return serverImages.map(function (img) {\n      return {\n        uri: `http://31.129.101.174${img.photo_url}`,\n        width: null,\n        height: null,\n        type: 'image'\n      };\n    });\n  };\n  var fetchTaskImages = function () {\n    var _ref19 = _asyncToGenerator(function* (taskId) {\n      try {\n        var response = yield axios.get(`http://31.129.101.174/tasks/${taskId}/photos`);\n        if (response.data && Array.isArray(response.data)) {\n          var serverImages = processServerImages(response.data);\n          setSelectedImages(function (prevImages) {\n            return [].concat(_toConsumableArray(prevImages), _toConsumableArray(serverImages));\n          });\n        }\n      } catch (error) {\n        console.error('Ошибка при загрузке изображений задачи:', error);\n      }\n    });\n    return function fetchTaskImages(_x3) {\n      return _ref19.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (draftData && draftData.id) {\n      fetchTaskImages(draftData.id);\n    }\n  }, [draftData]);\n  var handleAddressChange = useCallback(function (field, value) {\n    setAddress(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, field, value));\n    });\n  }, []);\n  var handleCostChange = useCallback(function (text) {\n    var newText = text.replace(/^0+/, '');\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        cost: newText\n      }\n    });\n  }, [dispatchFormData]);\n  useEffect(function () {\n    var backHandler = BackHandler.addEventListener('hardwareBackPress', function () {\n      Alert.alert(\"Сохранить как черновик?\", \"Вы хотите сохранить эту задачу как черновик?\", [{\n        text: \"Нет\",\n        onPress: onClose,\n        style: \"cancel\"\n      }, {\n        text: \"Сохранить\",\n        onPress: function onPress() {\n          handleSave();\n          onClose;\n        }\n      }], {\n        cancelable: false\n      });\n      return true;\n    });\n    return function () {\n      return backHandler.remove();\n    };\n  }, [formData, onClose, handleSave]);\n  var handleBackPress = function handleBackPress() {\n    if (formData.status === 'отсутствует') {\n      Alert.alert(\"Сохранить как черновик?\", \"Вы хотите сохранить эту задачу как черновик?\", [{\n        text: \"Нет\",\n        onPress: onClose,\n        style: \"cancel\"\n      }, {\n        text: \"Сохранить\",\n        onPress: function onPress() {\n          handleSave();\n          onClose();\n        }\n      }], {\n        cancelable: false\n      });\n    } else {\n      Alert.alert(\"Отменить редактирование?\", \"Вы хотите отменить редактирование?\", [{\n        text: \"Да\",\n        onPress: onClose,\n        style: \"cancel\"\n      }, {\n        text: \"Нет\"\n      }], {\n        cancelable: false\n      });\n    }\n    return true;\n  };\n  var handleDelete = useCallback(_asyncToGenerator(function* () {\n    dispatchFormData({\n      type: 'RESET_FORM'\n    });\n  }), [dispatchFormData]);\n  var deleteTask = function () {\n    var _ref21 = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.delete(`http://31.129.101.174/tasks/${formData.id}`);\n        if (response.status === 200) {\n          dispatchFormData({\n            type: 'RESET_FORM'\n          });\n          onClose();\n        }\n      } catch (error) {\n        console.error('Ошибка при удалении задачи:', error);\n      }\n    });\n    return function deleteTask() {\n      return _ref21.apply(this, arguments);\n    };\n  }();\n  var handleDeletePress = function handleDeletePress() {\n    if (formData.status && formData.status !== \"отсутствует\") {\n      setDeleteConfirmationVisible(true);\n    } else {\n      dispatchFormData({\n        type: 'RESET_FORM'\n      });\n      onClose();\n    }\n  };\n  var showDeleteConfirmationAlert = function showDeleteConfirmationAlert() {\n    Alert.alert(\"Подтвердите удаление\", \"Вы уверены, что хотите удалить эту задачу?\", [{\n      text: \"Нет\",\n      onPress: function onPress() {\n        return setDeleteConfirmationVisible(false);\n      },\n      style: \"cancel\"\n    }, {\n      text: \"Да\",\n      onPress: deleteTask\n    }]);\n  };\n  useEffect(function () {\n    if (isDeleteConfirmationVisible) {\n      showDeleteConfirmationAlert();\n    }\n  }, [isDeleteConfirmationVisible]);\n  var setField = useCallback(function (field, value) {\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: _defineProperty({}, field, value)\n    });\n  }, [dispatchFormData]);\n  var handleChange = useCallback(function (field) {\n    return function (value) {\n      setField(field, value);\n      if (field === 'fullnameClient') {\n        var client = clients.find(function (client) {\n          return client.full_name === value;\n        });\n        if (client) {\n          setSelectedClient(client);\n          setField('addressClient', client.address || '');\n          setField('phoneClient', client.phone_number || '');\n        }\n      }\n    };\n  }, [setField, clients]);\n  var toggleStartPicker = useCallback(function () {\n    setField('isStartPickerVisible', !formData.isStartPickerVisible);\n  }, [formData.isStartPickerVisible, setField]);\n  var toggleEndPicker = useCallback(function () {\n    setField('isEndPickerVisible', !formData.isEndPickerVisible);\n  }, [formData.isEndPickerVisible, setField]);\n  var handleStartPicked = useCallback(function (date) {\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        startDateTime: date\n      }\n    });\n    toggleStartPicker();\n  }, [toggleStartPicker, dispatchFormData]);\n  var handleEndPicked = useCallback(function (date) {\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        endDateTime: date\n      }\n    });\n    toggleEndPicker();\n  }, [toggleEndPicker, dispatchFormData]);\n  var handleServiceChange = useCallback(function (newSelectedServiceIds) {\n    setSelectedService(newSelectedServiceIds);\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        selectedService: newSelectedServiceIds\n      }\n    });\n  }, [dispatchFormData]);\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.contentContainerTask,\n      children: [_jsx(FullScreenImageModal, {\n        isVisible: fullScreenImageModalVisible,\n        imageUri: currentImage,\n        onClose: function onClose() {\n          return setFullScreenImageModalVisible(false);\n        }\n      }), _jsxs(View, {\n        style: styles.taskHeader,\n        children: [_jsx(TouchableOpacity, {\n          onPress: handleBackPress,\n          children: _jsx(BackIcon, {})\n        }), _jsx(Text, {\n          style: [styles.titleMedium, {\n            flex: 1,\n            textAlign: 'center'\n          }],\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"\n        }), _jsx(TouchableOpacity, {\n          onPress: handleDeletePress,\n          children: _jsx(DeleteIcon, {})\n        })]\n      }), _jsxs(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        overScrollMode: \"never\",\n        children: [_jsxs(View, {\n          style: [styles.contentContainer, {\n            backgroundColor: \"#f9f9f9\",\n            borderRadius: 24,\n            marginBottom: 24\n          }],\n          children: [tryRender(function () {\n            return _jsx(_Fragment, {\n              children: _jsx(Text, {\n                style: [styles.headlineMedium, {\n                  marginBottom: 24\n                }],\n                children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"\n              })\n            });\n          }), tryRender(function () {\n            return _jsxs(View, {\n              children: [_jsxs(View, {\n                style: {\n                  flex: 1,\n                  marginBottom: 24\n                },\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"\\u0421\\u043F\\u043E\\u0441\\u043E\\u0431 \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B\"\n                }), _jsx(DropdownService, {\n                  options: service,\n                  selectedValues: selectedService,\n                  onValueChange: handleServiceChange,\n                  updateTotalCost: updateTotalCost\n                })]\n              }), _jsxs(View, {\n                style: {\n                  flexDirection: 'row',\n                  marginBottom: 24\n                },\n                children: [_jsxs(View, {\n                  style: {\n                    flex: 1\n                  },\n                  children: [_jsx(Text, {\n                    style: styles.label,\n                    children: \"\\u0421\\u043F\\u043E\\u0441\\u043E\\u0431 \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B\"\n                  }), _jsx(DropdownWithSearch, {\n                    options: formData.paymentMethodOptions,\n                    selectedValue: formData.paymentMethod,\n                    onValueChange: handleChange('paymentMethod')\n                  })]\n                }), _jsxs(View, {\n                  style: {\n                    flex: 1,\n                    marginLeft: 8\n                  },\n                  children: [_jsx(Text, {\n                    style: styles.label,\n                    children: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\"\n                  }), _jsx(TextInput, {\n                    style: styles.costInput,\n                    placeholder: \"1000\",\n                    value: formData.cost.toString(),\n                    onChangeText: handleCostChange,\n                    keyboardType: \"numeric\"\n                  })]\n                })]\n              })]\n            });\n          }), tryRender(function () {\n            return _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                marginBottom: 24\n              },\n              children: [_jsxs(View, {\n                style: {\n                  flex: 1,\n                  marginRight: 8\n                },\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430\"\n                }), _jsx(DateInput, {\n                  date: formData.startDate,\n                  placeholder: \"\\u0413\\u0413\\u0413\\u0413-\\u041C\\u041C-\\u0414\\u0414\",\n                  onDateChange: function onDateChange(dateType, selectedDate) {\n                    return dispatchFormData({\n                      type: 'UPDATE_FORM',\n                      payload: _defineProperty({}, dateType, selectedDate)\n                    });\n                  },\n                  dateType: \"startDate\",\n                  minDate: new Date()\n                })]\n              }), _jsxs(View, {\n                style: {\n                  flex: 1\n                },\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"\\u041A\\u043E\\u043D\\u0435\\u0447\\u043D\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430\"\n                }), _jsx(DateInput, {\n                  date: formData.endDate,\n                  placeholder: \"\\u0413\\u0413\\u0413\\u0413-\\u041C\\u041C-\\u0414\\u0414\",\n                  onDateChange: function onDateChange(dateType, selectedDate) {\n                    return dispatchFormData({\n                      type: 'UPDATE_FORM',\n                      payload: _defineProperty({}, dateType, selectedDate)\n                    });\n                  },\n                  dateType: \"endDate\",\n                  minDate: new Date()\n                })]\n              })]\n            });\n          }), tryRender(function () {\n            return _jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                alignItems: 'center'\n              },\n              children: [_jsxs(View, {\n                style: {\n                  flex: 1,\n                  marginRight: 8\n                },\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\"\n                }), _jsx(TouchableOpacity, {\n                  onPress: toggleStartPicker,\n                  style: styles.dateInputContainer,\n                  children: _jsx(TextInput, {\n                    value: formData.startDateTime ? format(formData.startDateTime, 'HH:mm') : '',\n                    placeholder: \"HH:mm\",\n                    editable: false,\n                    style: styles.selectedItemText\n                  })\n                })]\n              }), _jsxs(View, {\n                style: {\n                  flex: 1\n                },\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"\\u041A\\u043E\\u043D\\u0435\\u0446 \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\"\n                }), _jsx(TouchableOpacity, {\n                  onPress: toggleEndPicker,\n                  style: styles.dateInputContainer,\n                  children: _jsx(TextInput, {\n                    value: formData.endDateTime ? format(formData.endDateTime, 'HH:mm') : '',\n                    placeholder: \"HH:mm\",\n                    editable: false,\n                    style: styles.selectedItemText\n                  })\n                })]\n              })]\n            });\n          }), _jsx(DateTimePickerModal, {\n            isVisible: formData.isStartPickerVisible,\n            mode: \"time\",\n            onConfirm: handleStartPicked,\n            onCancel: toggleStartPicker,\n            is24Hour: true,\n            date: formData.startDateTime || new Date()\n          }), _jsx(DateTimePickerModal, {\n            isVisible: formData.isEndPickerVisible,\n            mode: \"time\",\n            onConfirm: handleEndPicked,\n            onCancel: toggleEndPicker,\n            is24Hour: true,\n            date: formData.endDateTime || new Date()\n          })]\n        }), _jsx(View, {\n          style: [styles.contentContainer, {\n            backgroundColor: \"#f9f9f9\",\n            borderRadius: 24,\n            marginBottom: 24\n          }],\n          children: tryRender(function () {\n            return _jsxs(_Fragment, {\n              children: [_jsx(Text, {\n                style: [styles.headlineMedium, {\n                  marginBottom: 24\n                }],\n                children: \"\\u041A\\u043E\\u043C\\u0430\\u043D\\u0434\\u0430\"\n              }), _jsxs(View, {\n                style: {\n                  marginBottom: 24\n                },\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439\"\n                }), _jsx(DropdownWithSearch, {\n                  options: formData.responsibleOptions,\n                  selectedValue: formData.selectedResponsible,\n                  onValueChange: handleChange('selectedResponsible')\n                })]\n              }), _jsxs(View, {\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0438\"\n                }), _jsx(DropdownEmployee, {\n                  options: formData.employeesOptions,\n                  selectedValues: selectedEmployee,\n                  onValueChange: setSelectedEmployee\n                })]\n              })]\n            });\n          })\n        }), _jsx(View, {\n          style: [styles.contentContainer, {\n            backgroundColor: \"#f9f9f9\",\n            borderRadius: 24,\n            marginBottom: 24\n          }],\n          children: tryRender(function () {\n            return _jsxs(View, {\n              children: [_jsx(Text, {\n                style: [styles.headlineMedium, {\n                  marginBottom: 24\n                }],\n                children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\"\n              }), _jsxs(View, {\n                style: {\n                  marginBottom: 24\n                },\n                children: [_jsx(Text, {\n                  style: styles.label,\n                  children: \"\\u0424\\u0418\\u041E \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\"\n                }), _jsx(DropdownClient, {\n                  options: formData.fullnameClientOptions,\n                  selectedValue: formData.fullnameClient,\n                  disabled: isAddingNewClient,\n                  onValueChange: function onValueChange(value) {\n                    handleChange('fullnameClient')(value);\n                    setAddress(function (prevAddress) {\n                      return _objectSpread(_objectSpread({}, prevAddress), {}, {\n                        city: '',\n                        street: '',\n                        house: '',\n                        entrance: '',\n                        floor: ''\n                      });\n                    });\n                  }\n                })]\n              }), (isAddingNewClient || selectedClient) && _jsx(View, {\n                children: _jsxs(View, {\n                  style: {\n                    flexDirection: 'column'\n                  },\n                  children: [_jsx(Text, {\n                    style: styles.label,\n                    children: \"\\u0413\\u043E\\u0440\\u043E\\u0434\"\n                  }), _jsx(TextInput, {\n                    placeholder: \"\\u0413\\u043E\\u0440\\u043E\\u0434\",\n                    value: address.city,\n                    onChangeText: function onChangeText(text) {\n                      return handleAddressChange('city', text);\n                    },\n                    style: [styles.addressInput, {\n                      marginBottom: 24\n                    }]\n                  }), _jsx(Text, {\n                    style: styles.label,\n                    children: \"\\u0423\\u043B\\u0438\\u0446\\u0430\"\n                  }), _jsx(TextInput, {\n                    placeholder: \"\\u0423\\u043B\\u0438\\u0446\\u0430\",\n                    value: address.street,\n                    onChangeText: function onChangeText(text) {\n                      return handleAddressChange('street', text);\n                    },\n                    style: [styles.addressInput, {\n                      marginBottom: 24\n                    }]\n                  }), _jsxs(View, {\n                    style: {\n                      flexDirection: \"row\",\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    },\n                    children: [_jsxs(View, {\n                      style: {\n                        flexDirection: \"column\"\n                      },\n                      children: [_jsx(Text, {\n                        style: styles.label,\n                        children: \"\\u0414\\u043E\\u043C/\\u041A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430\"\n                      }), _jsx(TextInput, {\n                        placeholder: \"\\u0414\\u043E\\u043C/\\u041A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430\",\n                        value: address.house,\n                        onChangeText: function onChangeText(text) {\n                          return handleAddressChange('house', text);\n                        },\n                        style: [styles.addressInput, {\n                          marginBottom: 24\n                        }]\n                      })]\n                    }), _jsxs(View, {\n                      style: {\n                        flexDirection: \"column\"\n                      },\n                      children: [_jsx(Text, {\n                        style: styles.label,\n                        children: \"\\u041F\\u043E\\u0434\\u044A\\u0435\\u0437\\u0434\"\n                      }), _jsx(TextInput, {\n                        placeholder: \"\\u041F\\u043E\\u0434\\u044A\\u0435\\u0437\\u0434\",\n                        value: address.entrance,\n                        onChangeText: function onChangeText(text) {\n                          return handleAddressChange('entrance', text);\n                        },\n                        style: [styles.addressInput, {\n                          marginBottom: 24,\n                          marginRight: 8\n                        }]\n                      })]\n                    }), _jsxs(View, {\n                      style: {\n                        flexDirection: \"column\"\n                      },\n                      children: [_jsx(Text, {\n                        style: styles.label,\n                        children: \"\\u042D\\u0442\\u0430\\u0436\"\n                      }), _jsx(TextInput, {\n                        placeholder: \"\\u042D\\u0442\\u0430\\u0436\",\n                        value: address.floor,\n                        onChangeText: function onChangeText(text) {\n                          return handleAddressChange('floor', text);\n                        },\n                        style: [styles.addressInput, {\n                          marginBottom: 24,\n                          marginRight: 8\n                        }]\n                      })]\n                    })]\n                  }), _jsx(Text, {\n                    style: styles.label,\n                    children: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\"\n                  }), _jsx(TextInput, {\n                    placeholder: \"+79999999999\",\n                    value: formData.phoneClient,\n                    onChangeText: function onChangeText(text) {\n                      return setField('phoneClient', text);\n                    },\n                    keyboardType: \"phone-pad\",\n                    style: [styles.addressInput, {\n                      marginBottom: 24\n                    }]\n                  })]\n                })\n              }), renderClientButton()]\n            });\n          })\n        }), formData.status === \"выполнено\" && _jsx(View, {\n          style: {\n            marginBottom: 24\n          },\n          children: _jsx(View, {\n            style: [styles.contentContainer, {\n              backgroundColor: \"#f9f9f9\",\n              borderRadius: 24\n            }],\n            children: tryRender(function () {\n              return _jsxs(View, {\n                children: [_jsx(Text, {\n                  style: [styles.headlineMedium, {\n                    marginBottom: 24\n                  }],\n                  children: \"\\u041E\\u0442\\u0447\\u0451\\u0442\"\n                }), _jsxs(View, {\n                  style: styles.commentContainer,\n                  children: [_jsx(DropdownItem, {\n                    label: \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\\u043D\\u0438\\u043A\\u0438\",\n                    options: inventoryItems,\n                    selectedValues: selectedInventory,\n                    onValueChange: handleInventoryChange,\n                    preselectedItems: preselectedInventory\n                  }), _jsx(ImagePreview, {\n                    images: selectedImages,\n                    onAddPress: handleChoosePhoto,\n                    onRemovePress: handleRemoveImage\n                  })]\n                })]\n              });\n            })\n          })\n        }), _jsx(View, {\n          style: {\n            marginBottom: 320\n          },\n          children: _jsx(View, {\n            style: [styles.contentContainer, {\n              backgroundColor: \"#f9f9f9\",\n              borderRadius: 24\n            }],\n            children: tryRender(function () {\n              return _jsxs(View, {\n                children: [_jsx(Text, {\n                  style: [styles.headlineMedium, {\n                    marginBottom: 24\n                  }],\n                  children: \"\\u0414\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\"\n                }), _jsxs(View, {\n                  style: styles.commentContainer,\n                  children: [_jsx(Text, {\n                    style: styles.label,\n                    children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435\"\n                  }), _jsx(TextInput, {\n                    placeholder: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u043F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435\",\n                    value: formData.description,\n                    onChangeText: function onChangeText(text) {\n                      return setField('description', text);\n                    },\n                    multiline: true,\n                    numberOfLines: 4,\n                    style: styles.commentInput\n                  })]\n                })]\n              });\n            })\n          })\n        })]\n      })]\n    })\n  });\n  function tryRender(renderFunc) {\n    try {\n      return renderFunc();\n    } catch (error) {\n      console.error(\"Ошибка при отрисовке элемента:\", error);\n      return _jsx(Text, {\n        children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u043E\\u0442\\u0440\\u0438\\u0441\\u043E\\u0432\\u043A\\u0435\"\n      });\n    }\n  }\n}\nexport default TaskForm;","map":{"version":3,"names":["React","useState","useCallback","useEffect","ScrollView","View","Text","TextInput","TouchableOpacity","Alert","BackHandler","Image","Modal","SafeAreaView","styles","DateInput","DropdownEmployee","DropdownService","DropdownItem","DropdownClient","DateTimePickerModal","BackIcon","DeleteIcon","format","DropdownWithSearch","axios","fetchServiceNamesByIds","fetchTaskParticipants","handleSaveTask","updateDraft","ImagePicker","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TaskForm","_ref","formData","dispatchFormData","onClose","draftData","_useState","_useState2","_slicedToArray","selectedService","setSelectedService","_useState3","_useState4","selectedEmployee","setSelectedEmployee","_useState5","_useState6","service","setServices","_useState7","_useState8","employees","setEmployees","_useState9","_useState10","clients","setClients","_useState11","_useState12","inventoryItems","setInventoryItems","_useState13","_useState14","selectedInventory","setSelectedInventory","_useState15","_useState16","preselectedInventory","setPreselectedInventory","_useState17","_useState18","selectedClient","setSelectedClient","_useState19","_useState20","selectedImages","setSelectedImages","_useState21","_useState22","currentImageIndex","setCurrentImageIndex","_useState23","_useState24","fullScreenImageModalVisible","setFullScreenImageModalVisible","_useState25","_useState26","currentImage","setCurrentImage","_useState27","_useState28","isFormInitialized","setIsFormInitialized","_useState29","_useState30","isNewClientAdded","setIsNewClientAdded","_useState31","_useState32","isAddingNewClient","setIsAddingNewClient","_useState33","_useState34","isClientFromDraft","setIsClientFromDraft","_useState35","_useState36","isDeleteConfirmationVisible","setDeleteConfirmationVisible","_useState37","city","street","house","entrance","floor","_useState38","address","setAddress","resetForm","setField","handleOpenAddClientForm","renderClientButton","onPress","handleUpdateClient","style","buttonClose","children","textStyle","handleAddClient","fetchClients","_asyncToGenerator","response","get","data","error","console","fetchInventoryItems","_ref3","fetch","json","apply","arguments","handleInventoryChange","newSelectedInventory","selectedInventoryData","map","item","id","quantity","type","payload","fetchSelectedInventory","_ref4","taskId","_x","loadData","_ref5","fetchServices","fetchEmployees","_ref7","participantData","Array","isArray","participantIds","p","_x2","serviceNames","noServices","serviceIds","Object","keys","Number","employeeData","employeeIds","employee","formatTimeString","timeString","Date","formattedDraftData","_objectSpread","cost","toString","description","startDate","start_date","endDate","end_date","startDateTime","start_time","endDateTime","end_time","paymentMethod","payment","fullnameClient","fullname_client","phone","selectedResponsible","responsible","addressClient","address_client","client","find","c","full_name","JSON","stringify","addressRegex","addressMatch","match","phone_number","entries","forEach","_ref9","_ref10","key","value","_defineProperty","totalCost","serviceId","serviceItem","s","parseInt","updateTotalCost","selectedItems","handleSave","updatedFormData","today","status","isUpdating","_ref12","clientData","phoneClient","post","alert","concat","_toConsumableArray","updatedClientData","prevClients","_ref13","fullAddress","put","updatedClients","handleAutoUpdateClient","_ref14","openFullScreenImage","index","showNextImage","length","showPreviousImage","FullScreenImageModal","_ref15","_selectedImages$curre","isVisible","imageUri","uri","visible","transparent","animationType","onRequestClose","flex","backgroundColor","justifyContent","alignItems","source","width","height","resizeMode","position","top","right","color","fontSize","left","bottom","textAlign","marginLeft","marginRight","handleRemoveImage","currentImages","updatedImages","filter","_","i","img","handleChoosePhoto","_ref16","permissionResult","requestMediaLibraryPermissionsAsync","granted","pickerResult","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsMultipleSelection","quality","canceled","newImages","assets","prevImages","uploadImages","_ref17","FormData","image","append","name","Platform","OS","replace","task","method","body","headers","ok","Error","ImagePreview","_ref18","images","onRemovePress","horizontal","imagePreviewContainer","showsHorizontalScrollIndicator","imageContainer","imagePreview","removeIconContainer","removeIcon","photoPickerContainer","photoPickerPlusIcon","processServerImages","serverImages","photo_url","fetchTaskImages","_ref19","_x3","handleAddressChange","field","prev","handleCostChange","text","newText","backHandler","addEventListener","cancelable","remove","handleBackPress","handleDelete","deleteTask","_ref21","delete","handleDeletePress","showDeleteConfirmationAlert","handleChange","toggleStartPicker","isStartPickerVisible","toggleEndPicker","isEndPickerVisible","handleStartPicked","date","handleEndPicked","handleServiceChange","newSelectedServiceIds","container","contentContainerTask","taskHeader","titleMedium","showsVerticalScrollIndicator","overScrollMode","contentContainer","borderRadius","marginBottom","tryRender","headlineMedium","label","options","selectedValues","onValueChange","flexDirection","paymentMethodOptions","selectedValue","costInput","placeholder","onChangeText","keyboardType","onDateChange","dateType","selectedDate","minDate","dateInputContainer","editable","selectedItemText","mode","onConfirm","onCancel","is24Hour","responsibleOptions","employeesOptions","fullnameClientOptions","disabled","prevAddress","addressInput","commentContainer","preselectedItems","onAddPress","multiline","numberOfLines","commentInput","renderFunc"],"sources":["C:/Users/fred/Desktop/client/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport { ScrollView, View, Text, TextInput, TouchableOpacity, Alert, BackHandler, Image, Modal } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport styles from '../styles/styles';\r\nimport DateInput from './DateInput';\r\nimport DropdownEmployee from './DropdownEmployee';\r\nimport DropdownService from './DropdownService';\r\nimport DropdownItem from './DropdownItem';\r\nimport DropdownClient from './DropdownClient';\r\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\r\nimport { BackIcon, DeleteIcon } from '../icons';\r\nimport { format } from 'date-fns';\r\nimport DropdownWithSearch from './DropdownWithSearch';\r\nimport axios from 'axios';\r\nimport { fetchServiceNamesByIds, fetchTaskParticipants } from '../utils/tasks';\r\nimport { handleSaveTask, updateDraft } from '../utils/taskScreenHelpers';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nfunction TaskForm({ formData, dispatchFormData, onClose, draftData }) {\r\n    const [selectedService, setSelectedService] = useState([]);\r\n    const [selectedEmployee, setSelectedEmployee] = useState([]);\r\n    const [service, setServices] = useState([]);\r\n    const [employees, setEmployees] = useState([]);\r\n    const [clients, setClients] = useState([]);\r\n    const [inventoryItems, setInventoryItems] = useState([]);\r\n    const [selectedInventory, setSelectedInventory] = useState([]);\r\n    const [preselectedInventory, setPreselectedInventory] = useState([]);\r\n    const [selectedClient, setSelectedClient] = useState(null);\r\n    const [selectedImages, setSelectedImages] = useState([]);\r\n    const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n    const [fullScreenImageModalVisible, setFullScreenImageModalVisible] = useState(false);\r\n    const [currentImage, setCurrentImage] = useState(null);\r\n    const [isFormInitialized, setIsFormInitialized] = useState(false);\r\n    const [isNewClientAdded, setIsNewClientAdded] = useState(false);\r\n    const [isAddingNewClient, setIsAddingNewClient] = useState(false);\r\n    const [isClientFromDraft, setIsClientFromDraft] = useState(false);\r\n    const [isDeleteConfirmationVisible, setDeleteConfirmationVisible] = useState(false);\r\n    const [address, setAddress] = useState({\r\n        city: '',\r\n        street: '',\r\n        house: '',\r\n        entrance: '',\r\n        floor: ''\r\n    });\r\n\r\n    const resetForm = () => {\r\n        setIsNewClientAdded(false);\r\n        setSelectedClient(null);\r\n        setAddress({\r\n            city: '',\r\n            street: '',\r\n            house: '',\r\n            entrance: '',\r\n            floor: ''\r\n        });\r\n        setField('phoneClient', '');\r\n    };\r\n\r\n    const handleOpenAddClientForm = () => {\r\n        setIsAddingNewClient(true);\r\n        resetForm();\r\n    };\r\n\r\n    const renderClientButton = () => {\r\n        if (isClientFromDraft || (selectedClient && !isAddingNewClient)) {\r\n            return (\r\n                <TouchableOpacity onPress={handleUpdateClient} style={styles.buttonClose}>\r\n                    <Text style={styles.textStyle}>Обновить данные</Text>\r\n                </TouchableOpacity>\r\n            );\r\n        } else if (isAddingNewClient) {\r\n            return (\r\n                <TouchableOpacity onPress={handleAddClient} style={styles.buttonClose}>\r\n                    <Text style={styles.textStyle}>Добавить клиента</Text>\r\n                </TouchableOpacity>\r\n            );\r\n        } else {\r\n            return (\r\n                <TouchableOpacity onPress={handleOpenAddClientForm} style={styles.buttonClose}>\r\n                    <Text style={styles.textStyle}>Добавить нового клиента</Text>\r\n                </TouchableOpacity>\r\n            );\r\n        }\r\n    };\r\n\r\n    const fetchClients = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`http://31.129.101.174/clients`);\r\n            setClients(response.data);\r\n        } catch (error) {\r\n            console.error('Ошибка при получении списка клиентов:', error);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchClients();\r\n    }, [fetchClients]);\r\n\r\n    const fetchInventoryItems = async () => {\r\n        try {\r\n            const response = await fetch('http://31.129.101.174/inventory');\r\n            const data = await response.json();\r\n            setInventoryItems(data);\r\n        } catch (error) {\r\n            console.error('Ошибка при получении инвентаря:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchInventoryItems();\r\n    }, []);\r\n\r\n    const handleInventoryChange = (newSelectedInventory) => {\r\n        setSelectedInventory(newSelectedInventory);\r\n\r\n        // Создаем массив объектов, содержащих id и количество каждого выбранного предмета\r\n        const selectedInventoryData = newSelectedInventory.map(item => {\r\n            return { id: item.id, quantity: item.quantity };\r\n        });\r\n\r\n        // Обновляем formData\r\n        dispatchFormData({\r\n            type: 'UPDATE_FORM',\r\n            payload: { selectedInventory: selectedInventoryData }\r\n        });\r\n    };\r\n\r\n    const fetchSelectedInventory = async (taskId) => {\r\n        try {\r\n            const response = await axios.get(`http://31.129.101.174/tasks/${taskId}/selected-inventory`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Ошибка при получении выбранного инвентаря:', error);\r\n            return [];\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            if (draftData && draftData.id) {\r\n                const selectedInventoryData = await fetchSelectedInventory(draftData.id);\r\n                setPreselectedInventory(selectedInventoryData);\r\n            }\r\n        };\r\n\r\n        loadData();\r\n    }, [draftData]);\r\n\r\n    const fetchServices = useCallback(async () => {\r\n        try {\r\n            const response = await fetch('http://31.129.101.174/services');\r\n            const data = await response.json();\r\n            setServices(data);\r\n        } catch (error) {\r\n            console.error('Ошибка при получении инвентаря:', error);\r\n        }\r\n    }, []);\r\n\r\n    const fetchEmployees = useCallback(async (taskId) => {\r\n        try {\r\n            const participantData = await fetchTaskParticipants(taskId);\r\n            if (Array.isArray(participantData)) {\r\n                setEmployees(participantData);\r\n                const participantIds = participantData.map(p => p.id);\r\n                setSelectedEmployee(participantIds);\r\n            } else {\r\n                console.error('Полученные данные не являются массивом:', participantData);\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при получении данных сотрудников:', error);\r\n        }\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchServices();\r\n        if (draftData && !isFormInitialized) {\r\n            fetchEmployees(draftData.id);\r\n        }\r\n    }, [fetchServices, draftData, isFormInitialized, fetchEmployees]);\r\n\r\n    useEffect(() => {\r\n        dispatchFormData({\r\n            type: 'UPDATE_FORM',\r\n            payload: { selectedService }\r\n        });\r\n    }, [selectedService, dispatchFormData]);\r\n\r\n    useEffect(() => {\r\n        dispatchFormData({\r\n            type: 'UPDATE_FORM',\r\n            payload: { selectedEmployee }\r\n        });\r\n    }, [selectedEmployee, dispatchFormData]);\r\n\r\n    useEffect(() => {\r\n        if (draftData && !isFormInitialized) {\r\n            (async () => {\r\n                const serviceNames = await fetchServiceNamesByIds(draftData.service);\r\n                if (!serviceNames.noServices) {\r\n                    const serviceIds = Object.keys(serviceNames).map(Number);\r\n                    setSelectedService(serviceIds);\r\n                }\r\n\r\n                const employeeData = await fetchTaskParticipants(draftData.id);\r\n                if (employeeData && Array.isArray(employeeData)) {\r\n                    const employeeIds = employeeData.map(employee => employee.id);\r\n                    setSelectedEmployee(employeeIds);\r\n                }\r\n\r\n                const formatTimeString = (timeString) => {\r\n                    return timeString ? new Date('1970-01-01T' + timeString + 'Z') : null;\r\n                };\r\n\r\n                const formattedDraftData = {\r\n                    ...draftData,\r\n                    cost: draftData.cost ? draftData.cost.toString() : '',\r\n                    description: draftData.description || '',\r\n                    startDate: draftData.start_date ? new Date(draftData.start_date) : null,\r\n                    endDate: draftData.end_date ? new Date(draftData.end_date) : null,\r\n                    startDateTime: formatTimeString(draftData.start_time),\r\n                    endDateTime: formatTimeString(draftData.end_time),\r\n                    paymentMethod: draftData.payment || '',\r\n                    fullnameClient: draftData.fullname_client || '',\r\n                    phone: draftData.phone || '',\r\n                    selectedResponsible: draftData.responsible || '',\r\n                    addressClient: draftData.address_client || '',\r\n                };\r\n\r\n                if (formattedDraftData.fullnameClient) {\r\n                    const client = clients.find(c => c.full_name === formattedDraftData.fullnameClient);\r\n                    if (client) {\r\n                        setSelectedClient(client);\r\n                        setIsClientFromDraft(true);\r\n                    }\r\n                }\r\n\r\n                setIsFormInitialized(true);\r\n\r\n                if (JSON.stringify(formData) !== JSON.stringify(formattedDraftData)) {\r\n                    dispatchFormData({\r\n                        type: 'SET_FORM',\r\n                        payload: formattedDraftData\r\n                    });\r\n                }\r\n            })();\r\n        }\r\n    }, [draftData, formData, dispatchFormData, isFormInitialized, fetchServiceNamesByIds, fetchTaskParticipants, clients]);\r\n\r\n    useEffect(() => {\r\n        if (selectedClient) {\r\n            const addressRegex = /город\\s([^,]+), улица\\s([^,]+), дом\\s([^,]+), подъезд\\s([^,]+), этаж\\s([^,]+)/;\r\n            const addressMatch = selectedClient.address.match(addressRegex);\r\n\r\n            if (addressMatch) {\r\n                setAddress({\r\n                    city: addressMatch[1] || '',\r\n                    street: addressMatch[2] || '',\r\n                    house: addressMatch[3] || '',\r\n                    entrance: addressMatch[4] || '',\r\n                    floor: addressMatch[5] || ''\r\n                });\r\n                setField('phoneClient', selectedClient.phone_number || '');\r\n                setIsNewClientAdded(true);\r\n            }\r\n        } else {\r\n            // обнуление данных при отсутствии выбранного клиента\r\n            setAddress({\r\n                city: '',\r\n                street: '',\r\n                house: '',\r\n                entrance: '',\r\n                floor: ''\r\n            });\r\n            setField('phoneClient', '');\r\n            setIsNewClientAdded(false);\r\n        }\r\n    }, [selectedClient]);\r\n\r\n    useEffect(() => {\r\n        if (draftData) {\r\n            Object.entries(draftData).forEach(([key, value]) => {\r\n                dispatchFormData({ type: 'UPDATE_FORM', payload: { [key]: value } });\r\n            });\r\n        }\r\n    }, [draftData, dispatchFormData]);\r\n\r\n    useEffect(() => {\r\n        let totalCost = 0;\r\n        selectedService.forEach(serviceId => {\r\n            const serviceItem = service.find(s => s.id === serviceId);\r\n            if (serviceItem) {\r\n                totalCost += parseInt(serviceItem.cost, 10);\r\n            }\r\n        });\r\n\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { cost: totalCost.toString() } });\r\n    }, [selectedService, service, dispatchFormData]);\r\n\r\n    const updateTotalCost = useCallback((selectedItems) => {\r\n        let totalCost = 0;\r\n        selectedItems.forEach(item => {\r\n            const serviceItem = service.find(s => s.id === item.id);\r\n            if (serviceItem) {\r\n                totalCost += parseInt(serviceItem.cost, 10);\r\n            }\r\n        });\r\n\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { cost: totalCost.toString() } });\r\n    }, [service, dispatchFormData]);\r\n\r\n    const handleSave = useCallback(async () => {\r\n        let updatedFormData = { ...formData };\r\n\r\n        if (!updatedFormData.startDate) {\r\n            const today = new Date();\r\n            updatedFormData.startDate = format(today, 'yyyy-MM-dd');\r\n        }\r\n\r\n        updatedFormData.status = 'черновик';\r\n\r\n        try {\r\n            const isUpdating = draftData && draftData.id;\r\n            if (isUpdating) {\r\n                await updateDraft(draftData.id, updatedFormData);\r\n            } else {\r\n                await handleSaveTask(updatedFormData);\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка сохранения задачи', error);\r\n        }\r\n    }, [formData, draftData, handleSaveTask]);\r\n\r\n    const handleAddClient = async () => {\r\n        const clientData = {\r\n            full_name: formData.fullnameClient,\r\n            phone_number: formData.phoneClient,\r\n            address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`\r\n        };\r\n        try {\r\n            const response = await axios.post(`http://31.129.101.174/clients`, clientData);\r\n            alert('Клиент успешно добавлен');\r\n            setClients([...clients, clientData]);\r\n            setSelectedClient(clientData);\r\n            setIsAddingNewClient(false);\r\n        } catch (error) {\r\n            console.error('Ошибка при добавлении клиента:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (selectedClient && !isNewClientAdded) {\r\n            const updatedClientData = {\r\n                ...selectedClient,\r\n                address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`,\r\n                phone_number: formData.phoneClient\r\n            };\r\n\r\n            setClients(prevClients => {\r\n                return prevClients.map(client =>\r\n                    client.id === selectedClient.id ? updatedClientData : client\r\n                );\r\n            });\r\n\r\n            // Это установит флаг в true, чтобы предотвратить повторное обновление\r\n            setIsNewClientAdded(true);\r\n        }\r\n    }, [selectedClient, address, formData.phoneClient]);\r\n\r\n\r\n    const handleUpdateClient = async () => {\r\n        const { city, street, house, entrance, floor } = address;\r\n        const fullAddress = `город ${city}, улица ${street}, дом ${house}, подъезд ${entrance}, этаж ${floor}`;\r\n        setField('addressClient', fullAddress);\r\n        if (!selectedClient) {\r\n            alert('Клиент не выбран.');\r\n            return;\r\n        }\r\n\r\n        const updatedClientData = {\r\n            full_name: formData.fullnameClient,\r\n            phone_number: formData.phoneClient,\r\n            address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`\r\n        };\r\n\r\n        try {\r\n            await axios.put(`http://31.129.101.174/clients/${selectedClient.id}`, updatedClientData);\r\n            alert('Данные клиента обновлены');\r\n\r\n            const updatedClients = clients.map(client =>\r\n                client.id === selectedClient.id ? { ...client, ...updatedClientData } : client\r\n            );\r\n            setClients(updatedClients);\r\n\r\n        } catch (error) {\r\n            console.error('Ошибка при обновлении данных клиента:', error);\r\n        }\r\n    };\r\n\r\n    const handleAutoUpdateClient = async () => {\r\n        const { city, street, house, entrance, floor } = address;\r\n        const fullAddress = `город ${city}, улица ${street}, дом ${house}, подъезд ${entrance}, этаж ${floor}`;\r\n        setField('addressClient', fullAddress);\r\n        if (!selectedClient) {\r\n            alert('Клиент не выбран.');\r\n            return;\r\n        }\r\n\r\n        const updatedClientData = {\r\n            full_name: formData.fullnameClient,\r\n            phone_number: formData.phoneClient,\r\n            address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`\r\n        };\r\n\r\n        try {\r\n            const updatedClients = clients.map(client =>\r\n                client.id === selectedClient.id ? { ...client, ...updatedClientData } : client\r\n            );\r\n            setClients(updatedClients);\r\n\r\n        } catch (error) {\r\n            console.error('Ошибка при выборе клиента:', error);\r\n        }\r\n    };\r\n    const openFullScreenImage = (index) => {\r\n        setCurrentImageIndex(index);\r\n        setFullScreenImageModalVisible(true);\r\n    };\r\n\r\n    const showNextImage = () => {\r\n        if (currentImageIndex < selectedImages.length - 1) {\r\n            setCurrentImageIndex(currentImageIndex + 1);\r\n        }\r\n    };\r\n\r\n    const showPreviousImage = () => {\r\n        if (currentImageIndex > 0) {\r\n            setCurrentImageIndex(currentImageIndex - 1);\r\n        }\r\n    };\r\n\r\n    const FullScreenImageModal = ({ isVisible, onClose }) => {\r\n        const imageUri = selectedImages[currentImageIndex]?.uri;\r\n\r\n        return (\r\n            <Modal\r\n                visible={isVisible}\r\n                transparent={false}\r\n                animationType=\"fade\"\r\n                onRequestClose={onClose}\r\n            >\r\n                <View style={{ flex: 1, backgroundColor: 'black', justifyContent: 'center', alignItems: 'center' }}>\r\n                    {imageUri && (\r\n                        <Image\r\n                            source={{ uri: imageUri }}\r\n                            style={{ width: '100%', height: '100%', resizeMode: 'contain' }}\r\n                        />\r\n                    )}\r\n                    <TouchableOpacity style={{ position: 'absolute', top: 40, right: 20 }} onPress={onClose}>\r\n                        <Text style={{ color: 'white', fontSize: 30 }}>×</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    {currentImageIndex > 0 && (\r\n                        <TouchableOpacity\r\n                            style={{ position: 'absolute', left: 0, top: 0, bottom: 0, right: '50%', justifyContent: 'center' }}\r\n                            onPress={showPreviousImage}\r\n                        >\r\n                            <Text style={{ color: 'white', fontSize: 42, textAlign: 'left', marginLeft: 20 }}>‹</Text>\r\n                        </TouchableOpacity>\r\n                    )}\r\n\r\n                    {currentImageIndex < selectedImages.length - 1 && (\r\n                        <TouchableOpacity\r\n                            style={{ position: 'absolute', right: 0, top: 0, bottom: 0, left: '50%', justifyContent: 'center' }}\r\n                            onPress={showNextImage}\r\n                        >\r\n                            <Text style={{ color: 'white', fontSize: 42, textAlign: 'right', marginRight: 20 }}>›</Text>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n            </Modal>\r\n        );\r\n    };\r\n\r\n    const handleRemoveImage = (index) => {\r\n        setSelectedImages(currentImages => {\r\n            const updatedImages = currentImages.filter((_, i) => i !== index);\r\n            dispatchFormData({\r\n                type: 'UPDATE_FORM',\r\n                payload: { selectedImages: updatedImages.map(img => img.uri) }\r\n            });\r\n            return updatedImages;\r\n        });\r\n    };\r\n\r\n    const handleChoosePhoto = async () => {\r\n        const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n        if (!permissionResult.granted) {\r\n            Alert.alert('Уведомление', 'Необходим доступ к фотографиям для загрузки в отчет');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const pickerResult = await ImagePicker.launchImageLibraryAsync({\r\n                mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n                allowsMultipleSelection: true,\r\n                quality: 1,\r\n            });\r\n\r\n            if (!pickerResult.canceled) {\r\n                const newImages = pickerResult.assets || [];\r\n                setSelectedImages(prevImages => [...prevImages, ...newImages]);\r\n\r\n                // Обновляем formData\r\n                dispatchFormData({\r\n                    type: 'UPDATE_FORM',\r\n                    payload: { selectedImages: [...formData.selectedImages, ...newImages.map(img => img.uri)] }\r\n                });\r\n            }\r\n        } catch (error) {\r\n            Alert.alert('Ошибка', 'Произошла ошибка при выборе фотографий');\r\n        }\r\n    };\r\n\r\n    const uploadImages = async () => {\r\n        if (selectedImages.length === 0) {\r\n            Alert.alert('Уведомление', 'Пожалуйста, выберите фотографии для загрузки');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        selectedImages.forEach((image, index) => {\r\n            formData.append('photos', {\r\n                name: `photo_${index}.jpg`,\r\n                type: 'image/jpeg', // Используем стандартный MIME-тип для JPEG\r\n                uri: Platform.OS === 'android' ? image.uri : image.uri.replace('file://', ''),\r\n            });\r\n        });\r\n\r\n        try {\r\n            // Предполагаем, что taskId доступен в текущем состоянии\r\n            const taskId = task.id; // или получить его из другого источника в зависимости от структуры приложения\r\n\r\n            const response = await fetch(`http://31.129.101.174/tasks/${taskId}/photos`, {\r\n                method: 'POST',\r\n                body: formData,\r\n                headers: { 'Content-Type': 'multipart/form-data' },\r\n            });\r\n\r\n            if (!response.ok) throw new Error('Сетевая ошибка при загрузке изображений');\r\n\r\n            setSelectedImages([]);\r\n        } catch (error) {\r\n            Alert.alert('Ошибка', 'Произошла ошибка при загрузке фотографий');\r\n        }\r\n    };\r\n\r\n    const ImagePreview = ({ images, onRemovePress }) => (\r\n        <ScrollView horizontal style={styles.imagePreviewContainer} showsHorizontalScrollIndicator={false}>\r\n            {images.map((image, index) => (\r\n                <View key={index} style={styles.imageContainer}>\r\n                    <TouchableOpacity onPress={() => openFullScreenImage(index)} style={styles.imagePreview}>\r\n                        <Image source={{ uri: image.uri }} style={styles.image} />\r\n                        <TouchableOpacity style={styles.removeIconContainer} onPress={() => onRemovePress(index)}>\r\n                            <Text style={styles.removeIcon}>×</Text>\r\n                        </TouchableOpacity>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            ))}\r\n            <TouchableOpacity onPress={handleChoosePhoto} style={styles.image}>\r\n                <View style={styles.photoPickerContainer}>\r\n                    <Text style={styles.photoPickerPlusIcon}>+</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </ScrollView>\r\n    );\r\n\r\n    const processServerImages = (serverImages) => {\r\n        return serverImages.map(img => ({\r\n            uri: `http://31.129.101.174${img.photo_url}`, // Добавляем базовый URL сервера\r\n            width: null, // Ширина и высота обычно неизвестны для серверных изображений, если только сервер их не предоставляет\r\n            height: null,\r\n            type: 'image', // Тип можно установить статически, если все файлы являются изображениями\r\n        }));\r\n    };\r\n\r\n    // Функция для получения фотографий с сервера и их загрузки\r\n    const fetchTaskImages = async (taskId) => {\r\n        try {\r\n            const response = await axios.get(`http://31.129.101.174/tasks/${taskId}/photos`);\r\n            if (response.data && Array.isArray(response.data)) {\r\n                // Преобразуем и загружаем изображения с сервера\r\n                const serverImages = processServerImages(response.data);\r\n                setSelectedImages(prevImages => [...prevImages, ...serverImages]);\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при загрузке изображений задачи:', error);\r\n        }\r\n    };\r\n\r\n    // Вызов функции загрузки при инициализации компонента\r\n    useEffect(() => {\r\n        if (draftData && draftData.id) {\r\n            fetchTaskImages(draftData.id); // Загружаем изображения, если есть ID задачи\r\n        }\r\n    }, [draftData]);\r\n\r\n\r\n    const handleAddressChange = useCallback((field, value) => {\r\n        setAddress(prev => ({ ...prev, [field]: value }));\r\n    }, []);\r\n\r\n    const handleCostChange = useCallback(text => {\r\n        const newText = text.replace(/^0+/, '');\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { cost: newText } });\r\n    }, [dispatchFormData]);\r\n\r\n    useEffect(() => {\r\n        const backHandler = BackHandler.addEventListener(\r\n            'hardwareBackPress',\r\n            () => {\r\n                Alert.alert(\r\n                    \"Сохранить как черновик?\",\r\n                    \"Вы хотите сохранить эту задачу как черновик?\",\r\n                    [\r\n                        {\r\n                            text: \"Нет\",\r\n                            onPress: onClose, // Это закроет модальное окно без сохранения\r\n                            style: \"cancel\"\r\n                        },\r\n                        {\r\n                            text: \"Сохранить\",\r\n                            onPress: () => {\r\n                                handleSave(); // Сохраняем данные\r\n                                onClose; // Затем закрываем модальное окно\r\n                            }\r\n                        }\r\n                    ],\r\n                    { cancelable: false }\r\n                );\r\n                return true; // Предотвращает действие по умолчанию\r\n            }\r\n        );\r\n\r\n        return () => backHandler.remove();\r\n    }, [formData, onClose, handleSave]);\r\n\r\n\r\n    const handleBackPress = () => {\r\n        if (formData.status === 'отсутствует') {\r\n            Alert.alert(\r\n                \"Сохранить как черновик?\",\r\n                \"Вы хотите сохранить эту задачу как черновик?\",\r\n                [\r\n                    {\r\n                        text: \"Нет\",\r\n                        onPress: onClose,\r\n                        style: \"cancel\"\r\n                    },\r\n                    {\r\n                        text: \"Сохранить\",\r\n                        onPress: () => {\r\n                            handleSave();\r\n                            onClose();\r\n                        }\r\n                    }\r\n                ],\r\n                { cancelable: false }\r\n            );\r\n        } else {\r\n            Alert.alert(\r\n                \"Отменить редактирование?\",\r\n                \"Вы хотите отменить редактирование?\",\r\n                [\r\n                    {\r\n                        text: \"Да\",\r\n                        onPress: onClose,\r\n                        style: \"cancel\"\r\n                    },\r\n                    { text: \"Нет\" }\r\n                ],\r\n                { cancelable: false }\r\n            );\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const handleDelete = useCallback(async () => {\r\n        dispatchFormData({ type: 'RESET_FORM' });\r\n    }, [dispatchFormData]);\r\n\r\n    const deleteTask = async () => {\r\n        try {\r\n            const response = await axios.delete(`http://31.129.101.174/tasks/${formData.id}`);\r\n            if (response.status === 200) {\r\n                dispatchFormData({ type: 'RESET_FORM' });\r\n                onClose();\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при удалении задачи:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeletePress = () => {\r\n        if (formData.status && formData.status !== \"отсутствует\") {\r\n            setDeleteConfirmationVisible(true);\r\n        } else {\r\n            dispatchFormData({ type: 'RESET_FORM' });\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    const showDeleteConfirmationAlert = () => {\r\n        Alert.alert(\r\n            \"Подтвердите удаление\",\r\n            \"Вы уверены, что хотите удалить эту задачу?\",\r\n            [\r\n                {\r\n                    text: \"Нет\",\r\n                    onPress: () => setDeleteConfirmationVisible(false),\r\n                    style: \"cancel\"\r\n                },\r\n                { text: \"Да\", onPress: deleteTask }\r\n            ]\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isDeleteConfirmationVisible) {\r\n            showDeleteConfirmationAlert();\r\n        }\r\n    }, [isDeleteConfirmationVisible]);\r\n\r\n    const setField = useCallback((field, value) => {\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { [field]: value } });\r\n    }, [dispatchFormData]);\r\n\r\n    const handleChange = useCallback((field) => (value) => {\r\n        setField(field, value);\r\n\r\n        if (field === 'fullnameClient') {\r\n            const client = clients.find(client => client.full_name === value);\r\n            if (client) {\r\n                setSelectedClient(client);\r\n                setField('addressClient', client.address || '');\r\n                setField('phoneClient', client.phone_number || '');\r\n            }\r\n        }\r\n    }, [setField, clients]);\r\n\r\n    const toggleStartPicker = useCallback(() => {\r\n        setField('isStartPickerVisible', !formData.isStartPickerVisible);\r\n    }, [formData.isStartPickerVisible, setField]);\r\n\r\n    const toggleEndPicker = useCallback(() => {\r\n        setField('isEndPickerVisible', !formData.isEndPickerVisible);\r\n    }, [formData.isEndPickerVisible, setField]);\r\n\r\n    const handleStartPicked = useCallback((date) => {\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { startDateTime: date } });\r\n        toggleStartPicker();\r\n    }, [toggleStartPicker, dispatchFormData]);\r\n\r\n    const handleEndPicked = useCallback((date) => {\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { endDateTime: date } });\r\n        toggleEndPicker();\r\n    }, [toggleEndPicker, dispatchFormData]);\r\n\r\n    const handleServiceChange = useCallback((newSelectedServiceIds) => {\r\n        setSelectedService(newSelectedServiceIds);\r\n        dispatchFormData({\r\n            type: 'UPDATE_FORM',\r\n            payload: { selectedService: newSelectedServiceIds }\r\n        });\r\n    }, [dispatchFormData]);\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <View style={styles.contentContainerTask}>\r\n                <FullScreenImageModal\r\n                    isVisible={fullScreenImageModalVisible}\r\n                    imageUri={currentImage}\r\n                    onClose={() => setFullScreenImageModalVisible(false)}\r\n                />\r\n                <View style={styles.taskHeader}>\r\n                    <TouchableOpacity onPress={handleBackPress}>\r\n                        <BackIcon />\r\n                    </TouchableOpacity>\r\n                    <Text style={[styles.titleMedium, { flex: 1, textAlign: 'center' }]}>Добавление задачи</Text>\r\n                    <TouchableOpacity onPress={handleDeletePress}>\r\n                        <DeleteIcon />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <ScrollView showsVerticalScrollIndicator={false} overScrollMode=\"never\">\r\n                    <View style={[styles.contentContainer, { backgroundColor: \"#f9f9f9\", borderRadius: 24, marginBottom: 24 }]}>\r\n                        {tryRender(() => (\r\n                            <>\r\n                                <Text style={[styles.headlineMedium, { marginBottom: 24 }]}>Данные задачи</Text>\r\n\r\n                            </>\r\n                        ))}\r\n\r\n                        {tryRender(() => (\r\n                            <View>\r\n                                <View style={{ flex: 1, marginBottom: 24 }}>\r\n                                    <Text style={styles.label}>Способ оплаты</Text>\r\n                                    <DropdownService\r\n                                        options={service}\r\n                                        selectedValues={selectedService}\r\n                                        onValueChange={handleServiceChange}\r\n                                        updateTotalCost={updateTotalCost}\r\n                                    />\r\n                                </View>\r\n                                <View style={{ flexDirection: 'row', marginBottom: 24 }}>\r\n                                    <View style={{ flex: 1 }}>\r\n                                        <Text style={styles.label}>Способ оплаты</Text>\r\n                                        <DropdownWithSearch\r\n                                            options={formData.paymentMethodOptions}\r\n                                            selectedValue={formData.paymentMethod}\r\n                                            onValueChange={handleChange('paymentMethod')}\r\n                                        />\r\n                                    </View>\r\n                                    <View style={{ flex: 1, marginLeft: 8 }}>\r\n                                        <Text style={styles.label}>Стоимость</Text>\r\n                                        <TextInput\r\n                                            style={styles.costInput}\r\n                                            placeholder=\"1000\"\r\n                                            value={formData.cost.toString()}\r\n                                            onChangeText={handleCostChange}\r\n                                            keyboardType=\"numeric\"\r\n                                        />\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        ))}\r\n                        {tryRender(() => (\r\n                            <View style={{ flexDirection: 'row', marginBottom: 24 }}>\r\n                                <View style={{ flex: 1, marginRight: 8 }}>\r\n                                    <Text style={styles.label}>Начальная дата</Text>\r\n                                    <DateInput\r\n                                        date={formData.startDate}\r\n                                        placeholder=\"ГГГГ-ММ-ДД\"\r\n                                        onDateChange={(dateType, selectedDate) => dispatchFormData({ type: 'UPDATE_FORM', payload: { [dateType]: selectedDate } })}\r\n                                        dateType=\"startDate\"\r\n                                        minDate={new Date()}\r\n                                    />\r\n                                </View>\r\n                                <View style={{ flex: 1 }}>\r\n                                    <Text style={styles.label}>Конечная дата</Text>\r\n                                    <DateInput\r\n                                        date={formData.endDate}\r\n                                        placeholder=\"ГГГГ-ММ-ДД\"\r\n                                        onDateChange={(dateType, selectedDate) => dispatchFormData({ type: 'UPDATE_FORM', payload: { [dateType]: selectedDate } })}\r\n                                        dateType=\"endDate\"\r\n                                        minDate={new Date()}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                        ))}\r\n                        {tryRender(() => (\r\n                            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                                <View style={{ flex: 1, marginRight: 8 }}>\r\n                                    <Text style={styles.label}>Начало работы</Text>\r\n                                    <TouchableOpacity onPress={toggleStartPicker} style={styles.dateInputContainer}>\r\n                                        <TextInput\r\n                                            value={formData.startDateTime ? format(formData.startDateTime, 'HH:mm') : ''}\r\n                                            placeholder=\"HH:mm\"\r\n                                            editable={false}\r\n                                            style={styles.selectedItemText}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1 }}>\r\n                                    <Text style={styles.label}>Конец работы</Text>\r\n                                    <TouchableOpacity onPress={toggleEndPicker} style={styles.dateInputContainer}>\r\n                                        <TextInput\r\n                                            value={formData.endDateTime ? format(formData.endDateTime, 'HH:mm') : ''}\r\n                                            placeholder=\"HH:mm\"\r\n                                            editable={false}\r\n                                            style={styles.selectedItemText}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </View>\r\n                        ))}\r\n                        <DateTimePickerModal\r\n                            isVisible={formData.isStartPickerVisible}\r\n                            mode=\"time\"\r\n                            onConfirm={handleStartPicked}\r\n                            onCancel={toggleStartPicker}\r\n                            is24Hour={true}\r\n                            date={formData.startDateTime || new Date()}\r\n                        />\r\n\r\n                        <DateTimePickerModal\r\n                            isVisible={formData.isEndPickerVisible}\r\n                            mode=\"time\"\r\n                            onConfirm={handleEndPicked}\r\n                            onCancel={toggleEndPicker}\r\n                            is24Hour={true}\r\n                            date={formData.endDateTime || new Date()}\r\n                        />\r\n                    </View>\r\n                    <View style={[styles.contentContainer, { backgroundColor: \"#f9f9f9\", borderRadius: 24, marginBottom: 24 }]}>\r\n                        {tryRender(() => (\r\n                            <>\r\n                                <Text style={[styles.headlineMedium, { marginBottom: 24 }]}>Команда</Text>\r\n                                <View style={{ marginBottom: 24 }}>\r\n                                    <Text style={styles.label}>Ответственный</Text>\r\n                                    <DropdownWithSearch\r\n                                        options={formData.responsibleOptions}\r\n                                        selectedValue={formData.selectedResponsible}\r\n                                        onValueChange={handleChange('selectedResponsible')}\r\n                                    />\r\n\r\n                                </View>\r\n                                <View>\r\n                                    <Text style={styles.label}>Участники</Text>\r\n                                    <DropdownEmployee\r\n                                        options={formData.employeesOptions}\r\n                                        selectedValues={selectedEmployee}\r\n                                        onValueChange={setSelectedEmployee}\r\n                                    />\r\n                                </View>\r\n                            </>\r\n                        ))}\r\n                    </View>\r\n                    <View style={[styles.contentContainer, { backgroundColor: \"#f9f9f9\", borderRadius: 24, marginBottom: 24 }]}>\r\n                        {tryRender(() => (\r\n                            <View>\r\n                                <Text style={[styles.headlineMedium, { marginBottom: 24 }]}>Данные клиента</Text>\r\n                                <View style={{ marginBottom: 24 }}>\r\n                                    <Text style={styles.label}>ФИО клиента</Text>\r\n                                    <DropdownClient\r\n                                        options={formData.fullnameClientOptions}\r\n                                        selectedValue={formData.fullnameClient}\r\n                                        disabled={isAddingNewClient}\r\n                                        onValueChange={(value) => {\r\n                                            handleChange('fullnameClient')(value);\r\n                                            setAddress(prevAddress => ({\r\n                                                ...prevAddress,\r\n                                                city: '',\r\n                                                street: '',\r\n                                                house: '',\r\n                                                entrance: '',\r\n                                                floor: ''\r\n                                            }));\r\n                                        }}\r\n                                    />\r\n                                </View>\r\n                                {(isAddingNewClient || selectedClient) && (\r\n                                    <View>\r\n                                        <View style={{ flexDirection: 'column' }}>\r\n                                            <Text style={styles.label}>Город</Text>\r\n                                            <TextInput\r\n                                                placeholder=\"Город\"\r\n                                                value={address.city}\r\n                                                onChangeText={(text) => handleAddressChange('city', text)}\r\n                                                style={[styles.addressInput, { marginBottom: 24 }]}\r\n                                            />\r\n                                            <Text style={styles.label}>Улица</Text>\r\n                                            <TextInput\r\n                                                placeholder=\"Улица\"\r\n                                                value={address.street}\r\n                                                onChangeText={(text) => handleAddressChange('street', text)}\r\n                                                style={[styles.addressInput, { marginBottom: 24 }]}\r\n                                            />\r\n                                            <View style={{ flexDirection: \"row\", alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                                <View style={{ flexDirection: \"column\" }}>\r\n                                                    <Text style={styles.label}>Дом/Квартира</Text>\r\n                                                    <TextInput\r\n                                                        placeholder=\"Дом/Квартира\"\r\n                                                        value={address.house}\r\n                                                        onChangeText={(text) => handleAddressChange('house', text)}\r\n                                                        style={[styles.addressInput, { marginBottom: 24 }]}\r\n                                                    />\r\n                                                </View>\r\n                                                <View style={{ flexDirection: \"column\" }}>\r\n                                                    <Text style={styles.label}>Подъезд</Text>\r\n                                                    <TextInput\r\n                                                        placeholder=\"Подъезд\"\r\n                                                        value={address.entrance}\r\n                                                        onChangeText={(text) => handleAddressChange('entrance', text)}\r\n                                                        style={[styles.addressInput, { marginBottom: 24, marginRight: 8 }]}\r\n                                                    />\r\n                                                </View>\r\n                                                <View style={{ flexDirection: \"column\" }}>\r\n                                                    <Text style={styles.label}>Этаж</Text>\r\n                                                    <TextInput\r\n                                                        placeholder=\"Этаж\"\r\n                                                        value={address.floor}\r\n                                                        onChangeText={(text) => handleAddressChange('floor', text)}\r\n                                                        style={[styles.addressInput, { marginBottom: 24, marginRight: 8 }]}\r\n                                                    />\r\n                                                </View>\r\n                                            </View>\r\n\r\n                                            <Text style={styles.label}>Номер телефона клиента</Text>\r\n                                            <TextInput\r\n                                                placeholder=\"+79999999999\"\r\n                                                value={formData.phoneClient}\r\n                                                onChangeText={(text) => setField('phoneClient', text)}\r\n                                                keyboardType=\"phone-pad\"\r\n                                                style={[styles.addressInput, { marginBottom: 24 }]}\r\n                                            />\r\n                                        </View>\r\n\r\n                                    </View>\r\n                                )}\r\n                                {renderClientButton()}\r\n                            </View>\r\n                        ))}\r\n                    </View>\r\n                    {formData.status === \"выполнено\" && (\r\n                        <View style={{ marginBottom: 24 }}>\r\n                            <View style={[styles.contentContainer, { backgroundColor: \"#f9f9f9\", borderRadius: 24 }]}>\r\n                                {tryRender(() => (\r\n                                    <View>\r\n                                        <Text style={[styles.headlineMedium, { marginBottom: 24 }]}>Отчёт</Text>\r\n                                        <View style={styles.commentContainer}>\r\n                                            <DropdownItem\r\n                                                label=\"Расходники\"\r\n                                                options={inventoryItems}\r\n                                                selectedValues={selectedInventory}\r\n                                                onValueChange={handleInventoryChange}\r\n                                                preselectedItems={preselectedInventory}\r\n                                            />\r\n                                            <ImagePreview\r\n                                                images={selectedImages}\r\n                                                onAddPress={handleChoosePhoto}\r\n                                                onRemovePress={handleRemoveImage}\r\n                                            />\r\n                                        </View>\r\n                                    </View>\r\n                                ))}\r\n                            </View>\r\n                        </View>\r\n                    )}\r\n\r\n\r\n                    <View style={{ marginBottom: 320 }}>\r\n                        <View style={[styles.contentContainer, { backgroundColor: \"#f9f9f9\", borderRadius: 24 }]}>\r\n                            {tryRender(() => (\r\n                                <View>\r\n                                    <Text style={[styles.headlineMedium, { marginBottom: 24 }]}>Дополнительно</Text>\r\n                                    <View style={styles.commentContainer}>\r\n                                        <Text style={styles.label}>Примечание</Text>\r\n                                        <TextInput\r\n                                            placeholder=\"Добавьте примечание\"\r\n                                            value={formData.description}\r\n                                            onChangeText={(text) => setField('description', text)}\r\n                                            multiline={true}\r\n                                            numberOfLines={4}\r\n                                            style={styles.commentInput}\r\n                                        />\r\n                                    </View>\r\n                                </View>\r\n                            ))}\r\n                        </View>\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n    function tryRender(renderFunc) {\r\n        try {\r\n            return renderFunc();\r\n        } catch (error) {\r\n            console.error(\"Ошибка при отрисовке элемента:\", error);\r\n            return <Text>Ошибка при отрисовке</Text>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default TaskForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}