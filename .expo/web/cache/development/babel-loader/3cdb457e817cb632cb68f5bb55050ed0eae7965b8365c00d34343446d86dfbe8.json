{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport SplashScreen from \"./src/screens/SplashScreen\";\nimport Navigation from \"./src/Navigation\";\nimport FontError from \"./src/components/FontError\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    fontsLoaded = _useState2[0],\n    setFontsLoaded = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    fontError = _useState4[0],\n    setFontError = _useState4[1];\n  var handleFontsLoaded = function handleFontsLoaded(error) {\n    if (error instanceof Error) {\n      setFontError(error);\n    } else {\n      setFontsLoaded(true);\n    }\n  };\n  if (fontError) {\n    return _jsx(FontError, {\n      message: fontError.message\n    });\n  }\n  return _jsx(SafeAreaProvider, {\n    children: fontsLoaded ? _jsx(Navigation, {}) : _jsx(SplashScreen, {\n      onFontsLoaded: handleFontsLoaded\n    })\n  });\n}","map":{"version":3,"names":["React","useState","SafeAreaProvider","SplashScreen","Navigation","FontError","jsx","_jsx","App","_useState","_useState2","_slicedToArray","fontsLoaded","setFontsLoaded","_useState3","_useState4","fontError","setFontError","handleFontsLoaded","error","Error","message","children","onFontsLoaded"],"sources":["C:/Users/fred/Desktop/client/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport SplashScreen from './src/screens/SplashScreen';\nimport Navigation from './src/Navigation';\nimport FontError from './src/components/FontError';\n\nexport default function App() {\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n  const [fontError, setFontError] = useState(null);\n\n  const handleFontsLoaded = error => {\n    if (error instanceof Error) {\n      setFontError(error);\n    } else {\n      setFontsLoaded(true);\n    }\n  };\n\n  if (fontError) {\n    return <FontError message={fontError.message} />;\n  }\n\n  return (\n    <SafeAreaProvider>\n      {fontsLoaded ? <Navigation /> : <SplashScreen onFontsLoaded={handleFontsLoaded} />}\n    </SafeAreaProvider>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,OAAOC,YAAY;AACnB,OAAOC,UAAU;AACjB,OAAOC,SAAS;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAEnD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAsCR,QAAQ,CAAC,KAAK,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClC,IAAAI,UAAA,GAAkCb,QAAQ,CAAC,IAAI,CAAC;IAAAc,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAzCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9B,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAGC,KAAK,EAAI;IACjC,IAAIA,KAAK,YAAYC,KAAK,EAAE;MAC1BH,YAAY,CAACE,KAAK,CAAC;IACrB,CAAC,MAAM;MACLN,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,IAAIG,SAAS,EAAE;IACb,OAAOT,IAAA,CAACF,SAAS;MAACgB,OAAO,EAAEL,SAAS,CAACK;IAAQ,CAAE,CAAC;EAClD;EAEA,OACEd,IAAA,CAACL,gBAAgB;IAAAoB,QAAA,EACdV,WAAW,GAAGL,IAAA,CAACH,UAAU,IAAE,CAAC,GAAGG,IAAA,CAACJ,YAAY;MAACoB,aAAa,EAAEL;IAAkB,CAAE;EAAC,CAClE,CAAC;AAEvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}