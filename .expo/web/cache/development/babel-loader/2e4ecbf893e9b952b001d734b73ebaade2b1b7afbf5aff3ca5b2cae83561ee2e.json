{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _dateFns = require(\"date-fns\");\nvar _styles = _interopRequireDefault(require(\"../styles/styles\"));\nvar _DayDotsComponent = _interopRequireDefault(require(\"./DayDotsComponent\"));\nvar _TasksForSelectedDateComponent = _interopRequireDefault(require(\"./TasksForSelectedDateComponent\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\fred\\\\Desktop\\\\client\\\\src\\\\components\\\\CustomCalendar.js\";\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar screenWidth = _reactNative.Dimensions.get('window').width;\nvar CustomCalendar = function CustomCalendar(_ref) {\n  var selectedDate = _ref.selectedDate,\n    onDateChange = _ref.onDateChange,\n    tasks = _ref.tasks,\n    taskDates = _ref.taskDates;\n  var _useState = (0, _react.useState)([]),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    expandedClients = _useState2[0],\n    setExpandedClients = _useState2[1];\n  var translateX = (0, _react.useRef)(new _reactNative.Animated.Value(0)).current;\n  var currentWeekRef = (0, _react.useRef)();\n  var panResponder = _reactNative.PanResponder.create({\n    onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n      var dx = gestureState.dx;\n      return Math.abs(dx) > 10;\n    },\n    onPanResponderGrant: function onPanResponderGrant() {\n      translateX.setOffset(translateX._value);\n      translateX.setValue(0);\n    },\n    onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n      translateX.setValue(gestureState.dx);\n    },\n    onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n      translateX.flattenOffset();\n      var newDate = selectedDate;\n      var toValue = 0;\n      if (gestureState.dx > 50) {\n        newDate = (0, _dateFns.subWeeks)(selectedDate, 1);\n        toValue = screenWidth;\n      } else if (gestureState.dx < -50) {\n        newDate = (0, _dateFns.addWeeks)(selectedDate, 1);\n        toValue = -screenWidth;\n      }\n      _reactNative.Animated.timing(translateX, {\n        toValue: toValue,\n        duration: 250,\n        useNativeDriver: true\n      }).start(function () {\n        translateX.setValue(0);\n        if (toValue !== 0) {\n          onDateChange(newDate);\n        }\n      });\n    }\n  });\n  var handleDateChange = (0, _react.useCallback)(function (day) {\n    if (currentWeekRef.current.includes(day)) {\n      onDateChange(day);\n    } else {\n      var isPreviousWeek = currentWeekRef.current[0] > day;\n      var newWeek = isPreviousWeek ? (0, _dateFns.subWeeks)(day, 1) : (0, _dateFns.addWeeks)(day, 1);\n      onDateChange(newWeek);\n    }\n  }, [currentWeekRef.current, onDateChange]);\n  var currentWeek = (0, _react.useMemo)(function () {\n    var start = (0, _dateFns.startOfWeek)(selectedDate, {\n      weekStartsOn: 1\n    });\n    var end = (0, _dateFns.endOfWeek)(selectedDate, {\n      weekStartsOn: 1\n    });\n    var daysArray = [];\n    for (var day = start; day <= end; day = (0, _dateFns.addDays)(day, 1)) {\n      daysArray.push(day);\n    }\n    currentWeekRef.current = daysArray;\n    return daysArray;\n  }, [selectedDate]);\n  var tasksByClient = (0, _react.useMemo)(function () {\n    var selectedTasks = tasks.filter(function (task) {\n      return (0, _dateFns.format)((0, _dateFns.parseISO)(task.start_date), 'yyyy-MM-dd') === (0, _dateFns.format)(selectedDate, 'yyyy-MM-dd');\n    });\n    return selectedTasks.reduce(function (acc, task) {\n      var client = task.status === 'черновик' ? 'Черновик' : task.fullname_client || 'Неизвестный клиент';\n      if (!acc[client]) {\n        acc[client] = [];\n      }\n      acc[client].push(task);\n      return acc;\n    }, {});\n  }, [tasks, selectedDate]);\n  var toggleClient = (0, _react.useCallback)(function (client) {\n    setExpandedClients(function (current) {\n      return current.includes(client) ? current.filter(function (c) {\n        return c !== client;\n      }) : [].concat((0, _toConsumableArray2.default)(current), [client]);\n    });\n  }, []);\n  return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n    style: {\n      flex: 1\n    },\n    children: [(0, _jsxRuntime.jsx)(_reactNative.Animated.View, Object.assign({}, panResponder.panHandlers, {\n      style: {\n        flexDirection: 'row',\n        transform: [{\n          translateX: translateX\n        }],\n        marginBottom: 24\n      },\n      children: (0, _jsxRuntime.jsx)(_reactNative.View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row'\n        },\n        children: (0, _jsxRuntime.jsx)(_DayDotsComponent.default, {\n          days: currentWeek,\n          onDateChange: handleDateChange,\n          selectedDate: selectedDate,\n          taskDates: taskDates\n        })\n      })\n    })), (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {\n      showsVerticalScrollIndicator: false,\n      overScrollMode: \"never\",\n      children: (0, _jsxRuntime.jsx)(_TasksForSelectedDateComponent.default, {\n        tasksByClient: tasksByClient,\n        expandedClients: expandedClients,\n        toggleClient: toggleClient\n      })\n    })]\n  });\n};\nvar _default = exports.default = CustomCalendar;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_dateFns","_styles","_interopRequireDefault","_DayDotsComponent","_TasksForSelectedDateComponent","_jsxRuntime","_this","_jsxFileName","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","screenWidth","Dimensions","width","CustomCalendar","_ref","selectedDate","onDateChange","tasks","taskDates","_useState","useState","_useState2","_slicedToArray2","expandedClients","setExpandedClients","translateX","useRef","Animated","Value","current","currentWeekRef","panResponder","PanResponder","create","onMoveShouldSetPanResponder","evt","gestureState","dx","Math","abs","onPanResponderGrant","setOffset","_value","setValue","onPanResponderMove","onPanResponderRelease","flattenOffset","newDate","toValue","subWeeks","addWeeks","timing","duration","useNativeDriver","start","handleDateChange","useCallback","day","includes","isPreviousWeek","newWeek","currentWeek","useMemo","startOfWeek","weekStartsOn","end","endOfWeek","daysArray","addDays","push","tasksByClient","selectedTasks","filter","task","format","parseISO","start_date","reduce","acc","client","status","fullname_client","toggleClient","c","concat","_toConsumableArray2","jsxs","View","style","flex","children","jsx","assign","panHandlers","flexDirection","transform","marginBottom","days","ScrollView","showsVerticalScrollIndicator","overScrollMode","_default","exports"],"sources":["C:/Users/fred/Desktop/client/src/components/CustomCalendar.js"],"sourcesContent":["import React, { useState, useMemo, useCallback, useRef } from 'react';\r\nimport { ScrollView, View, PanResponder, Animated, Dimensions } from 'react-native';\r\nimport { startOfWeek, endOfWeek, addDays, subWeeks, addWeeks, format, parseISO } from 'date-fns';\r\nimport styles from '../styles/styles';\r\nimport DayDotsComponent from './DayDotsComponent';\r\nimport TasksForSelectedDateComponent from './TasksForSelectedDateComponent';\r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nconst CustomCalendar = ({ selectedDate, onDateChange, tasks, taskDates }) => {\r\n  const [expandedClients, setExpandedClients] = useState([]);\r\n  const translateX = useRef(new Animated.Value(0)).current;\r\n  const currentWeekRef = useRef();\r\n\r\n  const panResponder = PanResponder.create({\r\n    onMoveShouldSetPanResponder: (evt, gestureState) => {\r\n      const { dx } = gestureState;\r\n      return Math.abs(dx) > 10;\r\n    },\r\n    onPanResponderGrant: () => {\r\n      translateX.setOffset(translateX._value);\r\n      translateX.setValue(0);\r\n    },\r\n    onPanResponderMove: (evt, gestureState) => {\r\n      translateX.setValue(gestureState.dx);\r\n    },\r\n    onPanResponderRelease: (evt, gestureState) => {\r\n      translateX.flattenOffset();\r\n      let newDate = selectedDate;\r\n      let toValue = 0;\r\n\r\n      if (gestureState.dx > 50) {\r\n        newDate = subWeeks(selectedDate, 1);\r\n        toValue = screenWidth;\r\n      } else if (gestureState.dx < -50) {\r\n        newDate = addWeeks(selectedDate, 1);\r\n        toValue = -screenWidth;\r\n      }\r\n\r\n      Animated.timing(translateX, {\r\n        toValue: toValue,\r\n        duration: 250,\r\n        useNativeDriver: true,\r\n      }).start(() => {\r\n        translateX.setValue(0);\r\n        if (toValue !== 0) {\r\n          onDateChange(newDate);\r\n        }\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleDateChange = useCallback((day) => {\r\n    if (currentWeekRef.current.includes(day)) {\r\n      onDateChange(day);\r\n    } else {\r\n      const isPreviousWeek = currentWeekRef.current[0] > day;\r\n      const newWeek = isPreviousWeek ? subWeeks(day, 1) : addWeeks(day, 1);\r\n      onDateChange(newWeek);\r\n    }\r\n  }, [currentWeekRef.current, onDateChange]);\r\n\r\n  const currentWeek = useMemo(() => {\r\n    const start = startOfWeek(selectedDate, { weekStartsOn: 1 });\r\n    const end = endOfWeek(selectedDate, { weekStartsOn: 1 });\r\n    const daysArray = [];\r\n    for (let day = start; day <= end; day = addDays(day, 1)) {\r\n      daysArray.push(day);\r\n    }\r\n    currentWeekRef.current = daysArray;\r\n    return daysArray;\r\n  }, [selectedDate]);\r\n\r\n  const tasksByClient = useMemo(() => {\r\n    const selectedTasks = tasks.filter(task =>\r\n      format(parseISO(task.start_date), 'yyyy-MM-dd') === format(selectedDate, 'yyyy-MM-dd')\r\n    );\r\n\r\n    return selectedTasks.reduce((acc, task) => {\r\n      const client = task.status === 'черновик' ? 'Черновик' : task.fullname_client || 'Неизвестный клиент';\r\n      if (!acc[client]) {\r\n        acc[client] = [];\r\n      }\r\n      acc[client].push(task);\r\n      return acc;\r\n    }, {});\r\n  }, [tasks, selectedDate]);\r\n\r\n  const toggleClient = useCallback((client) => {\r\n    setExpandedClients((current) =>\r\n      current.includes(client)\r\n        ? current.filter((c) => c !== client)\r\n        : [...current, client]\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <Animated.View\r\n        {...panResponder.panHandlers}\r\n        style={{\r\n          flexDirection: 'row',\r\n          transform: [{ translateX }],\r\n          marginBottom: 24,\r\n        }}\r\n      >\r\n        <View style={{ flex: 1, flexDirection: 'row' }}>\r\n          <DayDotsComponent\r\n            days={currentWeek}\r\n            onDateChange={handleDateChange}\r\n            selectedDate={selectedDate}\r\n            taskDates={taskDates}\r\n          />\r\n        </View>\r\n      </Animated.View>\r\n\r\n      <ScrollView showsVerticalScrollIndicator={false}   overScrollMode=\"never\">\r\n        <TasksForSelectedDateComponent\r\n          tasksByClient={tasksByClient}\r\n          expandedClients={expandedClients}\r\n          toggleClient={toggleClient}\r\n        />\r\n\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CustomCalendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}