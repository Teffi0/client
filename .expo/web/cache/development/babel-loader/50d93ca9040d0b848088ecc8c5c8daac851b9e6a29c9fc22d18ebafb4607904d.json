{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\fred\\\\Desktop\\\\client\\\\src\\\\components\\\\DateInput.js\",\n  _this = this;\nimport React, { useState, useCallback, memo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport { format } from 'date-fns';\nimport { CalendarIcon } from '../icons';\nimport styles from '../styles/styles';\nvar DateInput = function DateInput(_ref) {\n  var date = _ref.date,\n    placeholder = _ref.placeholder,\n    onDateChange = _ref.onDateChange,\n    dateType = _ref.dateType,\n    minDate = _ref.minDate,\n    maxDate = _ref.maxDate;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDatePickerVisible = _useState2[0],\n    setDatePickerVisibility = _useState2[1];\n  var showDatePicker = useCallback(function () {\n    setDatePickerVisibility(true);\n  }, []);\n  var hideDatePicker = useCallback(function () {\n    setDatePickerVisibility(false);\n  }, []);\n  var handleDateConfirm = useCallback(function (selectedDate) {\n    hideDatePicker();\n    onDateChange(dateType, selectedDate);\n  }, [dateType, onDateChange, hideDatePicker]);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: showDatePicker,\n    style: styles.dateInputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    value: date ? format(date, 'yyyy-MM-dd') : '',\n    placeholder: placeholder,\n    editable: false,\n    style: styles.dateInputText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), React.createElement(CalendarIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), React.createElement(DateTimePickerModal, {\n    isVisible: isDatePickerVisible,\n    mode: \"date\",\n    onConfirm: handleDateConfirm,\n    onCancel: hideDatePicker,\n    minimumDate: minDate,\n    maximumDate: maxDate,\n    date: date || new Date(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n};\nexport default DateInput;","map":{"version":3,"names":["React","useState","useCallback","memo","View","TouchableOpacity","TextInput","DateTimePickerModal","format","CalendarIcon","styles","DateInput","_ref","date","placeholder","onDateChange","dateType","minDate","maxDate","_useState","_useState2","_slicedToArray","isDatePickerVisible","setDatePickerVisibility","showDatePicker","hideDatePicker","handleDateConfirm","selectedDate","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","onPress","style","dateInputContainer","value","editable","dateInputText","isVisible","mode","onConfirm","onCancel","minimumDate","maximumDate","Date"],"sources":["C:/Users/fred/Desktop/client/src/components/DateInput.js"],"sourcesContent":["import React, { useState, useCallback, memo } from 'react';\r\nimport { View, TouchableOpacity, TextInput } from 'react-native';\r\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\r\nimport { format } from 'date-fns';\r\nimport { CalendarIcon } from '../icons';\r\nimport styles from '../styles/styles';\r\n\r\nconst DateInput = ({ date, placeholder, onDateChange, dateType, minDate, maxDate }) => {\r\n  const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\r\n\r\n  const showDatePicker = useCallback(() => {\r\n    setDatePickerVisibility(true);\r\n  }, []);\r\n\r\n  const hideDatePicker = useCallback(() => {\r\n    setDatePickerVisibility(false);\r\n  }, []);\r\n\r\n  const handleDateConfirm = useCallback((selectedDate) => {\r\n    hideDatePicker();\r\n    onDateChange(dateType, selectedDate);\r\n  }, [dateType, onDateChange, hideDatePicker]);\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity onPress={showDatePicker} style={styles.dateInputContainer}>\r\n        <TextInput\r\n          value={date ? format(date, 'yyyy-MM-dd') : ''}\r\n          placeholder={placeholder}\r\n          editable={false}\r\n          style={styles.dateInputText}\r\n        />\r\n        <CalendarIcon />\r\n      </TouchableOpacity>\r\n      <DateTimePickerModal\r\n        isVisible={isDatePickerVisible}\r\n        mode=\"date\"\r\n        onConfirm={handleDateConfirm}\r\n        onCancel={hideDatePicker}\r\n        minimumDate={minDate}\r\n        maximumDate={maxDate}\r\n        date={date || new Date()}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default DateInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}