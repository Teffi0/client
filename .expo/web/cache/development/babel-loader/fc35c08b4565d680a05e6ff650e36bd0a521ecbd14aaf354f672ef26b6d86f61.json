{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useMemo, useCallback, useRef } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { startOfWeek, endOfWeek, addDays, subWeeks, addWeeks, format, parseISO } from 'date-fns';\nimport styles from \"../styles/styles\";\nimport DayDotsComponent from \"./DayDotsComponent\";\nimport TasksForSelectedDateComponent from \"./TasksForSelectedDateComponent\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenWidth = Dimensions.get('window').width;\nvar CustomCalendar = function CustomCalendar(_ref) {\n  var selectedDate = _ref.selectedDate,\n    onDateChange = _ref.onDateChange,\n    tasks = _ref.tasks,\n    taskDates = _ref.taskDates;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    expandedClients = _useState2[0],\n    setExpandedClients = _useState2[1];\n  var translateX = new Animated.Value(0);\n  var panResponder = PanResponder.create({\n    onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(_, _ref2) {\n      var dx = _ref2.dx;\n      return Math.abs(dx) > 10;\n    },\n    onPanResponderGrant: function onPanResponderGrant() {\n      translateX.setOffset(translateX._value);\n      translateX.setValue(0);\n    },\n    onPanResponderMove: function onPanResponderMove(_, _ref3) {\n      var dx = _ref3.dx;\n      return translateX.setValue(dx);\n    },\n    onPanResponderRelease: function onPanResponderRelease(_, _ref4) {\n      var dx = _ref4.dx;\n      translateX.flattenOffset();\n      var newDate = dx > 50 ? subWeeks(selectedDate, 1) : dx < -50 ? addWeeks(selectedDate, 1) : selectedDate;\n      var toValue = dx > 50 ? screenWidth : dx < -50 ? -screenWidth : 0;\n      Animated.timing(translateX, {\n        toValue: toValue,\n        duration: 250,\n        useNativeDriver: true\n      }).start(function () {\n        if (toValue !== 0) {\n          onDateChange(newDate);\n        }\n        translateX.setValue(0);\n      });\n    }\n  });\n  var handleDateChange = useCallback(function (day) {\n    onDateChange(day < startOfWeek(selectedDate) ? subWeeks(day, 1) : addWeeks(day, 1));\n  }, [selectedDate, onDateChange]);\n  var currentWeek = [];\n  var start = startOfWeek(selectedDate);\n  var end = endOfWeek(selectedDate);\n  for (var day = start; day <= end; day = addDays(day, 1)) {\n    currentWeek.push(day);\n  }\n  var tasksByClient = tasks.reduce(function (acc, task) {\n    var client = task.status === 'черновик' ? 'Черновик' : task.fullname_client || 'Неизвестный клиент';\n    var formattedDate = format(parseISO(task.start_date), 'yyyy-MM-dd');\n    if (formattedDate === format(selectedDate, 'yyyy-MM-dd')) {\n      if (!acc[client]) acc[client] = [];\n      acc[client].push(task);\n    }\n    return acc;\n  }, {});\n  var toggleClient = useCallback(function (client) {\n    setExpandedClients(function (current) {\n      return current.includes(client) ? current.filter(function (c) {\n        return c !== client;\n      }) : [].concat(_toConsumableArray(current), [client]);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Animated.View, _objectSpread(_objectSpread({}, panResponder.panHandlers), {}, {\n      style: {\n        flexDirection: 'row',\n        transform: [{\n          translateX: translateX\n        }],\n        marginBottom: 24\n      },\n      children: _jsx(DayDotsComponent, {\n        days: currentWeek,\n        onDateChange: handleDateChange,\n        selectedDate: selectedDate,\n        taskDates: taskDates\n      })\n    })), _jsx(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      overScrollMode: \"never\",\n      children: _jsx(TasksForSelectedDateComponent, {\n        tasksByClient: tasksByClient,\n        expandedClients: expandedClients,\n        toggleClient: toggleClient\n      })\n    })]\n  });\n};\nexport default CustomCalendar;","map":{"version":3,"names":["React","useState","useMemo","useCallback","useRef","ScrollView","View","PanResponder","Animated","Dimensions","startOfWeek","endOfWeek","addDays","subWeeks","addWeeks","format","parseISO","styles","DayDotsComponent","TasksForSelectedDateComponent","jsx","_jsx","jsxs","_jsxs","screenWidth","get","width","CustomCalendar","_ref","selectedDate","onDateChange","tasks","taskDates","_useState","_useState2","_slicedToArray","expandedClients","setExpandedClients","translateX","Value","panResponder","create","onMoveShouldSetPanResponder","_","_ref2","dx","Math","abs","onPanResponderGrant","setOffset","_value","setValue","onPanResponderMove","_ref3","onPanResponderRelease","_ref4","flattenOffset","newDate","toValue","timing","duration","useNativeDriver","start","handleDateChange","day","currentWeek","end","push","tasksByClient","reduce","acc","task","client","status","fullname_client","formattedDate","start_date","toggleClient","current","includes","filter","c","concat","_toConsumableArray","style","flex","children","_objectSpread","panHandlers","flexDirection","transform","marginBottom","days","showsVerticalScrollIndicator","overScrollMode"],"sources":["C:/Users/fred/Desktop/client/src/components/CustomCalendar.js"],"sourcesContent":["import React, { useState, useMemo, useCallback, useRef } from 'react';\r\nimport { ScrollView, View, PanResponder, Animated, Dimensions } from 'react-native';\r\nimport { startOfWeek, endOfWeek, addDays, subWeeks, addWeeks, format, parseISO } from 'date-fns';\r\nimport styles from '../styles/styles';\r\nimport DayDotsComponent from './DayDotsComponent';\r\nimport TasksForSelectedDateComponent from './TasksForSelectedDateComponent';\r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nconst CustomCalendar = ({ selectedDate, onDateChange, tasks, taskDates }) => {\r\n  const [expandedClients, setExpandedClients] = useState([]);\r\n  const translateX = new Animated.Value(0);\r\n\r\n  const panResponder = PanResponder.create({\r\n    onMoveShouldSetPanResponder: (_, { dx }) => Math.abs(dx) > 10,\r\n    onPanResponderGrant: () => {\r\n      translateX.setOffset(translateX._value);\r\n      translateX.setValue(0);\r\n    },\r\n    onPanResponderMove: (_, { dx }) => translateX.setValue(dx),\r\n    onPanResponderRelease: (_, { dx }) => {\r\n      translateX.flattenOffset();\r\n      let newDate = dx > 50 ? subWeeks(selectedDate, 1) : (dx < -50 ? addWeeks(selectedDate, 1) : selectedDate);\r\n      let toValue = dx > 50 ? screenWidth : (dx < -50 ? -screenWidth : 0);\r\n\r\n      Animated.timing(translateX, {\r\n        toValue: toValue,\r\n        duration: 250,\r\n        useNativeDriver: true,\r\n      }).start(() => {\r\n        if (toValue !== 0) {\r\n          onDateChange(newDate);\r\n        }\r\n        translateX.setValue(0);\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleDateChange = useCallback((day) => {\r\n    onDateChange(day < startOfWeek(selectedDate) ? subWeeks(day, 1) : addWeeks(day, 1));\r\n  }, [selectedDate, onDateChange]);\r\n\r\n  const currentWeek = [];\r\n  let start = startOfWeek(selectedDate);\r\n  let end = endOfWeek(selectedDate);\r\n  for (let day = start; day <= end; day = addDays(day, 1)) {\r\n    currentWeek.push(day);\r\n  }\r\n\r\n  const tasksByClient = tasks.reduce((acc, task) => {\r\n    const client = task.status === 'черновик' ? 'Черновик' : task.fullname_client || 'Неизвестный клиент';\r\n    const formattedDate = format(parseISO(task.start_date), 'yyyy-MM-dd');\r\n    if (formattedDate === format(selectedDate, 'yyyy-MM-dd')) {\r\n      if (!acc[client]) acc[client] = [];\r\n      acc[client].push(task);\r\n    }\r\n    return acc;\r\n  }, {});\r\n\r\n  const toggleClient = useCallback((client) => {\r\n    setExpandedClients((current) =>\r\n      current.includes(client) ? current.filter((c) => c !== client) : [...current, client]\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <Animated.View\r\n        {...panResponder.panHandlers}\r\n        style={{ flexDirection: 'row', transform: [{ translateX }], marginBottom: 24 }}\r\n      >\r\n        <DayDotsComponent\r\n          days={currentWeek}\r\n          onDateChange={handleDateChange}\r\n          selectedDate={selectedDate}\r\n          taskDates={taskDates}\r\n        />\r\n      </Animated.View>\r\n\r\n      <ScrollView showsVerticalScrollIndicator={false} overScrollMode=\"never\">\r\n        <TasksForSelectedDateComponent\r\n          tasksByClient={tasksByClient}\r\n          expandedClients={expandedClients}\r\n          toggleClient={toggleClient}\r\n        />\r\n\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CustomCalendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}