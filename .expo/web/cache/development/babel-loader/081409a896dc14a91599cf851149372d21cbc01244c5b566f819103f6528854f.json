{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { format, isSameDay } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport styles from \"../styles/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DayDotsComponent = function DayDotsComponent(_ref) {\n  var days = _ref.days,\n    onDateChange = _ref.onDateChange,\n    selectedDate = _ref.selectedDate,\n    taskDates = _ref.taskDates;\n  return _jsx(View, {\n    style: {\n      flexDirection: 'row',\n      flex: 1\n    },\n    children: days.map(function (day) {\n      var formattedDate = format(day, 'yyyy-MM-dd');\n      var taskStatus = taskDates[formattedDate];\n      var hasTasks = taskStatus === 'в процессе' || taskStatus === 'новая';\n      var isToday = isSameDay(day, new Date());\n      var isSelected = isSameDay(day, selectedDate);\n      var dayButtonBase = {\n        flex: 1,\n        marginHorizontal: 4,\n        paddingVertical: 8,\n        borderRadius: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderColor: '#f0f0f0',\n        backgroundColor: 'transparent'\n      };\n      return _jsxs(TouchableOpacity, {\n        onPress: function onPress() {\n          return onDateChange(day);\n        },\n        style: [styles.dayButton, dayButtonBase, isSelected ? styles.selectedDayText : {}],\n        children: [_jsx(Text, {\n          style: [styles.dayName, isToday ? styles.todayButton : {}],\n          children: format(day, 'EEEEEE', {\n            locale: ru\n          })\n        }), _jsx(Text, {\n          style: [styles.dayNumber, isToday ? styles.todayButton : {}],\n          children: format(day, 'd')\n        }), _jsx(View, {\n          style: [styles.taskDot, hasTasks && styles.taskDotActive]\n        })]\n      }, formattedDate);\n    })\n  });\n};\nexport default DayDotsComponent;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","format","isSameDay","ru","styles","jsx","_jsx","jsxs","_jsxs","DayDotsComponent","_ref","days","onDateChange","selectedDate","taskDates","style","flexDirection","flex","children","map","day","formattedDate","taskStatus","hasTasks","isToday","Date","isSelected","dayButtonBase","marginHorizontal","paddingVertical","borderRadius","alignItems","justifyContent","borderColor","backgroundColor","onPress","dayButton","selectedDayText","dayName","todayButton","locale","dayNumber","taskDot","taskDotActive"],"sources":["C:/Users/fred/Desktop/crm/src/components/DayDotsComponent.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport { format, isSameDay } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\nimport styles from '../styles/styles';\r\n\r\nconst DayDotsComponent = ({ days, onDateChange, selectedDate, taskDates }) => {\r\n  return (\r\n    <View style={{ flexDirection: 'row', flex: 1 }}>\r\n      {days.map((day) => {\r\n        const formattedDate = format(day, 'yyyy-MM-dd');\r\n        const taskStatus = taskDates[formattedDate];\r\n        const hasTasks = taskStatus === 'в процессе' || taskStatus === 'новая';\r\n        const isToday = isSameDay(day, new Date());\r\n        const isSelected = isSameDay(day, selectedDate);\r\n\r\n        const dayButtonBase = {\r\n          flex: 1, // Устанавливаем flex: 1 для каждой кнопки\r\n          marginHorizontal: 4,\r\n          paddingVertical: 8,\r\n          borderRadius: 10,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          borderColor: '#f0f0f0', // Цвет границы\r\n          backgroundColor: 'transparent', // Цвет фона\r\n        };\r\n\r\n        return (\r\n          <TouchableOpacity\r\n            key={formattedDate}\r\n            onPress={() => onDateChange(day)}\r\n            style={[styles.dayButton, dayButtonBase, isSelected ? styles.selectedDayText : {}]}\r\n          >\r\n            <Text style={[styles.dayName, isToday ? styles.todayButton : {}]}>\r\n              {format(day, 'EEEEEE', { locale: ru })}\r\n            </Text>\r\n            <Text style={[styles.dayNumber, isToday ? styles.todayButton : {}]}>\r\n              {format(day, 'd')}\r\n            </Text>\r\n            <View style={[styles.taskDot, hasTasks && styles.taskDotActive]} />\r\n          </TouchableOpacity>\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default DayDotsComponent;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAE1B,SAASC,MAAM,EAAEC,SAAS,QAAQ,UAAU;AAC5C,SAASC,EAAE,QAAQ,iBAAiB;AACpC,OAAOC,MAAM;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtC,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAAwD;EAAA,IAAlDC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,YAAY,GAAAF,IAAA,CAAZE,YAAY;IAAEC,YAAY,GAAAH,IAAA,CAAZG,YAAY;IAAEC,SAAS,GAAAJ,IAAA,CAATI,SAAS;EACrE,OACER,IAAA,CAACR,IAAI;IAACiB,KAAK,EAAE;MAAEC,aAAa,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,EAC5CP,IAAI,CAACQ,GAAG,CAAC,UAACC,GAAG,EAAK;MACjB,IAAMC,aAAa,GAAGpB,MAAM,CAACmB,GAAG,EAAE,YAAY,CAAC;MAC/C,IAAME,UAAU,GAAGR,SAAS,CAACO,aAAa,CAAC;MAC3C,IAAME,QAAQ,GAAGD,UAAU,KAAK,YAAY,IAAIA,UAAU,KAAK,OAAO;MACtE,IAAME,OAAO,GAAGtB,SAAS,CAACkB,GAAG,EAAE,IAAIK,IAAI,CAAC,CAAC,CAAC;MAC1C,IAAMC,UAAU,GAAGxB,SAAS,CAACkB,GAAG,EAAEP,YAAY,CAAC;MAE/C,IAAMc,aAAa,GAAG;QACpBV,IAAI,EAAE,CAAC;QACPW,gBAAgB,EAAE,CAAC;QACnBC,eAAe,EAAE,CAAC;QAClBC,YAAY,EAAE,EAAE;QAChBC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE,QAAQ;QACxBC,WAAW,EAAE,SAAS;QACtBC,eAAe,EAAE;MACnB,CAAC;MAED,OACE1B,KAAA,CAACR,gBAAgB;QAEfmC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMvB,YAAY,CAACQ,GAAG,CAAC;QAAA,CAAC;QACjCL,KAAK,EAAE,CAACX,MAAM,CAACgC,SAAS,EAAET,aAAa,EAAED,UAAU,GAAGtB,MAAM,CAACiC,eAAe,GAAG,CAAC,CAAC,CAAE;QAAAnB,QAAA,GAEnFZ,IAAA,CAACP,IAAI;UAACgB,KAAK,EAAE,CAACX,MAAM,CAACkC,OAAO,EAAEd,OAAO,GAAGpB,MAAM,CAACmC,WAAW,GAAG,CAAC,CAAC,CAAE;UAAArB,QAAA,EAC9DjB,MAAM,CAACmB,GAAG,EAAE,QAAQ,EAAE;YAAEoB,MAAM,EAAErC;UAAG,CAAC;QAAC,CAClC,CAAC,EACPG,IAAA,CAACP,IAAI;UAACgB,KAAK,EAAE,CAACX,MAAM,CAACqC,SAAS,EAAEjB,OAAO,GAAGpB,MAAM,CAACmC,WAAW,GAAG,CAAC,CAAC,CAAE;UAAArB,QAAA,EAChEjB,MAAM,CAACmB,GAAG,EAAE,GAAG;QAAC,CACb,CAAC,EACPd,IAAA,CAACR,IAAI;UAACiB,KAAK,EAAE,CAACX,MAAM,CAACsC,OAAO,EAAEnB,QAAQ,IAAInB,MAAM,CAACuC,aAAa;QAAE,CAAE,CAAC;MAAA,GAV9DtB,aAWW,CAAC;IAEvB,CAAC;EAAC,CACE,CAAC;AAEX,CAAC;AAID,eAAeZ,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}