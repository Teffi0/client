{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _styles = _interopRequireDefault(require(\"../styles/styles\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"C:\\\\Users\\\\fred\\\\Desktop\\\\client\\\\src\\\\screens\\\\FeedScreen.js\";\nfunction FeedScreen() {\n  var _this = this;\n  var notifications = [{\n    id: 1,\n    message: 'Новая новость 1'\n  }, {\n    id: 2,\n    message: 'Уведомление 2'\n  }];\n  return (0, _jsxRuntime.jsxs)(_reactNative.ScrollView, {\n    children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n      style: _styles.default.headlineLarge,\n      children: \"\\u041B\\u0435\\u043D\\u0442\\u0430\"\n    }), notifications.map(function (notification) {\n      return (0, _jsxRuntime.jsx)(_reactNative.View, {\n        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: _styles.default.titleMedium,\n          children: notification.message\n        })\n      }, notification.id);\n    })]\n  });\n}\nvar _default = exports.default = FeedScreen;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_styles","_jsxRuntime","_jsxFileName","FeedScreen","_this","notifications","id","message","jsxs","ScrollView","children","jsx","Text","style","styles","headlineLarge","map","notification","View","titleMedium","_default","exports","default"],"sources":["C:/Users/fred/Desktop/client/src/screens/FeedScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, ScrollView } from 'react-native';\r\nimport styles from '../styles/styles';\r\n\r\nfunction FeedScreen() {\r\n  // Здесь вы можете загрузить новости или уведомления с сервера\r\n  const notifications = [\r\n    { id: 1, message: 'Новая новость 1' },\r\n    { id: 2, message: 'Уведомление 2' },\r\n    // Добавьте другие уведомления или новости\r\n  ];\r\n\r\n  return (\r\n    <ScrollView>\r\n      <Text style={styles.headlineLarge}>Лента</Text>\r\n      {notifications.map((notification) => (\r\n        <View key={notification.id}>\r\n          <Text style={styles.titleMedium}>{notification.message}</Text>\r\n        </View>\r\n      ))}\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nexport default FeedScreen;\r\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAH,sBAAA,CAAAC,OAAA;AAAsC,IAAAG,WAAA,GAAAH,OAAA;AAAA,IAAAI,YAAA;AAEtC,SAASC,UAAUA,CAAA,EAAG;EAAA,IAAAC,KAAA;EAEpB,IAAMC,aAAa,GAAG,CACpB;IAAEC,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAkB,CAAC,EACrC;IAAED,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAgB,CAAC,CAEpC;EAED,OACE,IAAAN,WAAA,CAAAO,IAAA,EAACT,YAAA,CAAAU,UAAU;IAAAC,QAAA,GACT,IAAAT,WAAA,CAAAU,GAAA,EAACZ,YAAA,CAAAa,IAAI;MAACC,KAAK,EAAEC,eAAM,CAACC,aAAc;MAAAL,QAAA,EAAC;IAAK,CAAM,CAAC,EAC9CL,aAAa,CAACW,GAAG,CAAC,UAACC,YAAY;MAAA,OAC9B,IAAAhB,WAAA,CAAAU,GAAA,EAACZ,YAAA,CAAAmB,IAAI;QAAAR,QAAA,EACH,IAAAT,WAAA,CAAAU,GAAA,EAACZ,YAAA,CAAAa,IAAI;UAACC,KAAK,EAAEC,eAAM,CAACK,WAAY;UAAAT,QAAA,EAAEO,YAAY,CAACV;QAAO,CAAO;MAAC,GADrDU,YAAY,CAACX,EAElB,CAAC;IAAA,CACR,CAAC;EAAA,CACQ,CAAC;AAEjB;AAAC,IAAAc,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEcnB,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}