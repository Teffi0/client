{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _icons = require(\"../icons\");\nvar _styles = _interopRequireDefault(require(\"../styles/styles\"));\nvar _native = require(\"@react-navigation/native\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\fred\\\\Desktop\\\\client\\\\src\\\\components\\\\TaskComponent.js\";\nvar TaskComponent = function TaskComponent(_ref) {\n  var status = _ref.status,\n    start_date = _ref.start_date,\n    time = _ref.time,\n    assigned_id = _ref.assigned_id,\n    related_client = _ref.related_client,\n    address_client = _ref.address_client,\n    users = _ref.users,\n    taskId = _ref.taskId;\n  var formattedTime = time.slice(0, 5);\n  var truncatedAssignedId = assigned_id.length > 36 ? assigned_id.slice(0, 35) + '...' : assigned_id;\n  var indexOfUl = address_client.indexOf('ул.');\n  var addressText = (indexOfUl !== -1 ? address_client.substring(indexOfUl + 3) : address_client).split(',').slice(0, 2).join(',');\n  var navigation = (0, _native.useNavigation)();\n  var handleTaskPress = function handleTaskPress() {\n    navigation.navigate('TaskDetail', {\n      taskId: taskId\n    });\n  };\n  return (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n    onPress: handleTaskPress,\n    children: (0, _jsxRuntime.jsxs)(_reactNative.View, {\n      style: _styles.default.task,\n      children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n        style: _styles.default.taskHeader,\n        children: [(0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: _styles.default.taskHeaderLeft,\n          children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n            style: _styles.default.taskTime,\n            children: formattedTime\n          })\n        }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: _styles.default.taskHeaderRight,\n          children: (0, _jsxRuntime.jsx)(_reactNative.View, {\n            style: _styles.default.taskStatus,\n            children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n              style: _styles.default.taskStatusText,\n              children: status\n            })\n          })\n        })]\n      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n        style: _styles.default.taskContent,\n        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: _styles.default.taskTitle,\n          children: truncatedAssignedId\n        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: _styles.default.taskStatusIcon,\n          children: (0, _jsxRuntime.jsx)(_icons.FollowIcon, {})\n        })]\n      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n        style: _styles.default.taskFooter,\n        children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n          style: _styles.default.taskFooterBlock,\n          children: [(0, _jsxRuntime.jsx)(_icons.ProfileIcon, {}), (0, _jsxRuntime.jsxs)(_reactNative.Text, {\n            style: _styles.default.taskFooterText,\n            children: [users, \" \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\"]\n          })]\n        }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n          style: _styles.default.taskFooterBlock,\n          children: [(0, _jsxRuntime.jsx)(_icons.LocationIcon, {}), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n            style: _styles.default.taskFooterText,\n            children: addressText\n          })]\n        })]\n      })]\n    })\n  });\n};\nvar _default = exports.default = TaskComponent;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_icons","_styles","_native","_jsxRuntime","_this","_jsxFileName","TaskComponent","_ref","status","start_date","time","assigned_id","related_client","address_client","users","taskId","formattedTime","slice","truncatedAssignedId","length","indexOfUl","indexOf","addressText","substring","split","join","navigation","useNavigation","handleTaskPress","navigate","jsx","TouchableOpacity","onPress","children","jsxs","View","style","styles","task","taskHeader","taskHeaderLeft","Text","taskTime","taskHeaderRight","taskStatus","taskStatusText","taskContent","taskTitle","taskStatusIcon","FollowIcon","taskFooter","taskFooterBlock","ProfileIcon","taskFooterText","LocationIcon","_default","exports","default"],"sources":["C:/Users/fred/Desktop/client/src/components/TaskComponent.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { FollowIcon, ProfileIcon, LocationIcon } from '../icons';\r\nimport styles from '../styles/styles'; // Импортируем стили\r\nimport { TouchableOpacity } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst TaskComponent = ({ status, start_date, time, assigned_id, related_client, address_client, users, taskId }) => {\r\n\r\n  const formattedTime = time.slice(0, 5);\r\n  const truncatedAssignedId = assigned_id.length > 36 ? assigned_id.slice(0, 35) + '...' : assigned_id;\r\n\r\n  const indexOfUl = address_client.indexOf('ул.');\r\n  const addressText = (indexOfUl !== -1 ? address_client.substring(indexOfUl + 3) : address_client).split(',').slice(0, 2).join(',');\r\n  \r\n    const navigation = useNavigation();\r\n    const handleTaskPress = () => {\r\n        navigation.navigate('TaskDetail', { taskId });\r\n    };\r\n\r\n  return (\r\n    <TouchableOpacity onPress={handleTaskPress}>\r\n      <View style={styles.task}>\r\n        <View style={styles.taskHeader}>\r\n          <View style={styles.taskHeaderLeft}>\r\n            <Text style={styles.taskTime}>{formattedTime}</Text>\r\n          </View>\r\n          <View style={styles.taskHeaderRight}>\r\n            <View style={styles.taskStatus}>\r\n              <Text style={styles.taskStatusText}>{status}</Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n        <View style={styles.taskContent}>\r\n          <Text style={styles.taskTitle}>{truncatedAssignedId}</Text>\r\n          <Text style={styles.taskStatusIcon}>\r\n            <FollowIcon />\r\n          </Text>\r\n        </View>\r\n        <View style={styles.taskFooter}>\r\n          <View style={styles.taskFooterBlock}>\r\n            <ProfileIcon />\r\n            <Text style={styles.taskFooterText}>{users} участник</Text>\r\n          </View>\r\n          <View style={styles.taskFooterBlock}>\r\n            <LocationIcon />\r\n            <Text style={styles.taskFooterText}>{addressText}</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nexport default TaskComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}