{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { format, addMonths, startOfMonth, parseISO } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport styles from \"../styles/styles\";\nimport RenderMonth from \"./RenderMonth\";\nimport TasksForSelectedDateComponent from \"./TasksForSelectedDateComponent\";\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get('window').height;\nvar VerticalCalendar = function VerticalCalendar(_ref) {\n  var tasks = _ref.tasks,\n    taskDates = _ref.taskDates,\n    renderAddButton = _ref.renderAddButton;\n  var flatListRef = useRef(null);\n  var _useState = useState(new Date()),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDate = _useState2[0],\n    setSelectedDate = _useState2[1];\n  var _useState3 = useState(Array.from({\n      length: 5\n    }, function (_, i) {\n      return addMonths(startOfMonth(new Date()), i - 2);\n    })),\n    _useState4 = _slicedToArray(_useState3, 2),\n    data = _useState4[0],\n    setData = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    page = _useState6[0],\n    setPage = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    modalVisible = _useState8[0],\n    setModalVisible = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isFullSize = _useState10[0],\n    setIsFullSize = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isClosing = _useState12[0],\n    setIsClosing = _useState12[1];\n  var ModalFullHeight = screenHeight * 0.05;\n  var ModalHeight = screenHeight * 0.35;\n  var modalHeight = useRef(new Animated.Value(ModalHeight));\n  var _useState13 = useState(new Set()),\n    _useState14 = _slicedToArray(_useState13, 2),\n    expandedClients = _useState14[0],\n    setExpandedClients = _useState14[1];\n  var handleToggleClient = useCallback(function (client) {\n    setExpandedClients(function (current) {\n      var updated = new Set(current);\n      if (updated.has(client)) {\n        updated.delete(client);\n      } else {\n        updated.add(client);\n      }\n      return updated;\n    });\n  }, []);\n  var tasksBySelectedDate = useMemo(function () {\n    return tasks.filter(function (task) {\n      return format(parseISO(task.start_date), 'yyyy-MM-dd') === format(selectedDate, 'yyyy-MM-dd');\n    }).reduce(function (acc, task) {\n      var client = task.fullname_client;\n      acc[client] = acc[client] || [];\n      acc[client].push(task);\n      return acc;\n    }, {});\n  }, [tasks, selectedDate]);\n  useEffect(function () {\n    if (isFullSize) {\n      Animated.timing(modalHeight.current, {\n        toValue: ModalFullHeight,\n        duration: 300,\n        useNativeDriver: false\n      }).start();\n    } else {\n      Animated.timing(modalHeight.current, {\n        toValue: ModalHeight,\n        duration: 300,\n        useNativeDriver: false\n      }).start();\n    }\n  }, [isFullSize]);\n  var onEndReached = function onEndReached() {\n    setData(function (prevData) {\n      return [].concat(_toConsumableArray(prevData), _toConsumableArray(Array.from({\n        length: 5\n      }, function (_, i) {\n        return addMonths(startOfMonth(new Date()), page * 5 - 2 + i);\n      })));\n    });\n    setPage(function (prevPage) {\n      return prevPage + 1;\n    });\n  };\n  useEffect(function () {\n    var _flatListRef$current;\n    (_flatListRef$current = flatListRef.current) == null ? void 0 : _flatListRef$current.scrollToIndex({\n      index: 2,\n      animated: false\n    });\n  }, []);\n  var handleDatePress = function handleDatePress(day) {\n    setSelectedDate(day);\n    setModalVisible(true);\n    animateModal(screenHeight * (isFullSize ? 0.05 : 0.35));\n  };\n  var animateModal = function animateModal(newHeight) {\n    Animated.spring(modalHeight.current, {\n      toValue: newHeight,\n      useNativeDriver: false,\n      bounciness: 0\n    }).start();\n  };\n  var panResponder = useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant() {\n      modalHeight.current.setOffset(modalHeight.current._value);\n      modalHeight.current.setValue(0);\n    },\n    onPanResponderMove: Animated.event([null, {\n      dy: modalHeight.current\n    }], {\n      useNativeDriver: false\n    }),\n    onPanResponderRelease: function onPanResponderRelease() {\n      modalHeight.current.flattenOffset();\n      setIsFullSize(!isFullSize);\n      animateModal(screenHeight * (isFullSize ? 0.35 : 0.05));\n    }\n  })).current;\n  var openFullModal = useCallback(function () {\n    Animated.spring(modalHeight.current, {\n      toValue: ModalFullHeight,\n      useNativeDriver: false,\n      bounciness: 0\n    }).start(function () {\n      return setIsFullSize(true);\n    });\n  }, [ModalFullHeight]);\n  var openModal = useCallback(function () {\n    setModalVisible(true);\n    Animated.spring(modalHeight.current, {\n      toValue: ModalHeight,\n      useNativeDriver: false,\n      bounciness: 0\n    }).start(function () {\n      return setIsFullSize(false);\n    });\n  }, [ModalHeight]);\n  var closeModal = useCallback(function () {\n    setIsClosing(true);\n    Animated.spring(modalHeight.current, {\n      toValue: screenHeight,\n      useNativeDriver: false,\n      bounciness: 0\n    }).start(function () {\n      setModalVisible(false);\n      setIsFullSize(false);\n      modalHeight.current.setValue(ModalHeight - screenHeight);\n      setIsClosing(false);\n    });\n  }, [screenHeight, ModalHeight]);\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(RenderMonth, {\n      date: item,\n      handleDatePress: handleDatePress,\n      taskDates: taskDates\n    });\n  };\n  var getItemLayout = useCallback(function (_, index) {\n    return {\n      length: 400,\n      offset: 400 * index,\n      index: index\n    };\n  }, []);\n  var keyExtractor = useCallback(function (item, index) {\n    return `${format(item, 'yyyy-MM')}-${index}`;\n  }, []);\n  var modifiedRenderAddButton = useCallback(function () {\n    if (!isClosing) return renderAddButton();\n  }, [isClosing, renderAddButton]);\n  return _jsxs(_Fragment, {\n    children: [_jsx(FlatList, {\n      ref: flatListRef,\n      data: data,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return format(item, 'yyyy-MM');\n      },\n      onEndReached: onEndReached,\n      onEndReachedThreshold: 0.5,\n      showsVerticalScrollIndicator: false,\n      removeClippedSubviews: true,\n      initialScrollIndex: 1\n    }), _jsxs(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        return closeModal();\n      },\n      children: [_jsx(Animated.View, _objectSpread(_objectSpread({\n        style: [styles.modalOverlay, {\n          top: modalHeight.current\n        }]\n      }, panResponder.panHandlers), {}, {\n        children: _jsx(View, {\n          style: styles.container,\n          children: _jsxs(View, {\n            style: styles.contentContainer,\n            children: [_jsx(View, {\n              style: styles.taskHeader,\n              children: _jsx(Text, {\n                style: styles.modalText,\n                children: format(selectedDate, 'd-MMMM', {\n                  locale: ru\n                })\n              })\n            }), _jsx(ScrollView, {\n              showsVerticalScrollIndicator: false,\n              style: styles.modalScrollView,\n              overScrollMode: \"never\",\n              children: _jsx(TasksForSelectedDateComponent, {\n                tasksByClient: tasksBySelectedDate,\n                expandedClients: expandedClients,\n                toggleClient: handleToggleClient\n              })\n            })]\n          })\n        })\n      })), modifiedRenderAddButton()]\n    })]\n  });\n};\nVerticalCalendar.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  taskDates: PropTypes.object.isRequired,\n  renderAddButton: PropTypes.func.isRequired\n};\nexport default VerticalCalendar;","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useMemo","View","Text","FlatList","Modal","Animated","PanResponder","Dimensions","ScrollView","format","addMonths","startOfMonth","parseISO","ru","styles","RenderMonth","TasksForSelectedDateComponent","PropTypes","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","screenHeight","get","height","VerticalCalendar","_ref","tasks","taskDates","renderAddButton","flatListRef","_useState","Date","_useState2","_slicedToArray","selectedDate","setSelectedDate","_useState3","Array","from","length","_","i","_useState4","data","setData","_useState5","_useState6","page","setPage","_useState7","_useState8","modalVisible","setModalVisible","_useState9","_useState10","isFullSize","setIsFullSize","_useState11","_useState12","isClosing","setIsClosing","ModalFullHeight","ModalHeight","modalHeight","Value","_useState13","Set","_useState14","expandedClients","setExpandedClients","handleToggleClient","client","current","updated","has","delete","add","tasksBySelectedDate","filter","task","start_date","reduce","acc","fullname_client","push","timing","toValue","duration","useNativeDriver","start","onEndReached","prevData","concat","_toConsumableArray","prevPage","_flatListRef$current","scrollToIndex","index","animated","handleDatePress","day","animateModal","newHeight","spring","bounciness","panResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","setOffset","_value","setValue","onPanResponderMove","event","dy","onPanResponderRelease","flattenOffset","openFullModal","openModal","closeModal","renderItem","_ref2","item","date","getItemLayout","offset","keyExtractor","modifiedRenderAddButton","children","ref","onEndReachedThreshold","showsVerticalScrollIndicator","removeClippedSubviews","initialScrollIndex","animationType","transparent","visible","onRequestClose","_objectSpread","style","modalOverlay","top","panHandlers","container","contentContainer","taskHeader","modalText","locale","modalScrollView","overScrollMode","tasksByClient","toggleClient","propTypes","array","isRequired","object","func"],"sources":["C:/Users/fred/Desktop/client/src/components/VerticalCalendar.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\r\nimport { View, Text, FlatList, Modal, Animated, PanResponder, Dimensions, ScrollView } from 'react-native';\r\nimport { format, addMonths, startOfMonth, parseISO } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\nimport styles from '../styles/styles';\r\nimport RenderMonth from './RenderMonth';\r\nimport TasksForSelectedDateComponent from './TasksForSelectedDateComponent';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\nconst VerticalCalendar = ({ tasks, taskDates, renderAddButton }) => {\r\n  const flatListRef = useRef(null);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [data, setData] = useState(Array.from({ length: 5 }, (_, i) => addMonths(startOfMonth(new Date()), i - 2)));\r\n  const [page, setPage] = useState(0);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [isFullSize, setIsFullSize] = useState(false);\r\n  const [isClosing, setIsClosing] = useState(false);\r\n\r\n  const ModalFullHeight = screenHeight * 0.05;\r\n  const ModalHeight = screenHeight * 0.35;\r\n  const modalHeight = useRef(new Animated.Value(ModalHeight));\r\n\r\n  const [expandedClients, setExpandedClients] = useState(new Set());\r\n\r\n  const handleToggleClient = useCallback((client) => {\r\n    setExpandedClients((current) => {\r\n      const updated = new Set(current);\r\n      if (updated.has(client)) {\r\n        updated.delete(client);\r\n      } else {\r\n        updated.add(client);\r\n      }\r\n      return updated;\r\n    });\r\n  }, []);\r\n\r\n  const tasksBySelectedDate = useMemo(() => tasks.filter(task =>\r\n    format(parseISO(task.start_date), 'yyyy-MM-dd') === format(selectedDate, 'yyyy-MM-dd')\r\n  ).reduce((acc, task) => {\r\n    const client = task.fullname_client;\r\n    acc[client] = acc[client] || [];\r\n    acc[client].push(task);\r\n    return acc;\r\n  }, {}), [tasks, selectedDate]);\r\n\r\n  useEffect(() => {\r\n    if (isFullSize) {\r\n      Animated.timing(modalHeight.current, {\r\n        toValue: ModalFullHeight,\r\n        duration: 300,\r\n        useNativeDriver: false,\r\n      }).start();\r\n    } else {\r\n      Animated.timing(modalHeight.current, {\r\n        toValue: ModalHeight,\r\n        duration: 300,\r\n        useNativeDriver: false,\r\n      }).start();\r\n    }\r\n  }, [isFullSize]);\r\n\r\n  \r\n\r\n  const onEndReached = () => {\r\n    setData(prevData => [...prevData, ...Array.from({ length: 5 }, (_, i) => addMonths(startOfMonth(new Date()), page * 5 - 2 + i))]);\r\n    setPage(prevPage => prevPage + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    flatListRef.current?.scrollToIndex({ index: 2, animated: false });\r\n  }, []);\r\n\r\n  const handleDatePress = day => {\r\n    setSelectedDate(day);\r\n    setModalVisible(true);\r\n    animateModal(screenHeight * (isFullSize ? 0.05 : 0.35));\r\n  };\r\n\r\n  const animateModal = newHeight => {\r\n    Animated.spring(modalHeight.current, {\r\n      toValue: newHeight,\r\n      useNativeDriver: false,\r\n      bounciness: 0\r\n    }).start();\r\n  };\r\n\r\n  const panResponder = useRef(\r\n    PanResponder.create({\r\n      onStartShouldSetPanResponder: () => true,\r\n      onPanResponderGrant: () => {\r\n        modalHeight.current.setOffset(modalHeight.current._value);\r\n        modalHeight.current.setValue(0);\r\n      },\r\n      onPanResponderMove: Animated.event([null, { dy: modalHeight.current }], { useNativeDriver: false }),\r\n      onPanResponderRelease: () => {\r\n        modalHeight.current.flattenOffset();\r\n        setIsFullSize(!isFullSize);\r\n        animateModal(screenHeight * (isFullSize ? 0.35 : 0.05));\r\n      }\r\n    })\r\n  ).current;\r\n\r\n  const openFullModal = useCallback(() => {\r\n    Animated.spring(modalHeight.current, {\r\n      toValue: ModalFullHeight,\r\n      useNativeDriver: false,\r\n      bounciness: 0\r\n    }).start(() => setIsFullSize(true));\r\n  }, [ModalFullHeight]);\r\n\r\n  const openModal = useCallback(() => {\r\n    setModalVisible(true);\r\n    Animated.spring(modalHeight.current, {\r\n      toValue: ModalHeight,\r\n      useNativeDriver: false,\r\n      bounciness: 0\r\n    }).start(() => setIsFullSize(false));\r\n  }, [ModalHeight]);\r\n\r\n  const closeModal = useCallback(() => {\r\n    setIsClosing(true); // Начало процесса закрытия модального окна\r\n    Animated.spring(modalHeight.current, {\r\n      toValue: screenHeight,\r\n      useNativeDriver: false,\r\n      bounciness: 0\r\n    }).start(() => {\r\n      setModalVisible(false);\r\n      setIsFullSize(false);\r\n      modalHeight.current.setValue(ModalHeight - screenHeight);\r\n      setIsClosing(false); // Завершение процесса закрытия модального окна\r\n    });\r\n  }, [screenHeight, ModalHeight]);\r\n\r\n  const renderItem = ({ item }) => <RenderMonth date={item} handleDatePress={handleDatePress} taskDates={taskDates} />;\r\n\r\n  const getItemLayout = useCallback((_, index) => ({\r\n    length: 400, offset: 400 * index, index\r\n  }), []);\r\n\r\n  const keyExtractor = useCallback((item, index) => `${format(item, 'yyyy-MM')}-${index}`, []);\r\n\r\n  const modifiedRenderAddButton = useCallback(() => {\r\n    if (!isClosing) return renderAddButton();\r\n  }, [isClosing, renderAddButton]);\r\n\r\n  return (\r\n    <>\r\n      <FlatList\r\n        ref={flatListRef}\r\n        data={data}\r\n        renderItem={renderItem}\r\n        keyExtractor={item => format(item, 'yyyy-MM')}\r\n        onEndReached={onEndReached}\r\n        onEndReachedThreshold={0.5}\r\n        showsVerticalScrollIndicator={false}\r\n        removeClippedSubviews={true}\r\n        initialScrollIndex={1}\r\n      />\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => closeModal()}\r\n      >\r\n        <Animated.View style={[styles.modalOverlay, { top: modalHeight.current }]} {...panResponder.panHandlers}>\r\n          <View style={styles.container}>\r\n            <View style={styles.contentContainer}>\r\n              <View style={styles.taskHeader}>\r\n                <Text style={styles.modalText}>{format(selectedDate, 'd-MMMM', { locale: ru })}</Text>\r\n              </View>\r\n              <ScrollView showsVerticalScrollIndicator={false} style={styles.modalScrollView} overScrollMode=\"never\">\r\n                <TasksForSelectedDateComponent\r\n                  tasksByClient={tasksBySelectedDate}\r\n                  expandedClients={expandedClients}\r\n                  toggleClient={handleToggleClient}\r\n                />\r\n              </ScrollView>\r\n\r\n            </View>\r\n          </View>\r\n        </Animated.View>\r\n        {modifiedRenderAddButton()}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nVerticalCalendar.propTypes = {\r\n  tasks: PropTypes.array.isRequired,\r\n  taskDates: PropTypes.object.isRequired,\r\n  renderAddButton: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default VerticalCalendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}