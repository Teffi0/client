{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"serviceName\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useNavigation } from '@react-navigation/native';\nimport styles from \"../styles/styles\";\nimport { formatDate, formatTime } from \"../utils/dateFormatter\";\nimport { updateTaskStatus } from \"../utils/taskScreenHelpers\";\nimport DropdownItem from \"../components/DropdownItem\";\nimport { fetchTaskParticipants, fetchDraftData } from \"../utils/tasks\";\nimport { BackIcon, EditIcon, None } from \"../icons\";\nimport NewTaskScreen from \"./NewTaskScreen\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TaskDetailScreen = function TaskDetailScreen(_ref) {\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var _route$params = route.params;\n  _route$params = _route$params === void 0 ? {} : _route$params;\n  var serviceName = _route$params.serviceName,\n    initialTask = _objectWithoutProperties(_route$params, _excluded);\n  var _useState = useState(initialTask),\n    _useState2 = _slicedToArray(_useState, 2),\n    task = _useState2[0],\n    setTask = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isModalVisible = _useState4[0],\n    setModalVisible = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedInventory = _useState6[0],\n    setSelectedInventory = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    inventoryItems = _useState8[0],\n    setInventoryItems = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    taskInventory = _useState10[0],\n    setTaskInventory = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isNewTaskScreenVisible = _useState12[0],\n    setNewTaskScreenVisible = _useState12[1];\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    draftData = _useState14[0],\n    setDraftData = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    selectedImages = _useState16[0],\n    setSelectedImages = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    fullScreenImageModalVisible = _useState18[0],\n    setFullScreenImageModalVisible = _useState18[1];\n  var _useState19 = useState(null),\n    _useState20 = _slicedToArray(_useState19, 2),\n    currentImage = _useState20[0],\n    setCurrentImage = _useState20[1];\n  var _useState21 = useState(0),\n    _useState22 = _slicedToArray(_useState21, 2),\n    currentImageIndex = _useState22[0],\n    setCurrentImageIndex = _useState22[1];\n  var openFullScreenImage = function openFullScreenImage(index) {\n    setCurrentImageIndex(index);\n    setFullScreenImageModalVisible(true);\n  };\n  var showNextImage = function showNextImage() {\n    if (currentImageIndex < selectedImages.length - 1) {\n      setCurrentImageIndex(currentImageIndex + 1);\n    }\n  };\n  var showPreviousImage = function showPreviousImage() {\n    if (currentImageIndex > 0) {\n      setCurrentImageIndex(currentImageIndex - 1);\n    }\n  };\n  var FullScreenImageModal = function FullScreenImageModal(_ref2) {\n    var _selectedImages$curre;\n    var isVisible = _ref2.isVisible,\n      onClose = _ref2.onClose;\n    var imageUri = (_selectedImages$curre = selectedImages[currentImageIndex]) == null ? void 0 : _selectedImages$curre.uri;\n    return _jsx(Modal, {\n      visible: isVisible,\n      transparent: false,\n      animationType: \"fade\",\n      onRequestClose: onClose,\n      children: _jsxs(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'black',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: [imageUri && _jsx(Image, {\n          source: {\n            uri: imageUri\n          },\n          style: {\n            width: '100%',\n            height: '100%',\n            resizeMode: 'contain'\n          }\n        }), _jsx(TouchableOpacity, {\n          style: {\n            position: 'absolute',\n            top: 40,\n            right: 20\n          },\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: {\n              color: 'white',\n              fontSize: 30\n            },\n            children: \"\\xD7\"\n          })\n        }), currentImageIndex > 0 && _jsx(TouchableOpacity, {\n          style: {\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            bottom: 0,\n            right: '50%',\n            justifyContent: 'center'\n          },\n          onPress: showPreviousImage,\n          children: _jsx(Text, {\n            style: {\n              color: 'white',\n              fontSize: 42,\n              textAlign: 'left',\n              marginLeft: 20\n            },\n            children: \"\\u2039\"\n          })\n        }), currentImageIndex < selectedImages.length - 1 && _jsx(TouchableOpacity, {\n          style: {\n            position: 'absolute',\n            right: 0,\n            top: 0,\n            bottom: 0,\n            left: '50%',\n            justifyContent: 'center'\n          },\n          onPress: showNextImage,\n          children: _jsx(Text, {\n            style: {\n              color: 'white',\n              fontSize: 42,\n              textAlign: 'right',\n              marginRight: 20\n            },\n            children: \"\\u203A\"\n          })\n        })]\n      })\n    });\n  };\n  var handleChoosePhoto = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (!permissionResult.granted) {\n        Alert.alert('Уведомление', 'Необходим доступ к фотографиям для загрузки в отчет');\n        return;\n      }\n      try {\n        var pickerResult = yield ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.Images,\n          allowsMultipleSelection: true,\n          quality: 1\n        });\n        if (!pickerResult.canceled) {\n          setSelectedImages(function (prevImages) {\n            return [].concat(_toConsumableArray(prevImages), _toConsumableArray(pickerResult.assets || []));\n          });\n        }\n      } catch (error) {\n        Alert.alert('Ошибка', 'Произошла ошибка при выборе фотографий');\n      }\n    });\n    return function handleChoosePhoto() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var uploadImages = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (selectedImages.length === 0) {\n        Alert.alert('Уведомление', 'Пожалуйста, выберите фотографии для загрузки');\n        return;\n      }\n      var formData = new FormData();\n      selectedImages.forEach(function (image, index) {\n        formData.append('photos', {\n          name: `photo_${index}.jpg`,\n          type: 'image/jpeg',\n          uri: Platform.OS === 'android' ? image.uri : image.uri.replace('file://', '')\n        });\n      });\n      try {\n        var taskId = task.id;\n        var response = yield fetch(`http://31.129.101.174/tasks/${taskId}/photos`, {\n          method: 'POST',\n          body: formData,\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (!response.ok) throw new Error('Сетевая ошибка при загрузке изображений');\n        setSelectedImages([]);\n      } catch (error) {\n        Alert.alert('Ошибка', 'Произошла ошибка при загрузке фотографий');\n      }\n    });\n    return function uploadImages() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleRemoveImage = function handleRemoveImage(index) {\n    setSelectedImages(function (currentImages) {\n      return currentImages.filter(function (_, i) {\n        return i !== index;\n      });\n    });\n  };\n  var handleAddTaskPress = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      if (task.status === 'в процессе') {\n        setModalVisible(true);\n      } else {\n        try {\n          var updatedTask = _objectSpread(_objectSpread({}, task), {}, {\n            status: 'в процессе'\n          });\n          yield updateTaskStatus(task.id, updatedTask);\n          setTask(updatedTask);\n          navigation.navigate('Tabs', {\n            screen: 'TasksScreen'\n          });\n        } catch (error) {\n          console.error('Ошибка при обновлении статуса задачи:', error);\n        }\n      }\n    });\n    return function handleAddTaskPress() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleBackPress = function handleBackPress() {\n    navigation.goBack();\n  };\n  useEffect(function () {}, [task.id]);\n  useEffect(function () {\n    var fetchTaskInventory = function () {\n      var _ref6 = _asyncToGenerator(function* () {\n        if (task.status === 'выполнено') {\n          try {\n            var response = yield fetch(`http://31.129.101.174/tasks/${task.id}/inventory`);\n            var data = yield response.json();\n            setTaskInventory(data);\n          } catch (error) {\n            console.error('Ошибка при получении расходников для задачи:', error);\n          }\n        }\n      });\n      return function fetchTaskInventory() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    fetchTaskInventory();\n  }, [task.status, task.id]);\n  var ImagePreview = function ImagePreview(_ref7) {\n    var images = _ref7.images,\n      onRemovePress = _ref7.onRemovePress;\n    return _jsxs(ScrollView, {\n      horizontal: true,\n      style: styles.imagePreviewContainer,\n      showsHorizontalScrollIndicator: false,\n      children: [images.map(function (image, index) {\n        return _jsx(View, {\n          style: styles.imageContainer,\n          children: _jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              return openFullScreenImage(index);\n            },\n            style: styles.imagePreview,\n            children: [_jsx(Image, {\n              source: {\n                uri: image.uri\n              },\n              style: styles.image\n            }), _jsx(TouchableOpacity, {\n              style: styles.removeIconContainer,\n              onPress: function onPress() {\n                return onRemovePress(index);\n              },\n              children: _jsx(Text, {\n                style: styles.removeIcon,\n                children: \"\\xD7\"\n              })\n            })]\n          })\n        }, index);\n      }), _jsx(TouchableOpacity, {\n        onPress: handleChoosePhoto,\n        style: styles.image,\n        children: _jsx(View, {\n          style: styles.photoPickerContainer,\n          children: _jsx(Text, {\n            style: styles.photoPickerPlusIcon,\n            children: \"+\"\n          })\n        })\n      })]\n    });\n  };\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      console.log(task.params);\n      var data = yield fetchDraftData(task.params.id);\n      setDraftData(data);\n    })();\n  }, [task.id, task.status]);\n  var handleInventoryChange = function handleInventoryChange(newSelectedInventory) {\n    setSelectedInventory(newSelectedInventory);\n  };\n  var handleEditPress = function handleEditPress() {\n    if (draftData) {\n      setNewTaskScreenVisible(true);\n    } else {\n      navigation.navigate('TaskDetail', {\n        screen: 'TaskDetailScreen',\n        params: _objectSpread(_objectSpread({}, task), {}, {\n          serviceName: serviceName\n        })\n      });\n    }\n  };\n  var getHeaderTitle = function getHeaderTitle() {\n    switch (task.status) {\n      case 'новая':\n        return 'Новая задача';\n      case 'в процессе':\n        return 'Задача в процессе';\n      case 'выполнено':\n        return 'Завершенная задача';\n      default:\n        return 'Детали задачи';\n    }\n  };\n  var completeTask = function () {\n    var _ref9 = _asyncToGenerator(function* () {\n      if (selectedInventory.length === 0) {\n        alert('Выберите инвентарь перед завершением задачи.');\n        return;\n      }\n      try {\n        var updatedTask = _objectSpread(_objectSpread({}, task), {}, {\n          status: 'выполнено'\n        });\n        var statusResponse = yield updateTaskStatus(task.id, updatedTask);\n        var filteredInventory = selectedInventory.filter(function (item) {\n          return item.quantity > 0;\n        });\n        var inventoryResponse = yield fetch(`http://31.129.101.174/tasks/${task.id}/complete`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            inventory: filteredInventory.map(function (item) {\n              return {\n                inventory_id: item.id,\n                quantity: item.quantity\n              };\n            })\n          })\n        });\n        if (!inventoryResponse.ok) {\n          throw new Error('Ошибка при обновлении инвентаря');\n        }\n        var inventoryResult = yield inventoryResponse.json();\n        yield uploadImages();\n        setModalVisible(false);\n        navigation.navigate('Tabs', {\n          screen: 'TasksScreen'\n        });\n      } catch (error) {\n        console.error('Ошибка при завершении задачи:', error);\n      }\n    });\n    return function completeTask() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  var fetchInventoryItems = function () {\n    var _ref10 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch('http://31.129.101.174/inventory');\n        var data = yield response.json();\n        setInventoryItems(data);\n      } catch (error) {\n        console.error('Ошибка при получении инвентаря:', error);\n      }\n    });\n    return function fetchInventoryItems() {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchInventoryItems();\n  }, []);\n  useEffect(function () {\n    var updateTaskDetails = function () {\n      var _ref11 = _asyncToGenerator(function* () {\n        var participants = yield fetchTaskParticipants(task.id);\n        setTask(_objectSpread(_objectSpread({}, task), {}, {\n          employees: participants\n        }));\n      });\n      return function updateTaskDetails() {\n        return _ref11.apply(this, arguments);\n      };\n    }();\n    updateTaskDetails();\n  }, [task.id]);\n  var Section = function Section(_ref12) {\n    var title = _ref12.title,\n      children = _ref12.children;\n    return _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: title\n      }), _jsx(View, {\n        style: styles.sectionContent,\n        children: children\n      })]\n    });\n  };\n  var Row = function Row(_ref13) {\n    var title = _ref13.title,\n      value = _ref13.value;\n    var displayValue = value;\n    if (Array.isArray(value) && value.length > 0 && value[0].hasOwnProperty('full_name')) {\n      displayValue = value.map(function (employee) {\n        return employee.full_name;\n      }).join(', ');\n    }\n    return _jsxs(View, {\n      style: styles.rowStyle,\n      children: [_jsx(Text, {\n        style: styles.rowTitle,\n        children: title\n      }), _jsx(Text, {\n        style: styles.rowValue,\n        children: displayValue\n      })]\n    });\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.contentContainerTask,\n      children: [_jsx(FullScreenImageModal, {\n        isVisible: fullScreenImageModalVisible,\n        imageUri: currentImage,\n        onClose: function onClose() {\n          return setFullScreenImageModalVisible(false);\n        }\n      }), _jsxs(View, {\n        style: styles.taskHeader,\n        children: [_jsx(TouchableOpacity, {\n          onPress: handleBackPress,\n          children: _jsx(BackIcon, {})\n        }), _jsx(Text, {\n          style: [styles.titleMedium, {\n            flex: 1,\n            textAlign: 'center'\n          }],\n          children: getHeaderTitle()\n        }), _jsx(TouchableOpacity, {\n          onPress: handleEditPress,\n          children: _jsx(EditIcon, {})\n        })]\n      }), _jsxs(ScrollView, {\n        contentContainerStyle: styles.scrollViewContent,\n        showsVerticalScrollIndicator: false,\n        overScrollMode: \"never\",\n        children: [_jsx(Text, {\n          style: styles.headlineMedium,\n          children: serviceName\n        }), _jsxs(Section, {\n          title: \"\\u041A\\u043B\\u0438\\u0435\\u043D\\u0442\",\n          children: [_jsx(Row, {\n            title: \"\\u0424\\u0418\\u041E:\",\n            value: task.fullname_client\n          }), _jsx(Row, {\n            title: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\",\n            value: task.phone\n          }), _jsx(Row, {\n            title: \"\\u0410\\u0434\\u0440\\u0435\\u0441:\",\n            value: task.address_client\n          })]\n        }), _jsxs(Section, {\n          title: \"\\u041E\\u043F\\u043B\\u0430\\u0442\\u0430\",\n          children: [_jsx(Row, {\n            title: \"\\u0421\\u043F\\u043E\\u0441\\u043E\\u0431 \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B:\",\n            value: task.payment || 'Не указан'\n          }), _jsx(Row, {\n            title: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C:\",\n            value: task.cost ? `${task.cost} руб.` : 'Не указана'\n          })]\n        }), _jsxs(Section, {\n          title: \"\\u0420\\u0430\\u0431\\u043E\\u0442\\u0430\",\n          children: [_jsx(Row, {\n            title: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439:\",\n            value: task.responsible || 'Не назначен'\n          }), _jsx(Row, {\n            title: \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0438:\",\n            value: task.employees || 'Нет информации'\n          }), _jsx(Row, {\n            title: \"\\u0414\\u0430\\u0442\\u0430 \\u0438 \\u0432\\u0440\\u0435\\u043C\\u044F \\u043D\\u0430\\u0447\\u0430\\u043B\\u0430:\",\n            value: task.start_date ? `${formatDate(task.start_date)} ${formatTime(task.start_time)}` : 'Не указаны'\n          }), _jsx(Row, {\n            title: \"\\u0414\\u0430\\u0442\\u0430 \\u0438 \\u0432\\u0440\\u0435\\u043C\\u044F \\u043E\\u043A\\u043E\\u043D\\u0447\\u0430\\u043D\\u0438\\u044F:\",\n            value: task.end_date ? `${formatDate(task.end_date)} ${formatTime(task.end_time)}` : 'Не указаны'\n          })]\n        }), task.status === 'выполнено' && _jsx(Section, {\n          title: \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\\u043D\\u0438\\u043A\\u0438\",\n          children: taskInventory.length > 0 ? taskInventory.map(function (item, index) {\n            return _jsx(Row, {\n              title: item.name,\n              value: `Количество: ${item.quantity}`\n            }, index);\n          }) : _jsx(Text, {\n            style: styles.bodyMedium,\n            children: \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\\u043D\\u0438\\u043A\\u0438 \\u043D\\u0435 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C.\"\n          })\n        }), _jsx(Section, {\n          title: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n          children: _jsx(Text, {\n            style: [styles.bodyMedium, {\n              marginBottom: 300\n            }],\n            children: task.description || 'Описание отсутствует.'\n          })\n        })]\n      }), _jsx(Modal, {\n        visible: isModalVisible,\n        animationType: \"slide\",\n        onRequestClose: function onRequestClose() {\n          return setModalVisible(false);\n        },\n        children: _jsx(SafeAreaView, {\n          style: styles.container,\n          children: _jsxs(View, {\n            style: styles.contentContainerTask,\n            children: [_jsxs(View, {\n              style: styles.taskHeader,\n              children: [_jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return setModalVisible(false);\n                },\n                children: _jsx(BackIcon, {})\n              }), _jsx(Text, {\n                style: [styles.titleMedium, {\n                  flex: 1,\n                  textAlign: 'center'\n                }],\n                children: \" \\u041E\\u0442\\u0447\\u0451\\u0442 \"\n              }), _jsx(TouchableOpacity, {\n                children: _jsx(None, {})\n              })]\n            }), _jsxs(View, {\n              style: styles.contentContainer,\n              children: [_jsx(DropdownItem, {\n                label: \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\\u043D\\u0438\\u043A\\u0438\",\n                options: inventoryItems,\n                selectedValues: selectedInventory,\n                onValueChange: handleInventoryChange\n              }), _jsx(ImagePreview, {\n                images: selectedImages,\n                onAddPress: handleChoosePhoto,\n                onRemovePress: handleRemoveImage\n              }), _jsx(TouchableOpacity, {\n                onPress: uploadImages,\n                children: _jsx(Text, {\n                  children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0444\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u0438\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: styles.addButton,\n                onPress: completeTask,\n                children: _jsx(Text, {\n                  style: styles.addButtonText,\n                  children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u0440\\u0430\\u0431\\u043E\\u0442\\u0443\"\n                })\n              })]\n            })]\n          })\n        })\n      }), task.status !== 'выполнено' && _jsx(TouchableOpacity, {\n        style: styles.addButton,\n        onPress: handleAddTaskPress,\n        children: _jsx(Text, {\n          style: styles.addButtonText,\n          children: task.status === 'в процессе' ? 'Добавить расходники' : 'Начать выполнение'\n        })\n      })]\n    }), _jsx(Modal, {\n      visible: isNewTaskScreenVisible,\n      animationType: \"slide\",\n      onRequestClose: function onRequestClose() {\n        return setNewTaskScreenVisible(false);\n      },\n      children: _jsx(NewTaskScreen, {\n        onClose: function onClose() {\n          return setNewTaskScreenVisible(false);\n        },\n        draftData: draftData\n      })\n    })]\n  });\n};\nexport default TaskDetailScreen;","map":{"version":3,"names":["React","useState","useEffect","useCallback","View","Text","TouchableOpacity","ScrollView","Modal","Platform","Alert","Image","SafeAreaView","useNavigation","styles","formatDate","formatTime","updateTaskStatus","DropdownItem","fetchTaskParticipants","fetchDraftData","BackIcon","EditIcon","None","NewTaskScreen","ImagePicker","jsx","_jsx","jsxs","_jsxs","TaskDetailScreen","_ref","route","navigation","_route$params","params","serviceName","initialTask","_objectWithoutProperties","_excluded","_useState","_useState2","_slicedToArray","task","setTask","_useState3","_useState4","isModalVisible","setModalVisible","_useState5","_useState6","selectedInventory","setSelectedInventory","_useState7","_useState8","inventoryItems","setInventoryItems","_useState9","_useState10","taskInventory","setTaskInventory","_useState11","_useState12","isNewTaskScreenVisible","setNewTaskScreenVisible","_useState13","_useState14","draftData","setDraftData","_useState15","_useState16","selectedImages","setSelectedImages","_useState17","_useState18","fullScreenImageModalVisible","setFullScreenImageModalVisible","_useState19","_useState20","currentImage","setCurrentImage","_useState21","_useState22","currentImageIndex","setCurrentImageIndex","openFullScreenImage","index","showNextImage","length","showPreviousImage","FullScreenImageModal","_ref2","_selectedImages$curre","isVisible","onClose","imageUri","uri","visible","transparent","animationType","onRequestClose","children","style","flex","backgroundColor","justifyContent","alignItems","source","width","height","resizeMode","position","top","right","onPress","color","fontSize","left","bottom","textAlign","marginLeft","marginRight","handleChoosePhoto","_ref3","_asyncToGenerator","permissionResult","requestMediaLibraryPermissionsAsync","granted","alert","pickerResult","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsMultipleSelection","quality","canceled","prevImages","concat","_toConsumableArray","assets","error","apply","arguments","uploadImages","_ref4","formData","FormData","forEach","image","append","name","type","OS","replace","taskId","id","response","fetch","method","body","headers","ok","Error","handleRemoveImage","currentImages","filter","_","i","handleAddTaskPress","_ref5","status","updatedTask","_objectSpread","navigate","screen","console","handleBackPress","goBack","fetchTaskInventory","_ref6","data","json","ImagePreview","_ref7","images","onRemovePress","horizontal","imagePreviewContainer","showsHorizontalScrollIndicator","map","imageContainer","imagePreview","removeIconContainer","removeIcon","photoPickerContainer","photoPickerPlusIcon","log","handleInventoryChange","newSelectedInventory","handleEditPress","getHeaderTitle","completeTask","_ref9","statusResponse","filteredInventory","item","quantity","inventoryResponse","JSON","stringify","inventory","inventory_id","inventoryResult","fetchInventoryItems","_ref10","updateTaskDetails","_ref11","participants","employees","Section","_ref12","title","section","sectionTitle","sectionContent","Row","_ref13","value","displayValue","Array","isArray","hasOwnProperty","employee","full_name","join","rowStyle","rowTitle","rowValue","container","contentContainerTask","taskHeader","titleMedium","contentContainerStyle","scrollViewContent","showsVerticalScrollIndicator","overScrollMode","headlineMedium","fullname_client","phone","address_client","payment","cost","responsible","start_date","start_time","end_date","end_time","bodyMedium","marginBottom","description","contentContainer","label","options","selectedValues","onValueChange","onAddPress","addButton","addButtonText"],"sources":["C:/Users/fred/Desktop/client/src/screens/TaskDetailScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, Modal, Platform, Alert, Image } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport styles from '../styles/styles';\r\nimport { formatDate, formatTime } from '../utils/dateFormatter';\r\nimport { updateTaskStatus } from '../utils/taskScreenHelpers';\r\nimport DropdownItem from '../components/DropdownItem';\r\nimport { fetchTaskParticipants, fetchDraftData } from '../utils/tasks';\r\nimport { BackIcon, EditIcon, None } from '../icons';\r\nimport NewTaskScreen from './NewTaskScreen';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nconst TaskDetailScreen = ({ route }) => {\r\n  const navigation = useNavigation();\r\n  const { params: { serviceName, ...initialTask } = {} } = route;\r\n  const [task, setTask] = useState(initialTask);\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const [selectedInventory, setSelectedInventory] = useState([]);\r\n  const [inventoryItems, setInventoryItems] = useState([]);\r\n  const [taskInventory, setTaskInventory] = useState([]);\r\n  const [isNewTaskScreenVisible, setNewTaskScreenVisible] = useState(false);\r\n  const [draftData, setDraftData] = useState(null);\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n  const [fullScreenImageModalVisible, setFullScreenImageModalVisible] = useState(false);\r\n  const [currentImage, setCurrentImage] = useState(null);\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n\r\n  const openFullScreenImage = (index) => {\r\n    setCurrentImageIndex(index);\r\n    setFullScreenImageModalVisible(true);\r\n  };\r\n\r\n  const showNextImage = () => {\r\n    if (currentImageIndex < selectedImages.length - 1) {\r\n      setCurrentImageIndex(currentImageIndex + 1);\r\n    }\r\n  };\r\n\r\n  const showPreviousImage = () => {\r\n    if (currentImageIndex > 0) {\r\n      setCurrentImageIndex(currentImageIndex - 1);\r\n    }\r\n  };\r\n\r\n  const FullScreenImageModal = ({ isVisible, onClose }) => {\r\n    const imageUri = selectedImages[currentImageIndex]?.uri;\r\n\r\n    return (\r\n      <Modal\r\n        visible={isVisible}\r\n        transparent={false}\r\n        animationType=\"fade\"\r\n        onRequestClose={onClose}\r\n      >\r\n        <View style={{ flex: 1, backgroundColor: 'black', justifyContent: 'center', alignItems: 'center' }}>\r\n          {imageUri && (\r\n            <Image\r\n              source={{ uri: imageUri }}\r\n              style={{ width: '100%', height: '100%', resizeMode: 'contain' }}\r\n            />\r\n          )}\r\n          <TouchableOpacity style={{ position: 'absolute', top: 40, right: 20 }} onPress={onClose}>\r\n            <Text style={{ color: 'white', fontSize: 30 }}>×</Text>\r\n          </TouchableOpacity>\r\n\r\n          {currentImageIndex > 0 && (\r\n            <TouchableOpacity\r\n              style={{ position: 'absolute', left: 0, top: 0, bottom: 0, right: '50%', justifyContent: 'center' }}\r\n              onPress={showPreviousImage}\r\n            >\r\n              <Text style={{ color: 'white', fontSize: 42, textAlign: 'left', marginLeft: 20 }}>‹</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n\r\n          {currentImageIndex < selectedImages.length - 1 && (\r\n            <TouchableOpacity\r\n              style={{ position: 'absolute', right: 0, top: 0, bottom: 0, left: '50%', justifyContent: 'center' }}\r\n              onPress={showNextImage}\r\n            >\r\n              <Text style={{ color: 'white', fontSize: 42, textAlign: 'right', marginRight: 20 }}>›</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const handleChoosePhoto = async () => {\r\n    const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n    if (!permissionResult.granted) {\r\n      Alert.alert('Уведомление', 'Необходим доступ к фотографиям для загрузки в отчет');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const pickerResult = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n        allowsMultipleSelection: true,\r\n        quality: 1,\r\n      });\r\n\r\n      if (!pickerResult.canceled) {\r\n        setSelectedImages(prevImages => [...prevImages, ...(pickerResult.assets || [])]);\r\n      }\r\n    } catch (error) {\r\n      Alert.alert('Ошибка', 'Произошла ошибка при выборе фотографий');\r\n    }\r\n  };\r\n\r\n  const uploadImages = async () => {\r\n    if (selectedImages.length === 0) {\r\n      Alert.alert('Уведомление', 'Пожалуйста, выберите фотографии для загрузки');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    selectedImages.forEach((image, index) => {\r\n      formData.append('photos', {\r\n        name: `photo_${index}.jpg`,\r\n        type: 'image/jpeg', // Используем стандартный MIME-тип для JPEG\r\n        uri: Platform.OS === 'android' ? image.uri : image.uri.replace('file://', ''),\r\n      });\r\n    });\r\n\r\n    try {\r\n      // Предполагаем, что taskId доступен в текущем состоянии\r\n      const taskId = task.id; // или получить его из другого источника в зависимости от структуры приложения\r\n\r\n      const response = await fetch(`http://31.129.101.174/tasks/${taskId}/photos`, {\r\n        method: 'POST',\r\n        body: formData,\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Сетевая ошибка при загрузке изображений');\r\n\r\n      setSelectedImages([]);\r\n    } catch (error) {\r\n      Alert.alert('Ошибка', 'Произошла ошибка при загрузке фотографий');\r\n    }\r\n  };\r\n\r\n  const handleRemoveImage = (index) => {\r\n    setSelectedImages(currentImages => currentImages.filter((_, i) => i !== index));\r\n  };\r\n\r\n  const handleAddTaskPress = async () => {\r\n    if (task.status === 'в процессе') {\r\n      setModalVisible(true);\r\n    } else {\r\n      try {\r\n        const updatedTask = { ...task, status: 'в процессе' };\r\n        await updateTaskStatus(task.id, updatedTask); // Отправляем полный объект задачи\r\n        setTask(updatedTask); // Обновляем состояние задачи\r\n        navigation.navigate('Tabs', { screen: 'TasksScreen' });\r\n      } catch (error) {\r\n        console.error('Ошибка при обновлении статуса задачи:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleBackPress = () => {\r\n    navigation.goBack(); // Это вызовет возврат к предыдущему экрану в стеке навигации\r\n  };\r\n\r\n  useEffect(() => {\r\n  }, [task.id]);\r\n\r\n  useEffect(() => {\r\n    const fetchTaskInventory = async () => {\r\n      if (task.status === 'выполнено') {\r\n        try {\r\n          // Предполагается, что у тебя есть эндпойнт для получения инвентаря конкретной задачи\r\n          const response = await fetch(`http://31.129.101.174/tasks/${task.id}/inventory`);\r\n          const data = await response.json();\r\n          setTaskInventory(data);\r\n        } catch (error) {\r\n          console.error('Ошибка при получении расходников для задачи:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchTaskInventory();\r\n  }, [task.status, task.id]);\r\n\r\n  const ImagePreview = ({ images, onRemovePress }) => (\r\n    <ScrollView horizontal style={styles.imagePreviewContainer} showsHorizontalScrollIndicator={false}>\r\n      {images.map((image, index) => (\r\n        <View key={index} style={styles.imageContainer}>\r\n          <TouchableOpacity onPress={() => openFullScreenImage(index)} style={styles.imagePreview}>\r\n            <Image source={{ uri: image.uri }} style={styles.image} />\r\n            <TouchableOpacity style={styles.removeIconContainer} onPress={() => onRemovePress(index)}>\r\n              <Text style={styles.removeIcon}>×</Text>\r\n            </TouchableOpacity>\r\n          </TouchableOpacity>\r\n        </View>\r\n      ))}\r\n      <TouchableOpacity onPress={handleChoosePhoto} style={styles.image}>\r\n        <View style={styles.photoPickerContainer}>\r\n          <Text style={styles.photoPickerPlusIcon}>+</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      console.log(task.params);\r\n      const data = await fetchDraftData(task.params.id);\r\n      setDraftData(data);\r\n    })();\r\n  }, [task.id, task.status]);\r\n\r\n  const handleInventoryChange = (newSelectedInventory) => {\r\n    setSelectedInventory(newSelectedInventory);\r\n  };\r\n\r\n  const handleEditPress = () => {\r\n    if (draftData) {\r\n      setNewTaskScreenVisible(true);\r\n    } else {\r\n      navigation.navigate('TaskDetail', {\r\n        screen: 'TaskDetailScreen',\r\n        params: { ...task, serviceName },\r\n      });\r\n    }\r\n  };\r\n\r\n  const getHeaderTitle = () => {\r\n    switch (task.status) {\r\n      case 'новая':\r\n        return 'Новая задача';\r\n      case 'в процессе':\r\n        return 'Задача в процессе';\r\n      case 'выполнено':\r\n        return 'Завершенная задача';\r\n      default:\r\n        return 'Детали задачи'; // Для случая, если статус неизвестен\r\n    }\r\n  };\r\n\r\n  const completeTask = async () => {\r\n    // Проверяем, что выбран хотя бы один инвентарь\r\n    if (selectedInventory.length === 0) {\r\n      alert('Выберите инвентарь перед завершением задачи.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Обновляем статус задачи\r\n      const updatedTask = { ...task, status: 'выполнено' };\r\n      const statusResponse = await updateTaskStatus(task.id, updatedTask);\r\n\r\n      // Фильтруем выбранный инвентарь, исключая элементы с количеством ноль\r\n      const filteredInventory = selectedInventory.filter(item => item.quantity > 0);\r\n\r\n      // Отправляем данные о выбранном инвентаре на сервер\r\n      const inventoryResponse = await fetch(`http://31.129.101.174/tasks/${task.id}/complete`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          inventory: filteredInventory.map(item => ({\r\n            inventory_id: item.id,\r\n            quantity: item.quantity\r\n          })),\r\n        }),\r\n      });\r\n\r\n      if (!inventoryResponse.ok) {\r\n        throw new Error('Ошибка при обновлении инвентаря');\r\n      }\r\n\r\n      // Получаем ответ от сервера\r\n      const inventoryResult = await inventoryResponse.json();\r\n      await uploadImages();\r\n\r\n      // Закрыть модальное окно и перейти к списку задач\r\n      setModalVisible(false);\r\n      navigation.navigate('Tabs', { screen: 'TasksScreen' });\r\n    } catch (error) {\r\n      console.error('Ошибка при завершении задачи:', error);\r\n    }\r\n  };\r\n\r\n  const fetchInventoryItems = async () => {\r\n    try {\r\n      const response = await fetch('http://31.129.101.174/inventory');\r\n      const data = await response.json();\r\n      setInventoryItems(data);\r\n    } catch (error) {\r\n      console.error('Ошибка при получении инвентаря:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchInventoryItems();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Функция для обновления информации о задаче, включая участников\r\n    const updateTaskDetails = async () => {\r\n      const participants = await fetchTaskParticipants(task.id);\r\n      setTask({ ...task, employees: participants });\r\n    };\r\n\r\n    updateTaskDetails();\r\n  }, [task.id]);\r\n\r\n  const Section = ({ title, children }) => (\r\n    <View style={styles.section}>\r\n      <Text style={styles.sectionTitle}>{title}</Text>\r\n      <View style={styles.sectionContent}>\r\n        {children}\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  const Row = ({ title, value }) => {\r\n    let displayValue = value;\r\n\r\n    // Проверяем, является ли value массивом и содержит ли он объекты с полем full_name\r\n    if (Array.isArray(value) && value.length > 0 && value[0].hasOwnProperty('full_name')) {\r\n      displayValue = value.map(employee => employee.full_name).join(', ');\r\n    }\r\n\r\n    return (\r\n      <View style={styles.rowStyle}>\r\n        <Text style={styles.rowTitle}>{title}</Text>\r\n        <Text style={styles.rowValue}>{displayValue}</Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.contentContainerTask}>\r\n        <FullScreenImageModal\r\n          isVisible={fullScreenImageModalVisible}\r\n          imageUri={currentImage}\r\n          onClose={() => setFullScreenImageModalVisible(false)}\r\n        />\r\n        <View style={styles.taskHeader}>\r\n          <TouchableOpacity onPress={handleBackPress}>\r\n            <BackIcon />\r\n          </TouchableOpacity>\r\n          <Text style={[styles.titleMedium, { flex: 1, textAlign: 'center' }]}>\r\n            {getHeaderTitle()}\r\n          </Text>\r\n          <TouchableOpacity onPress={handleEditPress}>\r\n            <EditIcon />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <ScrollView contentContainerStyle={styles.scrollViewContent} showsVerticalScrollIndicator={false} overScrollMode=\"never\">\r\n          <Text style={styles.headlineMedium}>{serviceName}</Text>\r\n\r\n          <Section title=\"Клиент\">\r\n            <Row title=\"ФИО:\" value={task.fullname_client} />\r\n            <Row title=\"Телефон:\" value={task.phone} />\r\n            <Row title=\"Адрес:\" value={task.address_client} />\r\n          </Section>\r\n\r\n          <Section title=\"Оплата\">\r\n            <Row title=\"Способ оплаты:\" value={task.payment || 'Не указан'} />\r\n            <Row title=\"Стоимость:\" value={task.cost ? `${task.cost} руб.` : 'Не указана'} />\r\n          </Section>\r\n\r\n          <Section title=\"Работа\">\r\n            <Row title=\"Ответственный:\" value={task.responsible || 'Не назначен'} />\r\n            <Row title=\"Участники:\" value={task.employees || 'Нет информации'} />\r\n            <Row title=\"Дата и время начала:\" value={task.start_date ? `${formatDate(task.start_date)} ${formatTime(task.start_time)}` : 'Не указаны'} />\r\n            <Row title=\"Дата и время окончания:\" value={task.end_date ? `${formatDate(task.end_date)} ${formatTime(task.end_time)}` : 'Не указаны'} />\r\n          </Section>\r\n\r\n          {task.status === 'выполнено' && (\r\n            <Section title=\"Расходники\">\r\n              {taskInventory.length > 0 ? (\r\n                taskInventory.map((item, index) => (\r\n                  <Row key={index} title={item.name} value={`Количество: ${item.quantity}`} />\r\n                ))\r\n              ) : (\r\n                <Text style={styles.bodyMedium}>Расходники не использовались.</Text>\r\n              )}\r\n            </Section>\r\n          )}\r\n\r\n          <Section title=\"Описание\">\r\n            <Text style={[styles.bodyMedium, { marginBottom: 300 }]}>{task.description || 'Описание отсутствует.'}</Text>\r\n          </Section>\r\n        </ScrollView>\r\n\r\n        <Modal\r\n          visible={isModalVisible}\r\n          animationType=\"slide\"\r\n          onRequestClose={() => setModalVisible(false)}\r\n        >\r\n          <SafeAreaView style={styles.container}>\r\n            <View style={styles.contentContainerTask}>\r\n              <View style={styles.taskHeader}>\r\n                <TouchableOpacity onPress={() => setModalVisible(false)}>\r\n                  <BackIcon />\r\n                </TouchableOpacity>\r\n                <Text style={[styles.titleMedium, { flex: 1, textAlign: 'center' }]}> Отчёт </Text>\r\n                <TouchableOpacity>\r\n                  <None />\r\n                </TouchableOpacity>\r\n              </View>\r\n              <View style={styles.contentContainer}>\r\n                <DropdownItem\r\n                  label=\"Расходники\"\r\n                  options={inventoryItems}\r\n                  selectedValues={selectedInventory}\r\n                  onValueChange={handleInventoryChange}\r\n                />\r\n                <ImagePreview\r\n                  images={selectedImages}\r\n                  onAddPress={handleChoosePhoto}\r\n                  onRemovePress={handleRemoveImage}\r\n                />\r\n                <TouchableOpacity onPress={uploadImages}>\r\n                  <Text>Загрузить фотографии</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.addButton} onPress={completeTask}>\r\n                  <Text style={styles.addButtonText}>Завершить работу</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </SafeAreaView>\r\n        </Modal>\r\n\r\n        {task.status !== 'выполнено' && (\r\n          <TouchableOpacity style={styles.addButton} onPress={handleAddTaskPress}>\r\n            <Text style={styles.addButtonText}>\r\n              {task.status === 'в процессе' ? 'Добавить расходники' : 'Начать выполнение'}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        )}\r\n      </View>\r\n      <Modal\r\n        visible={isNewTaskScreenVisible}\r\n        animationType=\"slide\"\r\n        onRequestClose={() => setNewTaskScreenVisible(false)}\r\n      >\r\n        <NewTaskScreen onClose={() => setNewTaskScreenVisible(false)} draftData={draftData} />\r\n      </Modal>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default TaskDetailScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}