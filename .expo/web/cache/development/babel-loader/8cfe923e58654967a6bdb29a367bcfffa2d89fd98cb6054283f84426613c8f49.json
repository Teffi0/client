{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _DateInput = _interopRequireDefault(require(\"../components/DateInput\"));\nvar _axios = _interopRequireDefault(require(\"axios\"));\nvar _TaskComponent = _interopRequireDefault(require(\"../components/TaskComponent\"));\nvar _styles = _interopRequireDefault(require(\"../styles/styles\"));\nvar _icons = require(\"../icons\");\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\nvar _dateFns = require(\"date-fns\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\fred\\\\Desktop\\\\client\\\\src\\\\screens\\\\FeedScreen.js\";\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar screenHeight = _reactNative.Dimensions.get('window').height;\nvar FeedScreen = function FeedScreen() {\n  var _useState = (0, _react.useState)([]),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = (0, _react.useState)([]),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    filteredTasks = _useState4[0],\n    setFilteredTasks = _useState4[1];\n  var _useState5 = (0, _react.useState)([]),\n    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n    filters = _useState6[0],\n    setFilters = _useState6[1];\n  var _useState7 = (0, _react.useState)(false),\n    _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n    isFilterModalVisible = _useState8[0],\n    setFilterModalVisible = _useState8[1];\n  var _useState9 = (0, _react.useState)([]),\n    _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n    responsibles = _useState10[0],\n    setResponsibles = _useState10[1];\n  var _useState11 = (0, _react.useState)([]),\n    _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n    employees = _useState12[0],\n    setEmployees = _useState12[1];\n  var _useState13 = (0, _react.useState)([]),\n    _useState14 = (0, _slicedToArray2.default)(_useState13, 2),\n    paymentmethods = _useState14[0],\n    setPaymentMethods = _useState14[1];\n  var _useState15 = (0, _react.useState)([]),\n    _useState16 = (0, _slicedToArray2.default)(_useState15, 2),\n    clients = _useState16[0],\n    setClients = _useState16[1];\n  var _useState17 = (0, _react.useState)([]),\n    _useState18 = (0, _slicedToArray2.default)(_useState17, 2),\n    selectedParticipants = _useState18[0],\n    setSelectedParticipants = _useState18[1];\n  var _useState19 = (0, _react.useState)(''),\n    _useState20 = (0, _slicedToArray2.default)(_useState19, 2),\n    selectedClients = _useState20[0],\n    setSelectedClients = _useState20[1];\n  var _useState21 = (0, _react.useState)(''),\n    _useState22 = (0, _slicedToArray2.default)(_useState21, 2),\n    selectedResponsibles = _useState22[0],\n    setSelectedResponsibles = _useState22[1];\n  var _useState23 = (0, _react.useState)(''),\n    _useState24 = (0, _slicedToArray2.default)(_useState23, 2),\n    selectedPaymentMethod = _useState24[0],\n    setSelectedPaymentMethod = _useState24[1];\n  var _useState25 = (0, _react.useState)(''),\n    _useState26 = (0, _slicedToArray2.default)(_useState25, 2),\n    selectedStatus = _useState26[0],\n    setSelectedStatus = _useState26[1];\n  var updateFilters = function updateFilters(newFilters) {\n    if (typeof newFilters === 'object' && newFilters !== null) {\n      setFilters(Array.isArray(newFilters.filters) ? newFilters.filters : []);\n      setSelectedParticipants(newFilters.selectedParticipants || []);\n      filterTasks(newFilters);\n    } else {\n      console.error('newFilters должен быть объектом');\n    }\n  };\n  (0, _react.useEffect)(function () {\n    var fetchTasks = function () {\n      var _ref = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          var tasksResponse = yield _axios.default.get('http://31.129.101.174/tasks');\n          var responsiblesResponse = yield _axios.default.get('http://31.129.101.174/responsibles');\n          var clientsResponse = yield _axios.default.get('http://31.129.101.174/clients');\n          var employeesResponse = yield _axios.default.get('http://31.129.101.174/employees');\n          var paymentsResponse = yield _axios.default.get('http://31.129.101.174/paymentmethods');\n          var validTasks = tasksResponse.data.filter(function (task) {\n            return task.status !== 'черновик';\n          });\n          setTasks(validTasks);\n          setFilteredTasks(validTasks);\n          setResponsibles(responsiblesResponse.data);\n          setClients(clientsResponse.data);\n          setEmployees(employeesResponse.data);\n          setPaymentMethods(paymentsResponse.data);\n        } catch (error) {\n          console.error('Ошибка при загрузке задач:', error);\n        }\n      });\n      return function fetchTasks() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchTasks();\n  }, []);\n  var applyFilter = function applyFilter(filterType, filterValue) {\n    if (filterType === 'status') {\n      setSelectedStatus(filterValue);\n    } else if (filterType === 'client') {\n      setSelectedClients(filterValue);\n    } else if (filterType === 'responsible') {\n      setSelectedResponsibles(filterValue);\n    } else if (filterType === 'participant') {\n      var newSelectedParticipants;\n      if (!selectedParticipants.includes(filterValue)) {\n        newSelectedParticipants = [].concat((0, _toConsumableArray2.default)(selectedParticipants), [filterValue]);\n      } else {\n        newSelectedParticipants = selectedParticipants.filter(function (id) {\n          return id !== filterValue;\n        });\n      }\n      setSelectedParticipants(newSelectedParticipants);\n    } else if (filterType === 'paymentMethod') {\n      setSelectedPaymentMethod(filterValue);\n    }\n    var updatedFilters = Array.isArray(filters) ? (0, _toConsumableArray2.default)(filters) : [];\n    updatedFilters = updatedFilters.filter(function (filter) {\n      return filter.type !== filterType;\n    });\n    updatedFilters.push({\n      type: filterType,\n      value: filterValue,\n      label: filterValue\n    });\n    setFilters(updatedFilters);\n    filterTasks(updatedFilters);\n  };\n  var filterTasks = function () {\n    var _ref2 = (0, _asyncToGenerator2.default)(function* (updatedFilters) {\n      var filtered = (0, _toConsumableArray2.default)(tasks);\n      var _loop = function* _loop(filter) {\n        switch (filter.type) {\n          case 'status':\n            filtered = filtered.filter(function (task) {\n              return task.status === filter.value;\n            });\n            break;\n          case 'responsible':\n            filtered = filtered.filter(function (task) {\n              return task.responsible === filter.value;\n            });\n            break;\n          case 'client':\n            filtered = filtered.filter(function (task) {\n              return task.fullname_client === filter.value;\n            });\n            break;\n          case 'participant':\n            if (Array.isArray(filter.value)) {\n              filtered = yield filterByParticipants(filtered, filter.value);\n            }\n            break;\n          case 'paymentMethod':\n            filtered = filtered.filter(function (task) {\n              return task.payment === filter.value;\n            });\n            break;\n        }\n      };\n      for (var filter of updatedFilters) {\n        yield* _loop(filter);\n      }\n      setFilteredTasks(filtered);\n    });\n    return function filterTasks(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var filterByParticipants = function () {\n    var _ref3 = (0, _asyncToGenerator2.default)(function* (tasks, selectedEmployeeIds) {\n      if (selectedEmployeeIds.length > 0) {\n        try {\n          var participantTasksPromises = selectedEmployeeIds.map(function (employeeId) {\n            return _axios.default.get(`http://31.129.101.174/task_employees?employee_id=${employeeId}`);\n          });\n          var responses = yield Promise.all(participantTasksPromises);\n          var participantRelatedTaskIds = responses.flatMap(function (response) {\n            return Array.isArray(response.data) ? response.data.map(function (taskEmployee) {\n              return taskEmployee.task_id;\n            }) : [];\n          });\n          var uniqueTaskIds = (0, _toConsumableArray2.default)(new Set(participantRelatedTaskIds));\n          return tasks.filter(function (task) {\n            return uniqueTaskIds.includes(task.id);\n          });\n        } catch (error) {\n          console.error('Ошибка при фильтрации задач по участникам:', error);\n          return tasks;\n        }\n      }\n      return tasks;\n    });\n    return function filterByParticipants(_x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var removeFilter = function removeFilter(filterType, filterIndex) {\n    if (!Array.isArray(filters)) {\n      console.error('filters должен быть массивом');\n      return;\n    }\n    var newFilters = filters.filter(function (filter, index) {\n      return index !== filterIndex;\n    });\n    setFilters(newFilters);\n    if (filterType === 'client') {\n      setSelectedClients('');\n    } else if (filterType === 'responsible') {\n      setSelectedResponsibles('');\n    } else if (filterType === 'participant') {\n      setSelectedParticipants(selectedParticipants.filter(function (id) {\n        return id !== newFilters[filterIndex].value;\n      }));\n    } else if (filterType === 'paymentMethod') {\n      setSelectedPaymentMethod('');\n    } else if (filterType === 'status') {\n      setSelectedStatus('');\n    }\n    filterTasks(newFilters);\n  };\n  var resetFilters = function resetFilters() {\n    setFilters([]);\n    setFilteredTasks(tasks);\n  };\n  var groupTasksByDate = function groupTasksByDate(tasks) {\n    return tasks.reduce(function (acc, task) {\n      var date = task.start_date.split('T')[0];\n      if (!acc[date]) {\n        acc[date] = [];\n      }\n      acc[date].push(task);\n      return acc;\n    }, {});\n  };\n  var groupedTasks = groupTasksByDate(filteredTasks);\n  return (0, _jsxRuntime.jsxs)(_reactNativeSafeAreaContext.SafeAreaView, {\n    style: _styles.default.container,\n    children: [(0, _jsxRuntime.jsx)(FilterModal, {\n      visible: isFilterModalVisible,\n      onClose: function onClose() {\n        return setFilterModalVisible(false);\n      },\n      currentFilters: filters,\n      setFilters: setFilters,\n      applyFilter: applyFilter,\n      onResetFilters: resetFilters,\n      onUpdateFilters: updateFilters,\n      responsibles: responsibles,\n      clients: clients,\n      employees: employees,\n      payments: paymentmethods,\n      selectedStatus: selectedStatus,\n      setSelectedStatus: setSelectedStatus,\n      selectedClients: selectedClients,\n      selectedResponsibles: selectedResponsibles,\n      setSelectedClients: setSelectedClients,\n      setSelectedResponsibles: setSelectedResponsibles,\n      selectedParticipants: selectedParticipants,\n      setSelectedParticipants: setSelectedParticipants,\n      selectedPaymentMethod: selectedPaymentMethod,\n      setSelectedPaymentMethod: setSelectedPaymentMethod,\n      removeFilter: removeFilter,\n      filterTasks: filterTasks\n    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n      style: _styles.default.contentContainer,\n      children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n        style: _styles.default.taskHeader,\n        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: _styles.default.titleMedium,\n          children: \"\\u041B\\u0435\\u043D\\u0442\\u0430\"\n        }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n          onPress: function onPress() {\n            return setFilterModalVisible(true);\n          },\n          children: (0, _jsxRuntime.jsx)(_icons.FilterIcon, {})\n        })]\n      }), (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        overScrollMode: \"never\",\n        style: filters.length > 0 ? {\n          maxHeight: 40,\n          marginBottom: 12\n        } : {\n          maxHeight: 0\n        },\n        children: filters.map(function (filter, index) {\n          return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n            style: _styles.default.filterChip,\n            children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n              style: _styles.default.filterChipText,\n              children: filter.type === 'participant' && selectedParticipants.length > 0 ? `Участники (${selectedParticipants.length})` : filter.label\n            }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n              onPress: function onPress() {\n                return removeFilter(filter.type, index);\n              },\n              children: (0, _jsxRuntime.jsx)(_icons.CancelIcon, {})\n            })]\n          }, index);\n        })\n      }), (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {\n        showsVerticalScrollIndicator: false,\n        overScrollMode: \"never\",\n        style: {\n          flex: 1\n        },\n        children: Object.entries(groupedTasks).sort(function (_ref4, _ref5) {\n          var _ref6 = (0, _slicedToArray2.default)(_ref4, 1),\n            a = _ref6[0];\n          var _ref7 = (0, _slicedToArray2.default)(_ref5, 1),\n            b = _ref7[0];\n          return new Date(b) - new Date(a);\n        }).map(function (_ref8) {\n          var _ref9 = (0, _slicedToArray2.default)(_ref8, 2),\n            date = _ref9[0],\n            tasksForDate = _ref9[1];\n          return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n            style: _styles.default.section,\n            children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n              style: _styles.default.sectionTitle,\n              children: new Date(date).toLocaleDateString('ru-RU', {\n                day: 'numeric',\n                month: 'long'\n              })\n            }), tasksForDate.map(function (task) {\n              return (0, _jsxRuntime.jsx)(_TaskComponent.default, Object.assign({}, task), task.id);\n            })]\n          }, date);\n        })\n      })]\n    })]\n  });\n};\nvar FilterModal = function FilterModal(_ref10) {\n  var visible = _ref10.visible,\n    onClose = _ref10.onClose,\n    currentFilters = _ref10.currentFilters,\n    filterTasks = _ref10.filterTasks,\n    setFilters = _ref10.setFilters,\n    applyFilter = _ref10.applyFilter,\n    removeFilter = _ref10.removeFilter,\n    onResetFilters = _ref10.onResetFilters,\n    responsibles = _ref10.responsibles,\n    clients = _ref10.clients,\n    employees = _ref10.employees,\n    onUpdateFilters = _ref10.onUpdateFilters,\n    payments = _ref10.payments,\n    selectedStatus = _ref10.selectedStatus,\n    setSelectedStatus = _ref10.setSelectedStatus,\n    selectedClients = _ref10.selectedClients,\n    selectedResponsibles = _ref10.selectedResponsibles,\n    setSelectedClients = _ref10.setSelectedClients,\n    setSelectedResponsibles = _ref10.setSelectedResponsibles,\n    selectedParticipants = _ref10.selectedParticipants,\n    setSelectedParticipants = _ref10.setSelectedParticipants,\n    selectedPaymentMethod = _ref10.selectedPaymentMethod,\n    setSelectedPaymentMethod = _ref10.setSelectedPaymentMethod;\n  var _useState27 = (0, _react.useState)(''),\n    _useState28 = (0, _slicedToArray2.default)(_useState27, 2),\n    statusFilter = _useState28[0],\n    setStatusFilter = _useState28[1];\n  var _useState29 = (0, _react.useState)(''),\n    _useState30 = (0, _slicedToArray2.default)(_useState29, 2),\n    dateFilter = _useState30[0],\n    setDateFilter = _useState30[1];\n  var _useState31 = (0, _react.useState)(''),\n    _useState32 = (0, _slicedToArray2.default)(_useState31, 2),\n    selectedStartDate = _useState32[0],\n    setSelectedStartDate = _useState32[1];\n  var _useState33 = (0, _react.useState)(''),\n    _useState34 = (0, _slicedToArray2.default)(_useState33, 2),\n    selectedEndDate = _useState34[0],\n    setSelectedEndDate = _useState34[1];\n  var _useState35 = (0, _react.useState)(''),\n    _useState36 = (0, _slicedToArray2.default)(_useState35, 2),\n    clientFilter = _useState36[0],\n    setClientFilter = _useState36[1];\n  var _useState37 = (0, _react.useState)(''),\n    _useState38 = (0, _slicedToArray2.default)(_useState37, 2),\n    responsibleFilter = _useState38[0],\n    setResponsibleFilter = _useState38[1];\n  var _useState39 = (0, _react.useState)(''),\n    _useState40 = (0, _slicedToArray2.default)(_useState39, 2),\n    participantFilter = _useState40[0],\n    setParticipantFilter = _useState40[1];\n  var _useState41 = (0, _react.useState)(''),\n    _useState42 = (0, _slicedToArray2.default)(_useState41, 2),\n    paymentMethodFilter = _useState42[0],\n    setPaymentMethodFilter = _useState42[1];\n  var _useState43 = (0, _react.useState)('main'),\n    _useState44 = (0, _slicedToArray2.default)(_useState43, 2),\n    currentPage = _useState44[0],\n    setCurrentPage = _useState44[1];\n  var _useState45 = (0, _react.useState)(false),\n    _useState46 = (0, _slicedToArray2.default)(_useState45, 2),\n    isClosing = _useState46[0],\n    setIsClosing = _useState46[1];\n  var _useState47 = (0, _react.useState)(false),\n    _useState48 = (0, _slicedToArray2.default)(_useState47, 2),\n    modalVisible = _useState48[0],\n    setModalVisible = _useState48[1];\n  var _useState49 = (0, _react.useState)(false),\n    _useState50 = (0, _slicedToArray2.default)(_useState49, 2),\n    isFullSize = _useState50[0],\n    setIsFullSize = _useState50[1];\n  (0, _react.useEffect)(function () {\n    if (!currentFilters.some(function (filter) {\n      return filter.type === 'status';\n    })) {\n      setStatusFilter('');\n    }\n    var dateRangeFilter = currentFilters.find(function (f) {\n      return f.type === 'dateRange';\n    });\n    if (dateRangeFilter) {\n      setSelectedStartDate(dateRangeFilter.value.start);\n      setSelectedEndDate(dateRangeFilter.value.end);\n    } else {\n      setSelectedStartDate('');\n      setSelectedEndDate('');\n    }\n    if (!currentFilters.some(function (filter) {\n      return filter.type === 'client';\n    })) {\n      setClientFilter('');\n    }\n  }, [currentFilters]);\n  var ModalFullHeight = screenHeight * 0.25;\n  var ModalHeight = screenHeight * 0.35;\n  var modalHeight = (0, _react.useRef)(new _reactNative.Animated.Value(ModalFullHeight));\n  (0, _react.useEffect)(function () {\n    if (isFullSize) {\n      _reactNative.Animated.timing(modalHeight.current, {\n        toValue: ModalFullHeight,\n        duration: 300,\n        useNativeDriver: false\n      }).start();\n    } else {\n      _reactNative.Animated.timing(modalHeight.current, {\n        toValue: ModalFullHeight,\n        duration: 300,\n        useNativeDriver: false\n      }).start();\n    }\n  }, [isFullSize]);\n  var panResponder = (0, _react.useRef)(_reactNative.PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant() {\n      modalHeight.current.setOffset(modalHeight.current._value);\n      modalHeight.current.setValue(0);\n    },\n    onPanResponderMove: _reactNative.Animated.event([null, {\n      dy: modalHeight.current\n    }], {\n      useNativeDriver: false,\n      listener: function listener(event, gestureState) {\n        var currentHeight = modalHeight.current.__getValue();\n        if (currentHeight < ModalFullHeight) {\n          modalHeight.current.setValue(0);\n        }\n      }\n    }),\n    onPanResponderRelease: function onPanResponderRelease(event, gestureState) {\n      modalHeight.current.flattenOffset();\n      var currentHeight = modalHeight.current._value + gestureState.dy;\n      var upwardThreshold = ModalHeight + (screenHeight - ModalHeight) / 2;\n      if (gestureState.dy < 40) {\n        if (currentHeight < upwardThreshold) {\n          openFullModal();\n        } else {\n          closeModal();\n        }\n      } else {\n        if (currentHeight < ModalFullHeight) {\n          closeModal();\n        } else {\n          closeModal();\n        }\n      }\n    }\n  })).current;\n  var openFullModal = (0, _react.useCallback)(function () {\n    _reactNative.Animated.spring(modalHeight.current, {\n      toValue: ModalFullHeight,\n      useNativeDriver: false,\n      bounciness: 0\n    }).start(function () {\n      return setIsFullSize(true);\n    });\n  }, [ModalFullHeight]);\n  var closeModal = (0, _react.useCallback)(function () {\n    setIsClosing(true);\n    _reactNative.Animated.spring(modalHeight.current, {\n      toValue: screenHeight,\n      useNativeDriver: false,\n      bounciness: 0\n    }).start(function () {\n      setIsFullSize(false);\n      modalHeight.current.setValue(ModalFullHeight);\n      setIsClosing(false);\n      onClose();\n    });\n  }, [screenHeight, ModalFullHeight, onClose]);\n  var handleSelectStatus = function handleSelectStatus(status) {\n    if (selectedStatus === status) {\n      removeFilter('status');\n      setSelectedStatus('');\n    } else {\n      setSelectedStatus(status);\n      var newFilters = currentFilters.filter(function (f) {\n        return f.type !== 'status';\n      });\n      newFilters.push({\n        type: 'status',\n        value: status,\n        label: `Статус: ${status}`\n      });\n      setFilters(newFilters);\n      applyFilter('status', status);\n    }\n  };\n  var handleClientChange = function handleClientChange(client) {\n    if (selectedClients === client) {\n      removeFilter('client');\n      setSelectedClients('');\n    } else {\n      setSelectedClients(client);\n      var newFilters = currentFilters.filter(function (f) {\n        return f.type !== 'client';\n      });\n      newFilters.push({\n        type: 'client',\n        value: client,\n        label: `Клиент: ${client}`\n      });\n      setFilters(newFilters);\n      applyFilter('client', client);\n    }\n  };\n  var handleResponsibleChange = function handleResponsibleChange(responsible) {\n    if (selectedResponsibles === responsible) {\n      removeFilter('responsible');\n      setSelectedResponsibles('');\n    } else {\n      setSelectedResponsibles(responsible);\n      var newFilters = currentFilters.filter(function (f) {\n        return f.type !== 'responsible';\n      });\n      newFilters.push({\n        type: 'responsible',\n        value: responsible,\n        label: `Ответственный: ${responsible}`\n      });\n      setFilters(newFilters);\n      applyFilter('responsible', responsible);\n    }\n  };\n  var handlePaymentMethodChange = function handlePaymentMethodChange(method) {\n    if (selectedPaymentMethod === method) {\n      removeFilter('paymentMethod');\n      setSelectedPaymentMethod('');\n    } else {\n      setSelectedPaymentMethod(method);\n      var newFilters = currentFilters.filter(function (f) {\n        return f.type !== 'paymentMethod';\n      });\n      newFilters.push({\n        type: 'paymentMethod',\n        value: method,\n        label: `Способ оплаты: ${method}`\n      });\n      setFilters(newFilters);\n      applyFilter('paymentMethod', method);\n    }\n  };\n  var toggleParticipantSelection = function toggleParticipantSelection(employeeId) {\n    console.log(\"проверка:\", employeeId);\n    var newSelectedParticipants = selectedParticipants.includes(employeeId) ? selectedParticipants.filter(function (id) {\n      return id !== employeeId;\n    }) : [].concat((0, _toConsumableArray2.default)(selectedParticipants), [employeeId]);\n    setSelectedParticipants(newSelectedParticipants);\n    var updatedFilters = filters.filter(function (filter) {\n      return filter.type !== 'participant';\n    });\n    if (newSelectedParticipants.length > 0) {\n      updatedFilters.push({\n        type: 'participant',\n        value: newSelectedParticipants,\n        label: `Участники: ${newSelectedParticipants.length}`\n      });\n    }\n    setFilters(updatedFilters);\n    filterTasks(updatedFilters);\n  };\n  var onDateChange = function onDateChange(dateType, selectedDate) {\n    try {\n      if (dateType === 'startDate') {\n        setSelectedStartDate(selectedDate);\n      } else if (dateType === 'endDate') {\n        setSelectedEndDate(selectedDate);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при преобразовании даты:\", error);\n    }\n  };\n  var renderFilterOption = function renderFilterOption(title, filterValue, setPage) {\n    var isFilterSet = filterValue !== '';\n    return (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {\n      style: _styles.default.optionButton,\n      onPress: setPage,\n      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: [_styles.default.title, {\n          fontSize: 15\n        }],\n        children: title\n      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n        style: _styles.default.filterOptionRightSide,\n        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: {\n            fontSize: 12,\n            color: 'grey'\n          },\n          children: !isFilterSet ? 'Все' : ''\n        }), (0, _jsxRuntime.jsx)(_icons.FollowIcon, {})]\n      })]\n    });\n  };\n  var renderMainPage = function renderMainPage() {\n    return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n      children: [renderFilterOption('Статус', statusFilter, function () {\n        return setCurrentPage('status');\n      }), renderFilterOption('Дата', dateFilter, function () {\n        return setCurrentPage('dateRange');\n      }), renderFilterOption('Клиент', clientFilter, function () {\n        return setCurrentPage('client');\n      }), renderFilterOption('Ответственный', responsibleFilter, function () {\n        return setCurrentPage('responsible');\n      }), renderFilterOption('Участники', participantFilter, function () {\n        return setCurrentPage('participant');\n      }), renderFilterOption('Способ оплаты', paymentMethodFilter, function () {\n        return setCurrentPage('paymentMethod');\n      })]\n    });\n  };\n  var renderStatusPage = function renderStatusPage() {\n    var statuses = ['новая', 'в процессе', 'выполнено'];\n    return statuses.map(function (status) {\n      return (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {\n        style: _styles.default.optionButton,\n        onPress: function onPress() {\n          return handleSelectStatus(status);\n        },\n        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: _styles.default.title,\n          children: status\n        }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: _styles.default.radioButton,\n          children: selectedStatus === status && (0, _jsxRuntime.jsx)(_reactNative.View, {\n            style: _styles.default.radioButtonSelected\n          })\n        })]\n      }, status);\n    });\n  };\n  var renderDatePage = function renderDatePage() {\n    return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n      style: {\n        flex: 1\n      },\n      children: [(0, _jsxRuntime.jsx)(_DateInput.default, {\n        date: selectedStartDate,\n        placeholder: \"\\u041E\\u0442 (\\u0433\\u0433\\u0433\\u0433-\\u043C\\u043C-\\u0434\\u0434)\",\n        onDateChange: onDateChange,\n        dateType: \"startDate\"\n      }), (0, _jsxRuntime.jsx)(_DateInput.default, {\n        date: selectedEndDate,\n        placeholder: \"\\u0414\\u043E (\\u0433\\u0433\\u0433\\u0433-\\u043C\\u043C-\\u0434\\u0434)\",\n        onDateChange: onDateChange,\n        dateType: \"endDate\"\n      })]\n    });\n  };\n  var renderClientPage = function renderClientPage() {\n    return (0, _jsxRuntime.jsx)(_reactNative.View, {\n      children: clients.map(function (client, index) {\n        return (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {\n          style: _styles.default.optionButton,\n          onPress: function onPress() {\n            return handleClientChange(client.full_name);\n          },\n          children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n            style: _styles.default.title,\n            children: client.full_name\n          }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n            style: _styles.default.radioButton,\n            children: selectedClients === client.full_name && (0, _jsxRuntime.jsx)(_reactNative.View, {\n              style: _styles.default.radioButtonSelected\n            })\n          })]\n        }, index);\n      })\n    });\n  };\n  var renderResponsiblePage = function renderResponsiblePage() {\n    return (0, _jsxRuntime.jsx)(_reactNative.View, {\n      children: responsibles.map(function (responsible, index) {\n        return (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {\n          style: _styles.default.optionButton,\n          onPress: function onPress() {\n            return handleResponsibleChange(responsible);\n          },\n          children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n            style: _styles.default.title,\n            children: responsible\n          }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n            style: _styles.default.radioButton,\n            children: selectedResponsibles === responsible && (0, _jsxRuntime.jsx)(_reactNative.View, {\n              style: _styles.default.radioButtonSelected\n            })\n          })]\n        }, index);\n      })\n    });\n  };\n  var renderParticipantPage = function renderParticipantPage() {\n    return (0, _jsxRuntime.jsx)(_reactNative.View, {\n      children: employees.map(function (employee) {\n        return (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n          onPress: function onPress() {\n            return toggleParticipantSelection(employee.id);\n          },\n          children: (0, _jsxRuntime.jsxs)(_reactNative.View, {\n            style: _styles.default.checkboxContainer,\n            children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n              style: _styles.default.title,\n              children: employee.full_name\n            }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n              style: _styles.default.checkbox,\n              children: selectedParticipants.includes(employee.id) && (0, _jsxRuntime.jsx)(_reactNative.View, {\n                style: _styles.default.checkboxSelected\n              })\n            })]\n          })\n        }, employee.id);\n      })\n    });\n  };\n  var renderPaymentMethodPage = function renderPaymentMethodPage() {\n    return payments.map(function (method, index) {\n      return (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {\n        style: _styles.default.optionButton,\n        onPress: function onPress() {\n          return handlePaymentMethodChange(method);\n        },\n        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: _styles.default.title,\n          children: method\n        }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: _styles.default.radioButton,\n          children: selectedPaymentMethod === method && (0, _jsxRuntime.jsx)(_reactNative.View, {\n            style: _styles.default.radioButtonSelected\n          })\n        })]\n      }, index);\n    });\n  };\n  return (0, _jsxRuntime.jsx)(_reactNative.Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: visible,\n    onRequestClose: onClose,\n    children: (0, _jsxRuntime.jsx)(_reactNative.Animated.View, Object.assign({\n      style: [_styles.default.modalOverlay, {\n        top: modalHeight.current\n      }]\n    }, panResponder.panHandlers, {\n      children: (0, _jsxRuntime.jsx)(_reactNative.View, {\n        style: _styles.default.container,\n        children: (0, _jsxRuntime.jsxs)(_reactNative.View, {\n          style: _styles.default.contentContainer,\n          children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n            style: _styles.default.taskHeader,\n            children: [currentPage === 'main' ? (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n              children: (0, _jsxRuntime.jsx)(_icons.None, {})\n            }) : (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n              onPress: function onPress() {\n                return setCurrentPage('main');\n              },\n              children: (0, _jsxRuntime.jsx)(_icons.BackIcon, {})\n            }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n              style: [_styles.default.titleMedium, {\n                flex: 1,\n                textAlign: 'center'\n              }],\n              children: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\\u044B\"\n            }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n              children: (0, _jsxRuntime.jsx)(_icons.None, {})\n            })]\n          }), currentPage === 'main' ? renderMainPage() : currentPage === 'status' ? renderStatusPage() : currentPage === 'dateRange' ? renderDatePage() : currentPage === 'client' ? renderClientPage() : currentPage === 'responsible' ? renderResponsiblePage() : currentPage === 'participant' ? renderParticipantPage() : currentPage === 'paymentMethod' ? renderPaymentMethodPage() : null]\n        })\n      })\n    }))\n  });\n};\nvar _default = exports.default = FeedScreen;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_DateInput","_interopRequireDefault","_axios","_TaskComponent","_styles","_icons","_reactNativeSafeAreaContext","_dateFns","_jsxRuntime","_this","_jsxFileName","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","screenHeight","Dimensions","height","FeedScreen","_useState","useState","_useState2","_slicedToArray2","tasks","setTasks","_useState3","_useState4","filteredTasks","setFilteredTasks","_useState5","_useState6","filters","setFilters","_useState7","_useState8","isFilterModalVisible","setFilterModalVisible","_useState9","_useState10","responsibles","setResponsibles","_useState11","_useState12","employees","setEmployees","_useState13","_useState14","paymentmethods","setPaymentMethods","_useState15","_useState16","clients","setClients","_useState17","_useState18","selectedParticipants","setSelectedParticipants","_useState19","_useState20","selectedClients","setSelectedClients","_useState21","_useState22","selectedResponsibles","setSelectedResponsibles","_useState23","_useState24","selectedPaymentMethod","setSelectedPaymentMethod","_useState25","_useState26","selectedStatus","setSelectedStatus","updateFilters","newFilters","Array","isArray","filterTasks","console","error","useEffect","fetchTasks","_ref","_asyncToGenerator2","tasksResponse","axios","responsiblesResponse","clientsResponse","employeesResponse","paymentsResponse","validTasks","data","filter","task","status","apply","arguments","applyFilter","filterType","filterValue","newSelectedParticipants","includes","concat","_toConsumableArray2","id","updatedFilters","type","push","value","label","_ref2","filtered","_loop","responsible","fullname_client","filterByParticipants","payment","_x","_ref3","selectedEmployeeIds","length","participantTasksPromises","map","employeeId","responses","Promise","all","participantRelatedTaskIds","flatMap","response","taskEmployee","task_id","uniqueTaskIds","Set","_x2","_x3","removeFilter","filterIndex","index","resetFilters","groupTasksByDate","reduce","acc","date","start_date","split","groupedTasks","jsxs","SafeAreaView","style","styles","container","children","jsx","FilterModal","visible","onClose","currentFilters","onResetFilters","onUpdateFilters","payments","View","contentContainer","taskHeader","Text","titleMedium","TouchableOpacity","onPress","FilterIcon","ScrollView","horizontal","showsHorizontalScrollIndicator","overScrollMode","maxHeight","marginBottom","filterChip","filterChipText","CancelIcon","showsVerticalScrollIndicator","flex","entries","sort","_ref4","_ref5","_ref6","_ref7","b","Date","_ref8","_ref9","tasksForDate","section","sectionTitle","toLocaleDateString","day","month","assign","_ref10","_useState27","_useState28","statusFilter","setStatusFilter","_useState29","_useState30","dateFilter","setDateFilter","_useState31","_useState32","selectedStartDate","setSelectedStartDate","_useState33","_useState34","selectedEndDate","setSelectedEndDate","_useState35","_useState36","clientFilter","setClientFilter","_useState37","_useState38","responsibleFilter","setResponsibleFilter","_useState39","_useState40","participantFilter","setParticipantFilter","_useState41","_useState42","paymentMethodFilter","setPaymentMethodFilter","_useState43","_useState44","currentPage","setCurrentPage","_useState45","_useState46","isClosing","setIsClosing","_useState47","_useState48","modalVisible","setModalVisible","_useState49","_useState50","isFullSize","setIsFullSize","some","dateRangeFilter","find","f","start","end","ModalFullHeight","ModalHeight","modalHeight","useRef","Animated","Value","timing","current","toValue","duration","useNativeDriver","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","setOffset","_value","setValue","onPanResponderMove","event","dy","listener","gestureState","currentHeight","__getValue","onPanResponderRelease","flattenOffset","upwardThreshold","openFullModal","closeModal","useCallback","spring","bounciness","handleSelectStatus","handleClientChange","client","handleResponsibleChange","handlePaymentMethodChange","method","toggleParticipantSelection","log","onDateChange","dateType","selectedDate","renderFilterOption","title","setPage","isFilterSet","optionButton","fontSize","filterOptionRightSide","color","FollowIcon","renderMainPage","renderStatusPage","statuses","radioButton","radioButtonSelected","renderDatePage","placeholder","renderClientPage","full_name","renderResponsiblePage","renderParticipantPage","employee","checkboxContainer","checkbox","checkboxSelected","renderPaymentMethodPage","Modal","animationType","transparent","onRequestClose","modalOverlay","top","panHandlers","None","BackIcon","textAlign","_default","exports"],"sources":["C:/Users/fred/Desktop/client/src/screens/FeedScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Modal, ScrollView, View, Text, TouchableOpacity, Dimensions, PanResponder, Animated } from 'react-native';\r\nimport DateInput from '../components/DateInput';\r\nimport axios from 'axios';\r\nimport TaskComponent from '../components/TaskComponent';\r\nimport styles from '../styles/styles';\r\nimport { FilterIcon } from '../icons';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { BackIcon, None, FollowIcon, CancelIcon } from '../icons';\r\nimport { format, parseISO } from 'date-fns';\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\nconst FeedScreen = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [filteredTasks, setFilteredTasks] = useState([]);\r\n  const [filters, setFilters] = useState([]); // Объявляем переменную фильтров\r\n  const [isFilterModalVisible, setFilterModalVisible] = useState(false);\r\n  const [responsibles, setResponsibles] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [paymentmethods, setPaymentMethods] = useState([]);\r\n  const [clients, setClients] = useState([]);\r\n  const [selectedParticipants, setSelectedParticipants] = useState([]);\r\n  const [selectedClients, setSelectedClients] = useState('');\r\n  const [selectedResponsibles, setSelectedResponsibles] = useState('');\r\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState('');\r\n  const [selectedStatus, setSelectedStatus] = useState('');\r\n\r\n  const updateFilters = (newFilters) => {\r\n    // Убедитесь, что newFilters является объектом с нужными свойствами\r\n    if (typeof newFilters === 'object' && newFilters !== null) {\r\n      setFilters(Array.isArray(newFilters.filters) ? newFilters.filters : []);\r\n      setSelectedParticipants(newFilters.selectedParticipants || []);\r\n      filterTasks(newFilters);\r\n    } else {\r\n      console.error('newFilters должен быть объектом');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const tasksResponse = await axios.get('http://31.129.101.174/tasks');\r\n        const responsiblesResponse = await axios.get('http://31.129.101.174/responsibles');\r\n        const clientsResponse = await axios.get('http://31.129.101.174/clients');\r\n        const employeesResponse = await axios.get('http://31.129.101.174/employees');\r\n        const paymentsResponse = await axios.get('http://31.129.101.174/paymentmethods');\r\n\r\n        const validTasks = tasksResponse.data.filter(task => task.status !== 'черновик');\r\n        setTasks(validTasks);\r\n        setFilteredTasks(validTasks);\r\n        setResponsibles(responsiblesResponse.data);\r\n        setClients(clientsResponse.data);\r\n        setEmployees(employeesResponse.data);\r\n        setPaymentMethods(paymentsResponse.data);\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке задач:', error);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const applyFilter = (filterType, filterValue) => {\r\n    // Обновляем значения состояний на основе выбранного типа и значения фильтра\r\n    if (filterType === 'status') {\r\n      setSelectedStatus(filterValue);\r\n    } else if (filterType === 'client') {\r\n      setSelectedClients(filterValue);\r\n    } else if (filterType === 'responsible') {\r\n      setSelectedResponsibles(filterValue);\r\n    } else if (filterType === 'participant') {\r\n      let newSelectedParticipants;\r\n      if (!selectedParticipants.includes(filterValue)) {\r\n        newSelectedParticipants = [...selectedParticipants, filterValue];\r\n      } else {\r\n        newSelectedParticipants = selectedParticipants.filter(id => id !== filterValue);\r\n      }\r\n      setSelectedParticipants(newSelectedParticipants);\r\n    } else if (filterType === 'paymentMethod') {\r\n      setSelectedPaymentMethod(filterValue);\r\n    }\r\n\r\n    // Формирование обновленных фильтров\r\n    let updatedFilters = Array.isArray(filters) ? [...filters] : [];\r\n    updatedFilters = updatedFilters.filter(filter => filter.type !== filterType);\r\n    updatedFilters.push({ type: filterType, value: filterValue, label: filterValue });\r\n\r\n    setFilters(updatedFilters);\r\n    filterTasks(updatedFilters); // Обновляем отображаемые задачи в соответствии с новыми фильтрами\r\n  };\r\n\r\n  const filterTasks = async (updatedFilters) => {\r\n    let filtered = [...tasks];\r\n    for (const filter of updatedFilters) {\r\n      switch (filter.type) {\r\n        case 'status':\r\n          filtered = filtered.filter(task => task.status === filter.value);\r\n          break;\r\n        case 'responsible':\r\n          filtered = filtered.filter(task => task.responsible === filter.value);\r\n          break;\r\n        case 'client':\r\n          filtered = filtered.filter(task => task.fullname_client === filter.value);\r\n          break;\r\n        case 'participant':\r\n          if (Array.isArray(filter.value)) {\r\n            filtered = await filterByParticipants(filtered, filter.value);\r\n          }\r\n          break;\r\n        case 'paymentMethod':\r\n          filtered = filtered.filter(task => task.payment === filter.value);\r\n          break;\r\n        // Дополнительные кейсы по необходимости\r\n      }\r\n    }\r\n\r\n    setFilteredTasks(filtered);\r\n  };\r\n\r\n  const filterByParticipants = async (tasks, selectedEmployeeIds) => {\r\n    if (selectedEmployeeIds.length > 0) {\r\n      try {\r\n        const participantTasksPromises = selectedEmployeeIds.map(employeeId =>\r\n          axios.get(`http://31.129.101.174/task_employees?employee_id=${employeeId}`)\r\n        );\r\n        \r\n        const responses = await Promise.all(participantTasksPromises);\r\n          \r\n        // Убедимся, что каждый response.data является массивом, прежде чем использовать flatMap\r\n        const participantRelatedTaskIds = responses.flatMap(response =>\r\n          Array.isArray(response.data) ? response.data.map(taskEmployee => taskEmployee.task_id) : []\r\n        );\r\n        const uniqueTaskIds = [...new Set(participantRelatedTaskIds)];\r\n  \r\n        return tasks.filter(task => uniqueTaskIds.includes(task.id));\r\n      } catch (error) {\r\n        console.error('Ошибка при фильтрации задач по участникам:', error);\r\n        // Возвращаем неизменный список задач в случае ошибки\r\n        return tasks;\r\n      }\r\n    }\r\n    return tasks;\r\n  };\r\n  \r\n  const removeFilter = (filterType, filterIndex) => {\r\n    // Убедитесь, что filters - это массив\r\n    if (!Array.isArray(filters)) {\r\n      console.error('filters должен быть массивом');\r\n      return;\r\n    }\r\n\r\n    // Создаем новый массив фильтров без удаленного фильтра\r\n    const newFilters = filters.filter((filter, index) => index !== filterIndex);\r\n    setFilters(newFilters);\r\n\r\n    // Очищаем выбранные значения, если удаляем соответствующий фильтр\r\n    if (filterType === 'client') {\r\n      setSelectedClients('');\r\n    } else if (filterType === 'responsible') {\r\n      setSelectedResponsibles('');\r\n    } else if (filterType === 'participant') {\r\n      setSelectedParticipants(selectedParticipants.filter(id => id !== newFilters[filterIndex].value));\r\n    } else if (filterType === 'paymentMethod') {\r\n      setSelectedPaymentMethod('');\r\n    } else if (filterType === 'status') {\r\n      setSelectedStatus('');\r\n    }\r\n    // Добавьте здесь логику для других типов фильтров, если нужно\r\n\r\n    // Применяем оставшиеся фильтры к задачам\r\n    filterTasks(newFilters);\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setFilters([]);\r\n    setFilteredTasks(tasks);\r\n  };\r\n\r\n  const groupTasksByDate = (tasks) => {\r\n    return tasks.reduce((acc, task) => {\r\n      const date = task.start_date.split('T')[0];\r\n      if (!acc[date]) {\r\n        acc[date] = [];\r\n      }\r\n      acc[date].push(task);\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\n  const groupedTasks = groupTasksByDate(filteredTasks);\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <FilterModal\r\n        visible={isFilterModalVisible}\r\n        onClose={() => setFilterModalVisible(false)}\r\n        currentFilters={filters}\r\n        setFilters={setFilters}\r\n        applyFilter={applyFilter}\r\n        onResetFilters={resetFilters}\r\n        onUpdateFilters={updateFilters}\r\n        responsibles={responsibles}\r\n        clients={clients}\r\n        employees={employees}\r\n        payments={paymentmethods}\r\n        selectedStatus={selectedStatus}\r\n        setSelectedStatus={setSelectedStatus}\r\n        selectedClients={selectedClients}\r\n        selectedResponsibles={selectedResponsibles}\r\n        setSelectedClients={setSelectedClients}\r\n        setSelectedResponsibles={setSelectedResponsibles}\r\n        selectedParticipants={selectedParticipants}\r\n        setSelectedParticipants={setSelectedParticipants}\r\n        selectedPaymentMethod={selectedPaymentMethod}\r\n        setSelectedPaymentMethod={setSelectedPaymentMethod}\r\n        removeFilter={removeFilter}\r\n        filterTasks={filterTasks}\r\n      />\r\n      <View style={styles.contentContainer}>\r\n        <View style={styles.taskHeader}>\r\n          <Text style={styles.titleMedium}>Лента</Text>\r\n          <TouchableOpacity onPress={() => setFilterModalVisible(true)}>\r\n            <FilterIcon />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false} overScrollMode=\"never\" style={filters.length > 0 ? { maxHeight: 40, marginBottom: 12 } : { maxHeight: 0 }}>\r\n          {filters.map((filter, index) => (\r\n            <View key={index} style={styles.filterChip}>\r\n              <Text style={styles.filterChipText}>\r\n                {filter.type === 'participant' && selectedParticipants.length > 0\r\n                  ? `Участники (${selectedParticipants.length})`\r\n                  : filter.label}\r\n              </Text>\r\n              <TouchableOpacity onPress={() => removeFilter(filter.type, index)}>\r\n                <CancelIcon />\r\n              </TouchableOpacity>\r\n            </View>\r\n          ))}\r\n        </ScrollView>\r\n\r\n        <ScrollView\r\n          showsVerticalScrollIndicator={false}\r\n          overScrollMode=\"never\"\r\n          style={{ flex: 1 }}\r\n        >\r\n          {Object.entries(groupedTasks).sort(([a], [b]) => new Date(b) - new Date(a)).map(([date, tasksForDate]) => (\r\n            <View key={date} style={styles.section}>\r\n              <Text style={styles.sectionTitle}>\r\n                {new Date(date).toLocaleDateString('ru-RU', { day: 'numeric', month: 'long' })}\r\n              </Text>\r\n              {tasksForDate.map((task) => (\r\n                <TaskComponent key={task.id} {...task} />\r\n              ))}\r\n            </View>\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst FilterModal = ({ visible, onClose, currentFilters, filterTasks, setFilters, applyFilter, removeFilter, onResetFilters, responsibles, clients, employees, onUpdateFilters, payments, selectedStatus, setSelectedStatus, selectedClients, selectedResponsibles, setSelectedClients, setSelectedResponsibles, selectedParticipants, setSelectedParticipants, selectedPaymentMethod, setSelectedPaymentMethod }) => {\r\n  const [statusFilter, setStatusFilter] = useState('');\r\n  const [dateFilter, setDateFilter] = useState('');\r\n  const [selectedStartDate, setSelectedStartDate] = useState('');\r\n  const [selectedEndDate, setSelectedEndDate] = useState('');\r\n  const [clientFilter, setClientFilter] = useState('');\r\n  const [responsibleFilter, setResponsibleFilter] = useState('');\r\n  const [participantFilter, setParticipantFilter] = useState('');\r\n  const [paymentMethodFilter, setPaymentMethodFilter] = useState('');\r\n  const [currentPage, setCurrentPage] = useState('main');\r\n  const [isClosing, setIsClosing] = useState(false);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [isFullSize, setIsFullSize] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Очищаем состояния фильтров, если соответствующего фильтра нет в массиве\r\n    if (!currentFilters.some(filter => filter.type === 'status')) {\r\n      setStatusFilter('');\r\n    }\r\n\r\n    // Проверяем наличие фильтра диапазона дат и соответствующее обновление\r\n    const dateRangeFilter = currentFilters.find(f => f.type === 'dateRange');\r\n    if (dateRangeFilter) {\r\n      setSelectedStartDate(dateRangeFilter.value.start);\r\n      setSelectedEndDate(dateRangeFilter.value.end);\r\n    } else {\r\n      setSelectedStartDate('');\r\n      setSelectedEndDate('');\r\n    }\r\n\r\n    if (!currentFilters.some(filter => filter.type === 'client')) {\r\n      setClientFilter('');\r\n    }\r\n\r\n    // Добавьте здесь остальные проверки для других типов фильтров\r\n  }, [currentFilters]);\r\n\r\n\r\n\r\n  const ModalFullHeight = screenHeight * 0.25;\r\n  const ModalHeight = screenHeight * 0.35;\r\n  const modalHeight = useRef(new Animated.Value(ModalFullHeight));\r\n\r\n  useEffect(() => {\r\n    if (isFullSize) {\r\n      Animated.timing(modalHeight.current, {\r\n        toValue: ModalFullHeight,\r\n        duration: 300,\r\n        useNativeDriver: false,\r\n      }).start();\r\n    } else {\r\n      Animated.timing(modalHeight.current, {\r\n        toValue: ModalFullHeight,\r\n        duration: 300,\r\n        useNativeDriver: false,\r\n      }).start();\r\n    }\r\n  }, [isFullSize]);\r\n\r\n  const panResponder = useRef(\r\n    PanResponder.create({\r\n      onStartShouldSetPanResponder: () => true,\r\n      onPanResponderGrant: () => {\r\n        modalHeight.current.setOffset(modalHeight.current._value);\r\n        modalHeight.current.setValue(0);\r\n      },\r\n      onPanResponderMove: Animated.event(\r\n        [null, { dy: modalHeight.current }],\r\n        {\r\n          useNativeDriver: false,\r\n          listener: (event, gestureState) => {\r\n            const currentHeight = modalHeight.current.__getValue();\r\n            if (currentHeight < ModalFullHeight) {\r\n              modalHeight.current.setValue(0);\r\n            }\r\n          },\r\n        }\r\n      ),\r\n\r\n      onPanResponderRelease: (event, gestureState) => {\r\n        modalHeight.current.flattenOffset();\r\n        const currentHeight = modalHeight.current._value + gestureState.dy;\r\n        const upwardThreshold = ModalHeight + (screenHeight - ModalHeight) / 2;\r\n\r\n        if (gestureState.dy < 40) {\r\n          if (currentHeight < upwardThreshold) {\r\n            openFullModal();\r\n          } else {\r\n            closeModal();\r\n          }\r\n        } else {\r\n          if (currentHeight < ModalFullHeight) {\r\n            closeModal();\r\n          } else {\r\n            closeModal();\r\n          }\r\n        }\r\n      },\r\n\r\n\r\n    })\r\n  ).current;\r\n\r\n  const openFullModal = useCallback(() => {\r\n    Animated.spring(modalHeight.current, {\r\n      toValue: ModalFullHeight,\r\n      useNativeDriver: false,\r\n      bounciness: 0\r\n    }).start(() => setIsFullSize(true));\r\n  }, [ModalFullHeight]);\r\n\r\n  const closeModal = useCallback(() => {\r\n    setIsClosing(true);\r\n    Animated.spring(modalHeight.current, {\r\n      toValue: screenHeight,\r\n      useNativeDriver: false,\r\n      bounciness: 0\r\n    }).start(() => {\r\n      setIsFullSize(false);\r\n      modalHeight.current.setValue(ModalFullHeight); // Сбросить высоту модального окна\r\n      setIsClosing(false);\r\n      onClose(); // Обратите внимание, что теперь onClose вызывается здесь\r\n    });\r\n  }, [screenHeight, ModalFullHeight, onClose]);\r\n\r\n  const handleSelectStatus = (status) => {\r\n    if (selectedStatus === status) {\r\n      removeFilter('status');\r\n      setSelectedStatus('');\r\n    } else {\r\n      setSelectedStatus(status);\r\n      const newFilters = currentFilters.filter(f => f.type !== 'status');\r\n      newFilters.push({ type: 'status', value: status, label: `Статус: ${status}` });\r\n      setFilters(newFilters);\r\n      applyFilter('status', status);\r\n    }\r\n  };\r\n\r\n  const handleClientChange = (client) => {\r\n    if (selectedClients === client) {\r\n      removeFilter('client');\r\n      setSelectedClients('');\r\n    } else {\r\n      setSelectedClients(client);\r\n      const newFilters = currentFilters.filter(f => f.type !== 'client');\r\n      newFilters.push({ type: 'client', value: client, label: `Клиент: ${client}` });\r\n      setFilters(newFilters);\r\n      applyFilter('client', client);\r\n    }\r\n  };\r\n\r\n  const handleResponsibleChange = (responsible) => {\r\n    if (selectedResponsibles === responsible) {\r\n      removeFilter('responsible');\r\n      setSelectedResponsibles('');\r\n    } else {\r\n      setSelectedResponsibles(responsible);\r\n      const newFilters = currentFilters.filter(f => f.type !== 'responsible');\r\n      newFilters.push({ type: 'responsible', value: responsible, label: `Ответственный: ${responsible}` });\r\n      setFilters(newFilters);\r\n      applyFilter('responsible', responsible);\r\n    }\r\n  };\r\n\r\n  const handlePaymentMethodChange = (method) => {\r\n    if (selectedPaymentMethod === method) {\r\n      removeFilter('paymentMethod');\r\n      setSelectedPaymentMethod('');\r\n    } else {\r\n      setSelectedPaymentMethod(method);\r\n      const newFilters = currentFilters.filter(f => f.type !== 'paymentMethod');\r\n      newFilters.push({ type: 'paymentMethod', value: method, label: `Способ оплаты: ${method}` });\r\n      setFilters(newFilters);\r\n      applyFilter('paymentMethod', method);\r\n    }\r\n  };\r\n\r\n  const toggleParticipantSelection = (employeeId) => {\r\n    console.log(\"проверка:\", employeeId);\r\n    let newSelectedParticipants = selectedParticipants.includes(employeeId)\r\n      ? selectedParticipants.filter(id => id !== employeeId)\r\n      : [...selectedParticipants, employeeId];\r\n  \r\n    setSelectedParticipants(newSelectedParticipants);\r\n  \r\n    // Формирование обновленных фильтров\r\n    let updatedFilters = filters.filter(filter => filter.type !== 'participant');\r\n    \r\n    // Если есть выбранные участники, добавляем их в фильтры\r\n    if (newSelectedParticipants.length > 0) {\r\n      updatedFilters.push({ type: 'participant', value: newSelectedParticipants, label: `Участники: ${newSelectedParticipants.length}` });\r\n    }\r\n  \r\n    setFilters(updatedFilters); // Обновляем фильтры в состоянии\r\n  \r\n    // Вызываем filterTasks с обновленными фильтрами\r\n    filterTasks(updatedFilters);\r\n  };\r\n  const onDateChange = (dateType, selectedDate) => {\r\n    try {\r\n      if (dateType === 'startDate') {\r\n        setSelectedStartDate(selectedDate);\r\n      } else if (dateType === 'endDate') {\r\n        setSelectedEndDate(selectedDate);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка при преобразовании даты:\", error);\r\n    }\r\n  };\r\n\r\n  const renderFilterOption = (title, filterValue, setPage) => {\r\n    const isFilterSet = filterValue !== '';\r\n    return (\r\n      <TouchableOpacity style={styles.optionButton} onPress={setPage}>\r\n        <Text style={[styles.title, { fontSize: 15 }]}>{title}</Text>\r\n        <View style={styles.filterOptionRightSide}>\r\n          <Text style={{ fontSize: 12, color: 'grey' }}>{!isFilterSet ? 'Все' : ''}</Text>\r\n          <FollowIcon />\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  const renderMainPage = () => (\r\n    <View>\r\n      {renderFilterOption('Статус', statusFilter, () => setCurrentPage('status'))}\r\n      {renderFilterOption('Дата', dateFilter, () => setCurrentPage('dateRange'))}\r\n      {renderFilterOption('Клиент', clientFilter, () => setCurrentPage('client'))}\r\n      {renderFilterOption('Ответственный', responsibleFilter, () => setCurrentPage('responsible'))}\r\n      {renderFilterOption('Участники', participantFilter, () => setCurrentPage('participant'))}\r\n      {renderFilterOption('Способ оплаты', paymentMethodFilter, () => setCurrentPage('paymentMethod'))}\r\n    </View>\r\n  );\r\n\r\n  const renderStatusPage = () => {\r\n    const statuses = ['новая', 'в процессе', 'выполнено'];\r\n    return statuses.map(status => (\r\n      <TouchableOpacity\r\n        key={status}\r\n        style={styles.optionButton}\r\n        onPress={() => handleSelectStatus(status)}\r\n      >\r\n        <Text style={styles.title}>\r\n          {status}\r\n        </Text>\r\n        <View style={styles.radioButton}>\r\n          {selectedStatus === status && <View style={styles.radioButtonSelected} />}\r\n        </View>\r\n      </TouchableOpacity>\r\n    ));\r\n  };\r\n\r\n  const renderDatePage = () => (\r\n    <View style={{ flex: 1 }}>\r\n      <DateInput\r\n        date={selectedStartDate}\r\n        placeholder=\"От (гггг-мм-дд)\"\r\n        onDateChange={onDateChange}\r\n        dateType=\"startDate\"\r\n      />\r\n      <DateInput\r\n        date={selectedEndDate}\r\n        placeholder=\"До (гггг-мм-дд)\"\r\n        onDateChange={onDateChange}\r\n        dateType=\"endDate\"\r\n      />\r\n    </View>\r\n  );\r\n\r\n  const renderClientPage = () => (\r\n    <View>\r\n      {clients.map((client, index) => (\r\n        <TouchableOpacity key={index} style={styles.optionButton} onPress={() => handleClientChange(client.full_name)}>\r\n          <Text style={styles.title}>{client.full_name}</Text>\r\n          <View style={styles.radioButton}>\r\n            {selectedClients === client.full_name && <View style={styles.radioButtonSelected} />}\r\n          </View>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n\r\n\r\n  const renderResponsiblePage = () => (\r\n    <View>\r\n      {responsibles.map((responsible, index) => (\r\n        <TouchableOpacity key={index} style={styles.optionButton} onPress={() => handleResponsibleChange(responsible)}>\r\n          <Text style={styles.title}>{responsible}</Text>\r\n          <View style={styles.radioButton}>\r\n            {selectedResponsibles === responsible && <View style={styles.radioButtonSelected} />}\r\n          </View>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n\r\n  const renderParticipantPage = () => (\r\n    <View>\r\n      {employees.map(employee => (\r\n        <TouchableOpacity key={employee.id} onPress={() => toggleParticipantSelection(employee.id)}>\r\n          <View style={styles.checkboxContainer}>\r\n            <Text style={styles.title}>{employee.full_name}</Text>\r\n            <View style={styles.checkbox}>\r\n              {selectedParticipants.includes(employee.id) && <View style={styles.checkboxSelected} />}\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n\r\n  const renderPaymentMethodPage = () => {\r\n    return payments.map((method, index) => (\r\n      <TouchableOpacity\r\n        key={index}\r\n        style={styles.optionButton}\r\n        onPress={() => handlePaymentMethodChange(method)}\r\n      >\r\n        <Text style={styles.title}>{method}</Text>\r\n        <View style={styles.radioButton}>\r\n          {selectedPaymentMethod === method && <View style={styles.radioButtonSelected} />}\r\n        </View>\r\n      </TouchableOpacity>\r\n    ));\r\n  };\r\n\r\n  //  <TouchableOpacity style={styles.backgroundStyle} onPress={onClose} activeOpacity={1} />\r\n  return (\r\n    <Modal\r\n      animationType=\"slide\"\r\n      transparent={true}\r\n      visible={visible}\r\n      onRequestClose={onClose}\r\n    >\r\n      <Animated.View style={[styles.modalOverlay, { top: modalHeight.current }]} {...panResponder.panHandlers}>\r\n        <View style={styles.container}>\r\n          <View style={styles.contentContainer}>\r\n            <View style={styles.taskHeader}>\r\n              {currentPage === 'main' ? (\r\n                <TouchableOpacity>\r\n                  <None />\r\n                </TouchableOpacity>\r\n              ) : (\r\n                <TouchableOpacity onPress={() => setCurrentPage('main')}>\r\n                  <BackIcon />\r\n                </TouchableOpacity>\r\n              )}\r\n              <Text style={[styles.titleMedium, { flex: 1, textAlign: 'center' }]}>Фильтры</Text>\r\n              <TouchableOpacity>\r\n                <None />\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n\r\n            {currentPage === 'main' ? renderMainPage() :\r\n              currentPage === 'status' ? renderStatusPage() :\r\n                currentPage === 'dateRange' ? renderDatePage() :\r\n                  currentPage === 'client' ? renderClientPage() :\r\n                    currentPage === 'responsible' ? renderResponsiblePage() :\r\n                      currentPage === 'participant' ? renderParticipantPage() :\r\n                        currentPage === 'paymentMethod' ? renderPaymentMethodPage() :\r\n                          null\r\n            }\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </Modal>\r\n\r\n  );\r\n};\r\n\r\n\r\nexport default FeedScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}