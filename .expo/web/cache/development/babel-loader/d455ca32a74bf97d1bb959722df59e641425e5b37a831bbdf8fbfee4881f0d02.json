{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatTime = exports.formatDateTime = exports.formatDate = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _dateFns = require(\"date-fns\");\nvar _locale = require(\"date-fns/locale\");\nvar formatDate = exports.formatDate = function formatDate(isoString) {\n  try {\n    return (0, _dateFns.format)((0, _dateFns.parseISO)(isoString), 'dd.MM.yyyy', {\n      locale: _locale.ru\n    });\n  } catch (error) {\n    console.error('Ошибка при форматировании даты:', error);\n    return '';\n  }\n};\nvar formatTime = exports.formatTime = function formatTime(timeString) {\n  try {\n    var _timeString$split = timeString.split(':'),\n      _timeString$split2 = (0, _slicedToArray2.default)(_timeString$split, 2),\n      hours = _timeString$split2[0],\n      minutes = _timeString$split2[1];\n    var time = new Date();\n    time.setHours(parseInt(hours, 10), parseInt(minutes, 10), 0);\n    return (0, _dateFns.format)(time, 'HH:mm');\n  } catch (error) {\n    console.error('Ошибка при форматировании времени:', error);\n    return '';\n  }\n};\nvar formatDateTime = exports.formatDateTime = function formatDateTime(isoString) {\n  try {\n    return (0, _dateFns.format)((0, _dateFns.parseISO)(isoString), 'dd.MM.yyyy HH:mm', {\n      locale: _locale.ru\n    });\n  } catch (error) {\n    console.error('Ошибка при форматировании даты и времени:', error);\n    return '';\n  }\n};","map":{"version":3,"names":["_dateFns","require","_locale","formatDate","exports","isoString","format","parseISO","locale","ru","error","console","formatTime","timeString","_timeString$split","split","_timeString$split2","_slicedToArray2","default","hours","minutes","time","Date","setHours","parseInt","formatDateTime"],"sources":["C:/Users/fred/Desktop/client/src/utils/dateFormatter.js"],"sourcesContent":["// utils/dateFormatter.js\r\nimport { format, parseISO } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\n\r\n// Форматирует ISO строку в дату\r\nexport const formatDate = (isoString) => {\r\n  try {\r\n    return format(parseISO(isoString), 'dd.MM.yyyy', { locale: ru });\r\n  } catch (error) {\r\n    console.error('Ошибка при форматировании даты:', error);\r\n    return '';\r\n  }\r\n};\r\n\r\nexport const formatTime = (timeString) => {\r\n    try {\r\n      // Предполагаем, что timeString в формате \"HH:mm\"\r\n      const [hours, minutes] = timeString.split(':');\r\n      const time = new Date();\r\n      time.setHours(parseInt(hours, 10), parseInt(minutes, 10), 0);\r\n      return format(time, 'HH:mm');\r\n    } catch (error) {\r\n      console.error('Ошибка при форматировании времени:', error);\r\n      return '';\r\n    }\r\n  };\r\n\r\n// Форматирует ISO строку в дату и время\r\nexport const formatDateTime = (isoString) => {\r\n  try {\r\n    return format(parseISO(isoString), 'dd.MM.yyyy HH:mm', { locale: ru });\r\n  } catch (error) {\r\n    console.error('Ошибка при форматировании даты и времени:', error);\r\n    return '';\r\n  }\r\n};\r\n"],"mappings":";;;;;;AACA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAGO,IAAME,UAAU,GAAAC,OAAA,CAAAD,UAAA,GAAG,SAAbA,UAAUA,CAAIE,SAAS,EAAK;EACvC,IAAI;IACF,OAAO,IAAAC,eAAM,EAAC,IAAAC,iBAAQ,EAACF,SAAS,CAAC,EAAE,YAAY,EAAE;MAAEG,MAAM,EAAEC;IAAG,CAAC,CAAC;EAClE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,OAAO,EAAE;EACX;AACF,CAAC;AAEM,IAAME,UAAU,GAAAR,OAAA,CAAAQ,UAAA,GAAG,SAAbA,UAAUA,CAAIC,UAAU,EAAK;EACtC,IAAI;IAEF,IAAAC,iBAAA,GAAyBD,UAAU,CAACE,KAAK,CAAC,GAAG,CAAC;MAAAC,kBAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,iBAAA;MAAvCK,KAAK,GAAAH,kBAAA;MAAEI,OAAO,GAAAJ,kBAAA;IACrB,IAAMK,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;IACvBD,IAAI,CAACE,QAAQ,CAACC,QAAQ,CAACL,KAAK,EAAE,EAAE,CAAC,EAAEK,QAAQ,CAACJ,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IAC5D,OAAO,IAAAd,eAAM,EAACe,IAAI,EAAE,OAAO,CAAC;EAC9B,CAAC,CAAC,OAAOX,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,OAAO,EAAE;EACX;AACF,CAAC;AAGI,IAAMe,cAAc,GAAArB,OAAA,CAAAqB,cAAA,GAAG,SAAjBA,cAAcA,CAAIpB,SAAS,EAAK;EAC3C,IAAI;IACF,OAAO,IAAAC,eAAM,EAAC,IAAAC,iBAAQ,EAACF,SAAS,CAAC,EAAE,kBAAkB,EAAE;MAAEG,MAAM,EAAEC;IAAG,CAAC,CAAC;EACxE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;IACjE,OAAO,EAAE;EACX;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}