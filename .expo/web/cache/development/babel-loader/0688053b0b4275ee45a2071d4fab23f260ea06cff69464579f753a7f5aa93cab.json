{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { ChooseIcon, DeleteIcon } from \"../icons\";\nimport styles from \"../styles/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DropdownService(_ref) {\n  var options = _ref.options,\n    onValueChange = _ref.onValueChange,\n    _ref$selectedValues = _ref.selectedValues,\n    selectedValues = _ref$selectedValues === void 0 ? [] : _ref$selectedValues,\n    updateTotalCost = _ref.updateTotalCost;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showOptions = _useState2[0],\n    setShowOptions = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    searchQuery = _useState4[0],\n    setSearchQuery = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedItems = _useState6[0],\n    setSelectedItems = _useState6[1];\n  useEffect(function () {\n    var updatedSelectedItems = selectedValues.map(function (sv) {\n      return options.find(function (option) {\n        return option.id === sv;\n      });\n    }).filter(function (item) {\n      return item;\n    });\n    setSelectedItems(updatedSelectedItems);\n  }, [selectedValues, options]);\n  var filteredOptions = useMemo(function () {\n    return options.filter(function (option) {\n      return option.service_name.toLowerCase().includes(searchQuery.toLowerCase()) && !selectedItems.some(function (selected) {\n        return selected.id === option.id;\n      });\n    });\n  }, [options, searchQuery, selectedItems]);\n  var handleSelectOption = useCallback(function (option) {\n    var newSelectedItems = [].concat(_toConsumableArray(selectedItems), [option]);\n    setSelectedItems(newSelectedItems);\n    if (onValueChange) {\n      onValueChange(newSelectedItems.map(function (item) {\n        return item.id;\n      }));\n    }\n    setShowOptions(false);\n  }, [selectedItems, onValueChange]);\n  var handleRemoveItem = useCallback(function (id) {\n    var newSelectedItems = selectedItems.filter(function (item) {\n      return item.id !== id;\n    });\n    setSelectedItems(newSelectedItems);\n    if (onValueChange) {\n      onValueChange(newSelectedItems.map(function (item) {\n        return item.id;\n      }));\n    }\n    updateTotalCost(newSelectedItems);\n  }, [selectedItems, onValueChange, updateTotalCost]);\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: styles.searchContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A...\",\n        value: searchQuery,\n        style: styles.searchInput,\n        onChangeText: setSearchQuery,\n        onFocus: function onFocus() {\n          return setShowOptions(true);\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setShowOptions(!showOptions);\n        },\n        children: _jsx(ChooseIcon, {})\n      })]\n    }), showOptions && _jsx(ScrollView, {\n      overScrollMode: \"never\",\n      style: styles.dropdownList,\n      children: filteredOptions.map(function (item) {\n        return _jsx(TouchableOpacity, {\n          style: styles.rowStyle,\n          onPress: function onPress() {\n            return handleSelectOption(item);\n          },\n          children: _jsx(Text, {\n            style: styles.itemName,\n            children: `${item.service_name} - ${item.cost}`\n          })\n        }, `option-${item.id}`);\n      })\n    }), _jsx(ScrollView, {\n      overScrollMode: \"never\",\n      children: selectedItems.map(function (item) {\n        return _jsxs(View, {\n          style: styles.selectedItemContainer,\n          children: [_jsxs(View, {\n            style: styles.selectedItemTextRow,\n            children: [_jsx(Text, {\n              style: styles.selectedItemText,\n              children: `${item.service_name}`\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return handleRemoveItem(item.id);\n              },\n              children: _jsx(DeleteIcon, {})\n            })]\n          }), _jsx(View, {\n            style: styles.itemCostRow,\n            children: _jsxs(Text, {\n              style: styles.bodyMedium,\n              children: [\"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C:\", _jsxs(Text, {\n                style: styles.title,\n                children: [item.cost, \" \"]\n              }), \"\\u0440\\u0443\\u0431.\"]\n            })\n          })]\n        }, `selected-${item.id}`);\n      })\n    })]\n  });\n}\nexport default DropdownService;","map":{"version":3,"names":["React","useState","useMemo","useCallback","useEffect","View","Text","TouchableOpacity","ScrollView","TextInput","ChooseIcon","DeleteIcon","styles","jsx","_jsx","jsxs","_jsxs","DropdownService","_ref","options","onValueChange","_ref$selectedValues","selectedValues","updateTotalCost","_useState","_useState2","_slicedToArray","showOptions","setShowOptions","_useState3","_useState4","searchQuery","setSearchQuery","_useState5","_useState6","selectedItems","setSelectedItems","updatedSelectedItems","map","sv","find","option","id","filter","item","filteredOptions","service_name","toLowerCase","includes","some","selected","handleSelectOption","newSelectedItems","concat","_toConsumableArray","handleRemoveItem","children","style","searchContainer","placeholder","value","searchInput","onChangeText","onFocus","onPress","overScrollMode","dropdownList","rowStyle","itemName","cost","selectedItemContainer","selectedItemTextRow","selectedItemText","itemCostRow","bodyMedium","title"],"sources":["C:/Users/fred/Desktop/client/src/components/DropdownService.js"],"sourcesContent":["import React, { useState, useMemo, useCallback, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity, ScrollView, TextInput } from 'react-native';\r\nimport { ChooseIcon, DeleteIcon } from '../icons';\r\nimport styles from '../styles/styles';\r\n\r\nfunction DropdownService({ options, onValueChange, selectedValues = [], updateTotalCost }) {\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n\r\n    // Обновление selectedItems при изменении selectedValues или options\r\n    useEffect(() => {\r\n        const updatedSelectedItems = selectedValues.map(sv =>\r\n            options.find(option => option.id === sv)\r\n        ).filter(item => item); // Удаляем undefined элементы\r\n        setSelectedItems(updatedSelectedItems);\r\n    }, [selectedValues, options]);\r\n\r\n    const filteredOptions = useMemo(() => {\r\n        return options.filter(option =>\r\n            option.service_name.toLowerCase().includes(searchQuery.toLowerCase()) &&\r\n            !selectedItems.some(selected => selected.id === option.id)\r\n        );\r\n    }, [options, searchQuery, selectedItems]);\r\n\r\n    const handleSelectOption = useCallback((option) => {\r\n        const newSelectedItems = [...selectedItems, option];\r\n        setSelectedItems(newSelectedItems);\r\n        if (onValueChange) {\r\n            onValueChange(newSelectedItems.map(item => item.id));\r\n        }\r\n        setShowOptions(false);\r\n    }, [selectedItems, onValueChange]);\r\n\r\n    const handleRemoveItem = useCallback((id) => {\r\n        const newSelectedItems = selectedItems.filter(item => item.id !== id);\r\n        setSelectedItems(newSelectedItems);\r\n        if (onValueChange) {\r\n            onValueChange(newSelectedItems.map(item => item.id));\r\n        }\r\n        // Обновление общей стоимости после удаления услуги\r\n        updateTotalCost(newSelectedItems);\r\n    }, [selectedItems, onValueChange, updateTotalCost]);\r\n\r\n    return (\r\n        <View>\r\n            <View style={styles.searchContainer}>\r\n                <TextInput\r\n                    placeholder='Поиск...'\r\n                    value={searchQuery}\r\n                    style={styles.searchInput}\r\n                    onChangeText={setSearchQuery}\r\n                    onFocus={() => setShowOptions(true)}\r\n                />\r\n                <TouchableOpacity onPress={() => setShowOptions(!showOptions)}>\r\n                    <ChooseIcon />\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            {showOptions && (\r\n                <ScrollView overScrollMode=\"never\" style={styles.dropdownList}>\r\n                    {filteredOptions.map((item) => (\r\n                        <TouchableOpacity key={`option-${item.id}`} style={styles.rowStyle} onPress={() => handleSelectOption(item)}>\r\n                            <Text style={styles.itemName}>{`${item.service_name} - ${item.cost}`}</Text>\r\n                        </TouchableOpacity>\r\n                    ))}\r\n                </ScrollView>\r\n            )}\r\n\r\n            <ScrollView overScrollMode=\"never\">\r\n                {selectedItems.map((item) => (\r\n                    <View key={`selected-${item.id}`} style={styles.selectedItemContainer}>\r\n                        <View style={styles.selectedItemTextRow}>\r\n                            <Text style={styles.selectedItemText}>{`${item.service_name}`}</Text>\r\n                            <TouchableOpacity onPress={() => handleRemoveItem(item.id)}>\r\n                                <DeleteIcon />\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                        <View style={styles.itemCostRow}>\r\n                            <Text style={styles.bodyMedium}>\r\n                                Стоимость:\r\n                                <Text style={styles.title}>{item.cost} </Text>\r\n                                руб.\r\n                            </Text>\r\n                        </View>\r\n                    </View>\r\n                ))}\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default DropdownService;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}