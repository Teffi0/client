{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport DateInput from \"../components/DateInput\";\nimport axios from 'axios';\nimport TaskComponent from \"../components/TaskComponent\";\nimport styles from \"../styles/styles\";\nimport { FilterIcon } from \"../icons\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { BackIcon, None, FollowIcon, CancelIcon } from \"../icons\";\nimport { format, parseISO } from 'date-fns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get('window').height;\nvar FeedScreen = function FeedScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteredTasks = _useState4[0],\n    setFilteredTasks = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    filters = _useState6[0],\n    setFilters = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isFilterModalVisible = _useState8[0],\n    setFilterModalVisible = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    responsibles = _useState10[0],\n    setResponsibles = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    employees = _useState12[0],\n    setEmployees = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    paymentmethods = _useState14[0],\n    setPaymentMethods = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    clients = _useState16[0],\n    setClients = _useState16[1];\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    selectedParticipants = _useState18[0],\n    setSelectedParticipants = _useState18[1];\n  var _useState19 = useState(''),\n    _useState20 = _slicedToArray(_useState19, 2),\n    selectedClients = _useState20[0],\n    setSelectedClients = _useState20[1];\n  var _useState21 = useState(''),\n    _useState22 = _slicedToArray(_useState21, 2),\n    selectedResponsibles = _useState22[0],\n    setSelectedResponsibles = _useState22[1];\n  var _useState23 = useState(''),\n    _useState24 = _slicedToArray(_useState23, 2),\n    selectedPaymentMethod = _useState24[0],\n    setSelectedPaymentMethod = _useState24[1];\n  var _useState25 = useState(''),\n    _useState26 = _slicedToArray(_useState25, 2),\n    selectedStatus = _useState26[0],\n    setSelectedStatus = _useState26[1];\n  var _useState27 = useState(''),\n    _useState28 = _slicedToArray(_useState27, 2),\n    selectedStartDate = _useState28[0],\n    setSelectedStartDate = _useState28[1];\n  var _useState29 = useState(''),\n    _useState30 = _slicedToArray(_useState29, 2),\n    selectedEndDate = _useState30[0],\n    setSelectedEndDate = _useState30[1];\n  var updateFilters = function updateFilters(newFilters) {\n    if (typeof newFilters === 'object' && newFilters !== null) {\n      setFilters(Array.isArray(newFilters.filters) ? newFilters.filters : []);\n      setSelectedParticipants(newFilters.selectedParticipants || []);\n      filterTasks(newFilters);\n    } else {\n      console.error('newFilters должен быть объектом');\n    }\n  };\n  useEffect(function () {\n    var fetchTasks = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var tasksResponse = yield axios.get('http://31.129.101.174/tasks');\n          var responsiblesResponse = yield axios.get('http://31.129.101.174/responsibles');\n          var clientsResponse = yield axios.get('http://31.129.101.174/clients');\n          var employeesResponse = yield axios.get('http://31.129.101.174/employees');\n          var paymentsResponse = yield axios.get('http://31.129.101.174/paymentmethods');\n          var validTasks = tasksResponse.data.filter(function (task) {\n            return task.status !== 'черновик';\n          });\n          setTasks(validTasks);\n          setFilteredTasks(validTasks);\n          setResponsibles(responsiblesResponse.data);\n          setClients(clientsResponse.data);\n          setEmployees(employeesResponse.data);\n          setPaymentMethods(paymentsResponse.data);\n        } catch (error) {\n          console.error('Ошибка при загрузке задач:', error);\n        }\n      });\n      return function fetchTasks() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchTasks();\n  }, []);\n  var applyFilter = function applyFilter(filterType, filterValue) {\n    console.log(filterValue);\n    if (filterType === 'status') {\n      setSelectedStatus(filterValue);\n    } else if (filterType === 'client') {\n      setSelectedClients(filterValue);\n    } else if (filterType === 'dateRange') {\n      setFilters(function (prevFilters) {\n        var newFilters = prevFilters.filter(function (filter) {\n          return filter.type !== 'dateRange';\n        });\n        if (filterValue) {\n          newFilters.push({\n            type: 'dateRange',\n            label: filterValue\n          });\n        }\n        return newFilters;\n      });\n    } else if (filterType === 'responsible') {\n      setSelectedResponsibles(filterValue);\n    } else if (filterType === 'participant') {\n      var newSelectedParticipants;\n      if (!selectedParticipants.includes(filterValue)) {\n        newSelectedParticipants = [].concat(_toConsumableArray(selectedParticipants), [filterValue]);\n      } else {\n        newSelectedParticipants = selectedParticipants.filter(function (id) {\n          return id !== filterValue;\n        });\n      }\n      setSelectedParticipants(newSelectedParticipants);\n    } else if (filterType === 'paymentMethod') {\n      setSelectedPaymentMethod(filterValue);\n    }\n    var updatedFilters = Array.isArray(filters) ? _toConsumableArray(filters) : [];\n    updatedFilters = updatedFilters.filter(function (filter) {\n      return filter.type !== filterType;\n    });\n    updatedFilters.push({\n      type: filterType,\n      value: filterValue,\n      label: filterValue\n    });\n    setFilters(updatedFilters);\n    filterTasks(updatedFilters);\n  };\n  var filterTasks = function () {\n    var _ref2 = _asyncToGenerator(function* (updatedFilters) {\n      var filtered = _toConsumableArray(tasks);\n      var _loop = function* _loop(filter) {\n        switch (filter.type) {\n          case 'status':\n            console.log(filter.value);\n            filtered = filtered.filter(function (task) {\n              return task.status === filter.value;\n            });\n            break;\n          case 'responsible':\n            filtered = filtered.filter(function (task) {\n              return task.responsible === filter.value;\n            });\n            break;\n          case 'client':\n            filtered = filtered.filter(function (task) {\n              return task.fullname_client === filter.value;\n            });\n            break;\n          case 'participant':\n            if (Array.isArray(filter.value)) {\n              filtered = yield filterByParticipants(filtered, filter.value);\n            }\n            break;\n          case 'paymentMethod':\n            filtered = filtered.filter(function (task) {\n              return task.payment === filter.value;\n            });\n            break;\n          case 'dateRange':\n            var _filter$value = filter.value,\n              start = _filter$value.start,\n              end = _filter$value.end;\n            var startDate = start ? new Date(start) : null;\n            var endDate = end ? new Date(end) : null;\n            filtered = filtered.filter(function (task) {\n              var taskDate = new Date(task.start_date);\n              if (startDate && endDate) {\n                return taskDate >= startDate && taskDate <= endDate;\n              } else if (startDate) {\n                return taskDate >= startDate;\n              } else if (endDate) {\n                return taskDate <= endDate;\n              }\n              return true;\n            });\n            break;\n        }\n      };\n      for (var filter of updatedFilters) {\n        yield* _loop(filter);\n      }\n      setFilteredTasks(filtered);\n    });\n    return function filterTasks(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var filterByParticipants = function () {\n    var _ref3 = _asyncToGenerator(function* (tasks, selectedEmployeeIds) {\n      if (selectedEmployeeIds.length > 0) {\n        try {\n          var participantTasksPromises = selectedEmployeeIds.map(function (employeeId) {\n            return axios.get(`http://31.129.101.174/task_employees/${employeeId}`);\n          });\n          var responses = yield Promise.all(participantTasksPromises);\n          var participantTasks = responses.map(function (response) {\n            return response.data.map(function (taskEmployee) {\n              return taskEmployee;\n            });\n          });\n          var commonTasks = participantTasks.reduce(function (acc, tasks) {\n            return acc.filter(function (taskId) {\n              return tasks.includes(taskId);\n            });\n          });\n          return tasks.filter(function (task) {\n            return commonTasks.includes(task.id);\n          });\n        } catch (error) {\n          console.error('Ошибка при фильтрации задач по участникам:', error);\n          return tasks;\n        }\n      }\n      return tasks;\n    });\n    return function filterByParticipants(_x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var removeFilter = function removeFilter(filterType, filterIndex) {\n    if (!Array.isArray(filters)) {\n      console.error('filters должен быть массивом');\n      return;\n    }\n    var newFilters = filters.filter(function (filter, index) {\n      return index !== filterIndex;\n    });\n    setFilters(newFilters);\n    if (filterType === 'client') {\n      setSelectedClients('');\n    } else if (filterType === 'responsible') {\n      setSelectedResponsibles('');\n    } else if (filterType === 'participant') {\n      var filterToRemove = filters[filterIndex];\n      if (filterToRemove && Array.isArray(filterToRemove.value)) {\n        setSelectedParticipants(selectedParticipants.filter(function (id) {\n          return !filterToRemove.value.includes(id);\n        }));\n      }\n    } else if (filterType === 'paymentMethod') {\n      setSelectedPaymentMethod('');\n    } else if (filterType === 'status') {\n      setSelectedStatus('');\n    } else if (filterType === 'dateRange') {\n      setSelectedStartDate('');\n      setSelectedEndDate('');\n    }\n    filterTasks(newFilters);\n  };\n  var resetFilters = function resetFilters() {\n    setFilters([]);\n    setFilteredTasks(tasks);\n  };\n  var groupTasksByDate = function groupTasksByDate(tasks) {\n    return tasks.reduce(function (acc, task) {\n      var date = task.start_date.split('T')[0];\n      if (!acc[date]) {\n        acc[date] = [];\n      }\n      acc[date].push(task);\n      return acc;\n    }, {});\n  };\n  var groupedTasks = groupTasksByDate(filteredTasks);\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(FilterModal, {\n      visible: isFilterModalVisible,\n      onClose: function onClose() {\n        return setFilterModalVisible(false);\n      },\n      currentFilters: filters,\n      setFilters: setFilters,\n      applyFilter: applyFilter,\n      onResetFilters: resetFilters,\n      onUpdateFilters: updateFilters,\n      responsibles: responsibles,\n      clients: clients,\n      employees: employees,\n      payments: paymentmethods,\n      selectedStatus: selectedStatus,\n      setSelectedStatus: setSelectedStatus,\n      selectedClients: selectedClients,\n      selectedResponsibles: selectedResponsibles,\n      setSelectedClients: setSelectedClients,\n      setSelectedResponsibles: setSelectedResponsibles,\n      selectedParticipants: selectedParticipants,\n      setSelectedParticipants: setSelectedParticipants,\n      selectedPaymentMethod: selectedPaymentMethod,\n      setSelectedPaymentMethod: setSelectedPaymentMethod,\n      selectedStartDate: selectedStartDate,\n      setSelectedStartDate: setSelectedStartDate,\n      selectedEndDate: selectedEndDate,\n      setSelectedEndDate: setSelectedEndDate,\n      removeFilter: removeFilter,\n      filterTasks: filterTasks\n    }), _jsxs(View, {\n      style: styles.contentContainer,\n      children: [_jsxs(View, {\n        style: styles.taskHeader,\n        children: [_jsx(Text, {\n          style: styles.titleMedium,\n          children: \"\\u041B\\u0435\\u043D\\u0442\\u0430\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setFilterModalVisible(true);\n          },\n          children: _jsx(FilterIcon, {})\n        })]\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        overScrollMode: \"never\",\n        style: filters.length > 0 ? {\n          maxHeight: 40,\n          marginBottom: 12\n        } : {\n          maxHeight: 0\n        },\n        children: filters.map(function (filter, index) {\n          return _jsxs(View, {\n            style: styles.filterChip,\n            children: [_jsx(Text, {\n              style: styles.filterChipText,\n              children: filter.type === 'participant' && selectedParticipants.length > 0 ? `Участники (${selectedParticipants.length})` : filter.label\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return removeFilter(filter.type, index);\n              },\n              children: _jsx(CancelIcon, {})\n            })]\n          }, index);\n        })\n      }), _jsx(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        overScrollMode: \"never\",\n        style: {\n          flex: 1\n        },\n        children: Object.entries(groupedTasks).sort(function (_ref4, _ref5) {\n          var _ref6 = _slicedToArray(_ref4, 1),\n            a = _ref6[0];\n          var _ref7 = _slicedToArray(_ref5, 1),\n            b = _ref7[0];\n          return new Date(b) - new Date(a);\n        }).map(function (_ref8) {\n          var _ref9 = _slicedToArray(_ref8, 2),\n            date = _ref9[0],\n            tasksForDate = _ref9[1];\n          return _jsxs(View, {\n            style: styles.section,\n            children: [_jsx(Text, {\n              style: styles.sectionTitle,\n              children: new Date(date).toLocaleDateString('ru-RU', {\n                day: 'numeric',\n                month: 'long'\n              })\n            }), tasksForDate.map(function (task) {\n              return _jsx(TaskComponent, _objectSpread({}, task), task.id);\n            })]\n          }, date);\n        })\n      })]\n    })]\n  });\n};\nvar FilterModal = function FilterModal(_ref10) {\n  var visible = _ref10.visible,\n    onClose = _ref10.onClose,\n    currentFilters = _ref10.currentFilters,\n    filterTasks = _ref10.filterTasks,\n    setFilters = _ref10.setFilters,\n    applyFilter = _ref10.applyFilter,\n    removeFilter = _ref10.removeFilter,\n    onResetFilters = _ref10.onResetFilters,\n    responsibles = _ref10.responsibles,\n    clients = _ref10.clients,\n    employees = _ref10.employees,\n    onUpdateFilters = _ref10.onUpdateFilters,\n    payments = _ref10.payments,\n    selectedStatus = _ref10.selectedStatus,\n    setSelectedStatus = _ref10.setSelectedStatus,\n    selectedClients = _ref10.selectedClients,\n    selectedResponsibles = _ref10.selectedResponsibles,\n    setSelectedClients = _ref10.setSelectedClients,\n    setSelectedResponsibles = _ref10.setSelectedResponsibles,\n    selectedParticipants = _ref10.selectedParticipants,\n    setSelectedParticipants = _ref10.setSelectedParticipants,\n    selectedPaymentMethod = _ref10.selectedPaymentMethod,\n    setSelectedPaymentMethod = _ref10.setSelectedPaymentMethod,\n    selectedStartDate = _ref10.selectedStartDate,\n    setSelectedStartDate = _ref10.setSelectedStartDate,\n    selectedEndDate = _ref10.selectedEndDate,\n    setSelectedEndDate = _ref10.setSelectedEndDate;\n  var _useState31 = useState(''),\n    _useState32 = _slicedToArray(_useState31, 2),\n    statusFilter = _useState32[0],\n    setStatusFilter = _useState32[1];\n  var _useState33 = useState(''),\n    _useState34 = _slicedToArray(_useState33, 2),\n    dateFilter = _useState34[0],\n    setDateFilter = _useState34[1];\n  var _useState35 = useState(''),\n    _useState36 = _slicedToArray(_useState35, 2),\n    clientFilter = _useState36[0],\n    setClientFilter = _useState36[1];\n  var _useState37 = useState(''),\n    _useState38 = _slicedToArray(_useState37, 2),\n    responsibleFilter = _useState38[0],\n    setResponsibleFilter = _useState38[1];\n  var _useState39 = useState(''),\n    _useState40 = _slicedToArray(_useState39, 2),\n    participantFilter = _useState40[0],\n    setParticipantFilter = _useState40[1];\n  var _useState41 = useState(''),\n    _useState42 = _slicedToArray(_useState41, 2),\n    paymentMethodFilter = _useState42[0],\n    setPaymentMethodFilter = _useState42[1];\n  var _useState43 = useState('main'),\n    _useState44 = _slicedToArray(_useState43, 2),\n    currentPage = _useState44[0],\n    setCurrentPage = _useState44[1];\n  var _useState45 = useState(false),\n    _useState46 = _slicedToArray(_useState45, 2),\n    isClosing = _useState46[0],\n    setIsClosing = _useState46[1];\n  var _useState47 = useState(false),\n    _useState48 = _slicedToArray(_useState47, 2),\n    modalVisible = _useState48[0],\n    setModalVisible = _useState48[1];\n  var _useState49 = useState(false),\n    _useState50 = _slicedToArray(_useState49, 2),\n    isFullSize = _useState50[0],\n    setIsFullSize = _useState50[1];\n  var ModalFullHeight = screenHeight * 0.25;\n  var ModalHeight = screenHeight * 0.35;\n  var modalHeight = useRef(new Animated.Value(ModalFullHeight));\n  useEffect(function () {\n    if (isFullSize) {\n      Animated.timing(modalHeight.current, {\n        toValue: ModalFullHeight,\n        duration: 300,\n        useNativeDriver: false\n      }).start();\n    } else {\n      Animated.timing(modalHeight.current, {\n        toValue: ModalFullHeight,\n        duration: 300,\n        useNativeDriver: false\n      }).start();\n    }\n  }, [isFullSize]);\n  var panResponder = useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant() {\n      modalHeight.current.setOffset(modalHeight.current._value);\n      modalHeight.current.setValue(0);\n    },\n    onPanResponderMove: Animated.event([null, {\n      dy: modalHeight.current\n    }], {\n      useNativeDriver: false,\n      listener: function listener(event, gestureState) {\n        var currentHeight = modalHeight.current.__getValue();\n        if (currentHeight < ModalFullHeight) {\n          modalHeight.current.setValue(0);\n        }\n      }\n    }),\n    onPanResponderRelease: function onPanResponderRelease(event, gestureState) {\n      modalHeight.current.flattenOffset();\n      var currentHeight = modalHeight.current._value + gestureState.dy;\n      var upwardThreshold = ModalHeight + (screenHeight - ModalHeight) / 2;\n      if (gestureState.dy < 40) {\n        if (currentHeight < upwardThreshold) {\n          openFullModal();\n        } else {\n          closeModal();\n        }\n      } else {\n        if (currentHeight < ModalFullHeight) {\n          closeModal();\n        } else {\n          closeModal();\n        }\n      }\n    }\n  })).current;\n  var openFullModal = useCallback(function () {\n    Animated.spring(modalHeight.current, {\n      toValue: ModalFullHeight,\n      useNativeDriver: false,\n      bounciness: 0\n    }).start(function () {\n      return setIsFullSize(true);\n    });\n  }, [ModalFullHeight]);\n  var closeModal = useCallback(function () {\n    setIsClosing(true);\n    Animated.spring(modalHeight.current, {\n      toValue: screenHeight,\n      useNativeDriver: false,\n      bounciness: 0\n    }).start(function () {\n      setIsFullSize(false);\n      modalHeight.current.setValue(ModalFullHeight);\n      setIsClosing(false);\n      onClose();\n    });\n  }, [screenHeight, ModalFullHeight, onClose]);\n  var handleSelectStatus = function handleSelectStatus(status) {\n    if (selectedStatus === status) {\n      removeFilter('status');\n      setSelectedStatus('');\n    } else {\n      setSelectedStatus(status);\n      var newFilters = currentFilters.filter(function (f) {\n        return f.type !== 'status';\n      });\n      newFilters.push({\n        type: 'status',\n        value: status,\n        label: `Статус: ${status}`\n      });\n      setFilters(newFilters);\n      applyFilter('status', status);\n    }\n  };\n  var formatDate = function formatDate(dateString) {\n    if (!dateString) return '';\n    return format(dateString, 'dd.MM.yyyy');\n  };\n  var handleClientChange = function handleClientChange(client) {\n    if (selectedClients === client) {\n      removeFilter('client');\n      setSelectedClients('');\n    } else {\n      setSelectedClients(client);\n      var newFilters = currentFilters.filter(function (f) {\n        return f.type !== 'client';\n      });\n      newFilters.push({\n        type: 'client',\n        value: client,\n        label: `Клиент: ${client}`\n      });\n      setFilters(newFilters);\n      applyFilter('client', client);\n    }\n  };\n  var handleResponsibleChange = function handleResponsibleChange(responsible) {\n    if (selectedResponsibles === responsible) {\n      removeFilter('responsible');\n      setSelectedResponsibles('');\n    } else {\n      setSelectedResponsibles(responsible);\n      var newFilters = currentFilters.filter(function (f) {\n        return f.type !== 'responsible';\n      });\n      newFilters.push({\n        type: 'responsible',\n        value: responsible,\n        label: `Ответственный: ${responsible}`\n      });\n      setFilters(newFilters);\n      applyFilter('responsible', responsible);\n    }\n  };\n  var handlePaymentMethodChange = function handlePaymentMethodChange(method) {\n    if (selectedPaymentMethod === method) {\n      removeFilter('paymentMethod');\n      setSelectedPaymentMethod('');\n    } else {\n      setSelectedPaymentMethod(method);\n      var newFilters = currentFilters.filter(function (f) {\n        return f.type !== 'paymentMethod';\n      });\n      newFilters.push({\n        type: 'paymentMethod',\n        value: method,\n        label: `Способ оплаты: ${method}`\n      });\n      setFilters(newFilters);\n      applyFilter('paymentMethod', method);\n    }\n  };\n  var toggleParticipantSelection = function toggleParticipantSelection(employeeId) {\n    var newSelectedParticipants = selectedParticipants.includes(employeeId) ? selectedParticipants.filter(function (id) {\n      return id !== employeeId;\n    }) : [].concat(_toConsumableArray(selectedParticipants), [employeeId]);\n    setSelectedParticipants(newSelectedParticipants);\n    var updatedFilters = currentFilters.filter(function (filter) {\n      return filter.type !== 'participant';\n    });\n    if (newSelectedParticipants.length > 0) {\n      updatedFilters.push({\n        type: 'participant',\n        value: newSelectedParticipants,\n        label: `Участники: ${newSelectedParticipants.length}`\n      });\n    }\n    setFilters(updatedFilters);\n    filterTasks(updatedFilters);\n  };\n  var onDateChange = function onDateChange(dateType, selectedDate) {\n    var newStartDate = selectedStartDate;\n    var newEndDate = selectedEndDate;\n    if (dateType === 'startDate') {\n      newStartDate = selectedDate;\n      setSelectedStartDate(selectedDate);\n    } else if (dateType === 'endDate') {\n      newEndDate = selectedDate;\n      setSelectedEndDate(selectedDate);\n    }\n    var label = '';\n    var value = {};\n    if (newStartDate && newEndDate) {\n      label = `С: ${formatDate(newStartDate)} До: ${formatDate(newEndDate)}`;\n      value = {\n        start: newStartDate,\n        end: newEndDate\n      };\n    } else if (newStartDate) {\n      label = `С: ${formatDate(newStartDate)}`;\n      value = {\n        start: newStartDate\n      };\n    } else if (newEndDate) {\n      label = `До: ${formatDate(newEndDate)}`;\n      value = {\n        end: newEndDate\n      };\n    }\n    setFilters(function (prevFilters) {\n      var newFilters = prevFilters.filter(function (filter) {\n        return filter.type !== 'dateRange';\n      });\n      if (label) {\n        newFilters.push({\n          type: 'dateRange',\n          value: value,\n          label: label\n        });\n        filterTasks(newFilters);\n      }\n      return newFilters;\n    });\n  };\n  var renderFilterOption = function renderFilterOption(title, filterValue, setPage) {\n    var isFilterSet = filterValue !== '';\n    return _jsxs(TouchableOpacity, {\n      style: styles.optionButton,\n      onPress: setPage,\n      children: [_jsx(Text, {\n        style: [styles.title, {\n          fontSize: 15\n        }],\n        children: title\n      }), _jsxs(View, {\n        style: styles.filterOptionRightSide,\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 12,\n            color: 'grey'\n          },\n          children: !isFilterSet ? 'Все' : ''\n        }), _jsx(FollowIcon, {})]\n      })]\n    });\n  };\n  var renderMainPage = function renderMainPage() {\n    return _jsxs(View, {\n      children: [renderFilterOption('Статус', statusFilter, function () {\n        return setCurrentPage('status');\n      }), renderFilterOption('Дата', dateFilter, function () {\n        return setCurrentPage('dateRange');\n      }), renderFilterOption('Клиент', clientFilter, function () {\n        return setCurrentPage('client');\n      }), renderFilterOption('Ответственный', responsibleFilter, function () {\n        return setCurrentPage('responsible');\n      }), renderFilterOption('Участники', participantFilter, function () {\n        return setCurrentPage('participant');\n      }), renderFilterOption('Способ оплаты', paymentMethodFilter, function () {\n        return setCurrentPage('paymentMethod');\n      })]\n    });\n  };\n  var renderStatusPage = function renderStatusPage() {\n    var statuses = ['новая', 'в процессе', 'выполнено'];\n    return statuses.map(function (status) {\n      return _jsxs(TouchableOpacity, {\n        style: styles.optionButton,\n        onPress: function onPress() {\n          return handleSelectStatus(status);\n        },\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: status\n        }), _jsx(View, {\n          style: styles.radioButton,\n          children: selectedStatus === status && _jsx(View, {\n            style: styles.radioButtonSelected\n          })\n        })]\n      }, status);\n    });\n  };\n  var renderDatePage = function renderDatePage() {\n    return _jsxs(View, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(DateInput, {\n        date: selectedStartDate,\n        placeholder: \"\\u041E\\u0442 (\\u0433\\u0433\\u0433\\u0433-\\u043C\\u043C-\\u0434\\u0434)\",\n        onDateChange: onDateChange,\n        dateType: \"startDate\"\n      }), _jsx(DateInput, {\n        date: selectedEndDate,\n        placeholder: \"\\u0414\\u043E (\\u0433\\u0433\\u0433\\u0433-\\u043C\\u043C-\\u0434\\u0434)\",\n        onDateChange: onDateChange,\n        dateType: \"endDate\"\n      })]\n    });\n  };\n  var renderClientPage = function renderClientPage() {\n    return _jsx(View, {\n      children: clients.map(function (client, index) {\n        return _jsxs(TouchableOpacity, {\n          style: styles.optionButton,\n          onPress: function onPress() {\n            return handleClientChange(client.full_name);\n          },\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: client.full_name\n          }), _jsx(View, {\n            style: styles.radioButton,\n            children: selectedClients === client.full_name && _jsx(View, {\n              style: styles.radioButtonSelected\n            })\n          })]\n        }, index);\n      })\n    });\n  };\n  var renderResponsiblePage = function renderResponsiblePage() {\n    return _jsx(View, {\n      children: responsibles.map(function (responsible, index) {\n        return _jsxs(TouchableOpacity, {\n          style: styles.optionButton,\n          onPress: function onPress() {\n            return handleResponsibleChange(responsible);\n          },\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: responsible\n          }), _jsx(View, {\n            style: styles.radioButton,\n            children: selectedResponsibles === responsible && _jsx(View, {\n              style: styles.radioButtonSelected\n            })\n          })]\n        }, index);\n      })\n    });\n  };\n  var renderParticipantPage = function renderParticipantPage() {\n    return _jsx(View, {\n      children: employees.map(function (employee) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return toggleParticipantSelection(employee.id);\n          },\n          children: _jsxs(View, {\n            style: styles.checkboxContainer,\n            children: [_jsx(Text, {\n              style: styles.title,\n              children: employee.full_name\n            }), _jsx(View, {\n              style: styles.checkbox,\n              children: selectedParticipants.includes(employee.id) && _jsx(View, {\n                style: styles.checkboxSelected\n              })\n            })]\n          })\n        }, employee.id);\n      })\n    });\n  };\n  var renderPaymentMethodPage = function renderPaymentMethodPage() {\n    return payments.map(function (method, index) {\n      return _jsxs(TouchableOpacity, {\n        style: styles.optionButton,\n        onPress: function onPress() {\n          return handlePaymentMethodChange(method);\n        },\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: method\n        }), _jsx(View, {\n          style: styles.radioButton,\n          children: selectedPaymentMethod === method && _jsx(View, {\n            style: styles.radioButtonSelected\n          })\n        })]\n      }, index);\n    });\n  };\n  return _jsx(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: visible,\n    onRequestClose: onClose,\n    children: _jsx(Animated.View, _objectSpread(_objectSpread({\n      style: [styles.modalOverlay, {\n        top: modalHeight.current\n      }]\n    }, panResponder.panHandlers), {}, {\n      children: _jsx(View, {\n        style: styles.container,\n        children: _jsxs(View, {\n          style: styles.contentContainer,\n          children: [_jsxs(View, {\n            style: styles.taskHeader,\n            children: [currentPage === 'main' ? _jsx(TouchableOpacity, {\n              children: _jsx(None, {})\n            }) : _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setCurrentPage('main');\n              },\n              children: _jsx(BackIcon, {})\n            }), _jsx(Text, {\n              style: [styles.titleMedium, {\n                flex: 1,\n                textAlign: 'center'\n              }],\n              children: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\\u044B\"\n            }), _jsx(TouchableOpacity, {\n              children: _jsx(None, {})\n            })]\n          }), currentPage === 'main' ? renderMainPage() : currentPage === 'status' ? renderStatusPage() : currentPage === 'dateRange' ? renderDatePage() : currentPage === 'client' ? renderClientPage() : currentPage === 'responsible' ? renderResponsiblePage() : currentPage === 'participant' ? renderParticipantPage() : currentPage === 'paymentMethod' ? renderPaymentMethodPage() : null]\n        })\n      })\n    }))\n  });\n};\nexport default FeedScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Modal","ScrollView","View","Text","TouchableOpacity","Dimensions","PanResponder","Animated","DateInput","axios","TaskComponent","styles","FilterIcon","SafeAreaView","BackIcon","None","FollowIcon","CancelIcon","format","parseISO","jsx","_jsx","jsxs","_jsxs","screenHeight","get","height","FeedScreen","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","_useState4","filteredTasks","setFilteredTasks","_useState5","_useState6","filters","setFilters","_useState7","_useState8","isFilterModalVisible","setFilterModalVisible","_useState9","_useState10","responsibles","setResponsibles","_useState11","_useState12","employees","setEmployees","_useState13","_useState14","paymentmethods","setPaymentMethods","_useState15","_useState16","clients","setClients","_useState17","_useState18","selectedParticipants","setSelectedParticipants","_useState19","_useState20","selectedClients","setSelectedClients","_useState21","_useState22","selectedResponsibles","setSelectedResponsibles","_useState23","_useState24","selectedPaymentMethod","setSelectedPaymentMethod","_useState25","_useState26","selectedStatus","setSelectedStatus","_useState27","_useState28","selectedStartDate","setSelectedStartDate","_useState29","_useState30","selectedEndDate","setSelectedEndDate","updateFilters","newFilters","Array","isArray","filterTasks","console","error","fetchTasks","_ref","_asyncToGenerator","tasksResponse","responsiblesResponse","clientsResponse","employeesResponse","paymentsResponse","validTasks","data","filter","task","status","apply","arguments","applyFilter","filterType","filterValue","log","prevFilters","type","push","label","newSelectedParticipants","includes","concat","_toConsumableArray","id","updatedFilters","value","_ref2","filtered","_loop","responsible","fullname_client","filterByParticipants","payment","_filter$value","start","end","startDate","Date","endDate","taskDate","start_date","_x","_ref3","selectedEmployeeIds","length","participantTasksPromises","map","employeeId","responses","Promise","all","participantTasks","response","taskEmployee","commonTasks","reduce","acc","taskId","_x2","_x3","removeFilter","filterIndex","index","filterToRemove","resetFilters","groupTasksByDate","date","split","groupedTasks","style","container","children","FilterModal","visible","onClose","currentFilters","onResetFilters","onUpdateFilters","payments","contentContainer","taskHeader","titleMedium","onPress","horizontal","showsHorizontalScrollIndicator","overScrollMode","maxHeight","marginBottom","filterChip","filterChipText","showsVerticalScrollIndicator","flex","Object","entries","sort","_ref4","_ref5","_ref6","a","_ref7","b","_ref8","_ref9","tasksForDate","section","sectionTitle","toLocaleDateString","day","month","_objectSpread","_ref10","_useState31","_useState32","statusFilter","setStatusFilter","_useState33","_useState34","dateFilter","setDateFilter","_useState35","_useState36","clientFilter","setClientFilter","_useState37","_useState38","responsibleFilter","setResponsibleFilter","_useState39","_useState40","participantFilter","setParticipantFilter","_useState41","_useState42","paymentMethodFilter","setPaymentMethodFilter","_useState43","_useState44","currentPage","setCurrentPage","_useState45","_useState46","isClosing","setIsClosing","_useState47","_useState48","modalVisible","setModalVisible","_useState49","_useState50","isFullSize","setIsFullSize","ModalFullHeight","ModalHeight","modalHeight","Value","timing","current","toValue","duration","useNativeDriver","panResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","setOffset","_value","setValue","onPanResponderMove","event","dy","listener","gestureState","currentHeight","__getValue","onPanResponderRelease","flattenOffset","upwardThreshold","openFullModal","closeModal","spring","bounciness","handleSelectStatus","f","formatDate","dateString","handleClientChange","client","handleResponsibleChange","handlePaymentMethodChange","method","toggleParticipantSelection","onDateChange","dateType","selectedDate","newStartDate","newEndDate","renderFilterOption","title","setPage","isFilterSet","optionButton","fontSize","filterOptionRightSide","color","renderMainPage","renderStatusPage","statuses","radioButton","radioButtonSelected","renderDatePage","placeholder","renderClientPage","full_name","renderResponsiblePage","renderParticipantPage","employee","checkboxContainer","checkbox","checkboxSelected","renderPaymentMethodPage","animationType","transparent","onRequestClose","modalOverlay","top","panHandlers","textAlign"],"sources":["C:/Users/fred/Desktop/client/src/screens/FeedScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Modal, ScrollView, View, Text, TouchableOpacity, Dimensions, PanResponder, Animated } from 'react-native';\r\nimport DateInput from '../components/DateInput';\r\nimport axios from 'axios';\r\nimport TaskComponent from '../components/TaskComponent';\r\nimport styles from '../styles/styles';\r\nimport { FilterIcon } from '../icons';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { BackIcon, None, FollowIcon, CancelIcon } from '../icons';\r\nimport { format, parseISO } from 'date-fns';\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\nconst FeedScreen = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [filteredTasks, setFilteredTasks] = useState([]);\r\n  const [filters, setFilters] = useState([]); // Объявляем переменную фильтров\r\n  const [isFilterModalVisible, setFilterModalVisible] = useState(false);\r\n  const [responsibles, setResponsibles] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [paymentmethods, setPaymentMethods] = useState([]);\r\n  const [clients, setClients] = useState([]);\r\n  const [selectedParticipants, setSelectedParticipants] = useState([]);\r\n  const [selectedClients, setSelectedClients] = useState('');\r\n  const [selectedResponsibles, setSelectedResponsibles] = useState('');\r\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState('');\r\n  const [selectedStatus, setSelectedStatus] = useState('');\r\n  const [selectedStartDate, setSelectedStartDate] = useState('');\r\n  const [selectedEndDate, setSelectedEndDate] = useState('');\r\n\r\n  const updateFilters = (newFilters) => {\r\n    // Убедитесь, что newFilters является объектом с нужными свойствами\r\n    if (typeof newFilters === 'object' && newFilters !== null) {\r\n      setFilters(Array.isArray(newFilters.filters) ? newFilters.filters : []);\r\n      setSelectedParticipants(newFilters.selectedParticipants || []);\r\n      filterTasks(newFilters);\r\n    } else {\r\n      console.error('newFilters должен быть объектом');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const tasksResponse = await axios.get('http://31.129.101.174/tasks');\r\n        const responsiblesResponse = await axios.get('http://31.129.101.174/responsibles');\r\n        const clientsResponse = await axios.get('http://31.129.101.174/clients');\r\n        const employeesResponse = await axios.get('http://31.129.101.174/employees');\r\n        const paymentsResponse = await axios.get('http://31.129.101.174/paymentmethods');\r\n\r\n        const validTasks = tasksResponse.data.filter(task => task.status !== 'черновик');\r\n        setTasks(validTasks);\r\n        setFilteredTasks(validTasks);\r\n        setResponsibles(responsiblesResponse.data);\r\n        setClients(clientsResponse.data);\r\n        setEmployees(employeesResponse.data);\r\n        setPaymentMethods(paymentsResponse.data);\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке задач:', error);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const applyFilter = (filterType, filterValue) => {\r\n    console.log(filterValue);\r\n    if (filterType === 'status') {\r\n      setSelectedStatus(filterValue);\r\n    } else if (filterType === 'client') {\r\n      setSelectedClients(filterValue);\r\n    } else if (filterType === 'dateRange') {\r\n      setFilters(prevFilters => {\r\n        const newFilters = prevFilters.filter(filter => filter.type !== 'dateRange');\r\n        if (filterValue) {\r\n          newFilters.push({ type: 'dateRange', label: filterValue });\r\n        }\r\n        return newFilters;\r\n      });\r\n    } else if (filterType === 'responsible') {\r\n      setSelectedResponsibles(filterValue);\r\n    } else if (filterType === 'participant') {\r\n      let newSelectedParticipants;\r\n      if (!selectedParticipants.includes(filterValue)) {\r\n        newSelectedParticipants = [...selectedParticipants, filterValue];\r\n      } else {\r\n        newSelectedParticipants = selectedParticipants.filter(id => id !== filterValue);\r\n      }\r\n      setSelectedParticipants(newSelectedParticipants);\r\n    } else if (filterType === 'paymentMethod') {\r\n      setSelectedPaymentMethod(filterValue);\r\n    }\r\n\r\n    let updatedFilters = Array.isArray(filters) ? [...filters] : [];\r\n    updatedFilters = updatedFilters.filter(filter => filter.type !== filterType);\r\n    updatedFilters.push({ type: filterType, value: filterValue, label: filterValue });\r\n\r\n    setFilters(updatedFilters);\r\n    filterTasks(updatedFilters);\r\n  };\r\n\r\n  const filterTasks = async (updatedFilters) => {\r\n    let filtered = [...tasks];\r\n    for (const filter of updatedFilters) {\r\n      switch (filter.type) {\r\n        case 'status':\r\n          console.log(filter.value);\r\n          filtered = filtered.filter(task => task.status === filter.value);\r\n          break;\r\n        case 'responsible':\r\n          filtered = filtered.filter(task => task.responsible === filter.value);\r\n          break;\r\n        case 'client':\r\n          filtered = filtered.filter(task => task.fullname_client === filter.value);\r\n          break;\r\n        case 'participant':\r\n          if (Array.isArray(filter.value)) {\r\n            filtered = await filterByParticipants(filtered, filter.value);\r\n          }\r\n          break;\r\n        case 'paymentMethod':\r\n          filtered = filtered.filter(task => task.payment === filter.value);\r\n          break;\r\n        case 'dateRange':\r\n          const { start, end } = filter.value;\r\n          const startDate = start ? new Date(start) : null;\r\n          const endDate = end ? new Date(end) : null;\r\n\r\n          filtered = filtered.filter(task => {\r\n            const taskDate = new Date(task.start_date);\r\n            if (startDate && endDate) {\r\n              return taskDate >= startDate && taskDate <= endDate;\r\n            } else if (startDate) {\r\n              return taskDate >= startDate;\r\n            } else if (endDate) {\r\n              return taskDate <= endDate;\r\n            }\r\n            return true;\r\n          });\r\n          break;\r\n      }\r\n    }\r\n\r\n    setFilteredTasks(filtered);\r\n  };\r\n\r\n  const filterByParticipants = async (tasks, selectedEmployeeIds) => {\r\n    if (selectedEmployeeIds.length > 0) {\r\n      try {\r\n        // Получаем задачи для каждого участника\r\n        const participantTasksPromises = selectedEmployeeIds.map(employeeId =>\r\n          axios.get(`http://31.129.101.174/task_employees/${employeeId}`)\r\n        );\r\n        const responses = await Promise.all(participantTasksPromises);\r\n\r\n        // Преобразовываем ответы в массивы идентификаторов задач\r\n        const participantTasks = responses.map(response =>\r\n          response.data.map(taskEmployee => taskEmployee)\r\n        );\r\n\r\n        // Находим общие задачи для всех участников\r\n        const commonTasks = participantTasks.reduce((acc, tasks) =>\r\n          acc.filter(taskId => tasks.includes(taskId))\r\n        );\r\n\r\n        // Фильтруем исходные задачи, оставляя только общие\r\n        return tasks.filter(task => commonTasks.includes(task.id));\r\n      } catch (error) {\r\n        console.error('Ошибка при фильтрации задач по участникам:', error);\r\n        return tasks;\r\n      }\r\n    }\r\n    return tasks;\r\n  };\r\n\r\n  const removeFilter = (filterType, filterIndex) => {\r\n    if (!Array.isArray(filters)) {\r\n      console.error('filters должен быть массивом');\r\n      return;\r\n    }\r\n\r\n    const newFilters = filters.filter((filter, index) => index !== filterIndex);\r\n    setFilters(newFilters);\r\n\r\n    if (filterType === 'client') {\r\n      setSelectedClients('');\r\n    } else if (filterType === 'responsible') {\r\n      setSelectedResponsibles('');\r\n    } else if (filterType === 'participant') {\r\n      const filterToRemove = filters[filterIndex];\r\n      if (filterToRemove && Array.isArray(filterToRemove.value)) {\r\n        setSelectedParticipants(selectedParticipants.filter(id => !filterToRemove.value.includes(id)));\r\n      }\r\n    } else if (filterType === 'paymentMethod') {\r\n      setSelectedPaymentMethod('');\r\n    } else if (filterType === 'status') {\r\n      setSelectedStatus('');\r\n    } else if (filterType === 'dateRange') {\r\n      setSelectedStartDate('');\r\n      setSelectedEndDate('');\r\n    }\r\n    filterTasks(newFilters);\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setFilters([]);\r\n    setFilteredTasks(tasks);\r\n  };\r\n\r\n  const groupTasksByDate = (tasks) => {\r\n    return tasks.reduce((acc, task) => {\r\n      const date = task.start_date.split('T')[0];\r\n      if (!acc[date]) {\r\n        acc[date] = [];\r\n      }\r\n      acc[date].push(task);\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\n  const groupedTasks = groupTasksByDate(filteredTasks);\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <FilterModal\r\n        visible={isFilterModalVisible}\r\n        onClose={() => setFilterModalVisible(false)}\r\n        currentFilters={filters}\r\n        setFilters={setFilters}\r\n        applyFilter={applyFilter}\r\n        onResetFilters={resetFilters}\r\n        onUpdateFilters={updateFilters}\r\n        responsibles={responsibles}\r\n        clients={clients}\r\n        employees={employees}\r\n        payments={paymentmethods}\r\n        selectedStatus={selectedStatus}\r\n        setSelectedStatus={setSelectedStatus}\r\n        selectedClients={selectedClients}\r\n        selectedResponsibles={selectedResponsibles}\r\n        setSelectedClients={setSelectedClients}\r\n        setSelectedResponsibles={setSelectedResponsibles}\r\n        selectedParticipants={selectedParticipants}\r\n        setSelectedParticipants={setSelectedParticipants}\r\n        selectedPaymentMethod={selectedPaymentMethod}\r\n        setSelectedPaymentMethod={setSelectedPaymentMethod}\r\n        selectedStartDate={selectedStartDate}\r\n        setSelectedStartDate={setSelectedStartDate}\r\n        selectedEndDate={selectedEndDate}\r\n        setSelectedEndDate={setSelectedEndDate}\r\n        removeFilter={removeFilter}\r\n        filterTasks={filterTasks}\r\n      />\r\n      <View style={styles.contentContainer}>\r\n        <View style={styles.taskHeader}>\r\n          <Text style={styles.titleMedium}>Лента</Text>\r\n          <TouchableOpacity onPress={() => setFilterModalVisible(true)}>\r\n            <FilterIcon />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <ScrollView horizontal={true} showsHorizontalScrollIndicator={false} overScrollMode=\"never\" style={filters.length > 0 ? { maxHeight: 40, marginBottom: 12 } : { maxHeight: 0 }}>\r\n          {filters.map((filter, index) => (\r\n            <View key={index} style={styles.filterChip}>\r\n              <Text style={styles.filterChipText}>\r\n                {filter.type === 'participant' && selectedParticipants.length > 0\r\n                  ? `Участники (${selectedParticipants.length})`\r\n                  : filter.label}\r\n              </Text>\r\n              <TouchableOpacity onPress={() => removeFilter(filter.type, index)}>\r\n                <CancelIcon />\r\n              </TouchableOpacity>\r\n            </View>\r\n          ))}\r\n        </ScrollView>\r\n\r\n        <ScrollView\r\n          showsVerticalScrollIndicator={false}\r\n          overScrollMode=\"never\"\r\n          style={{ flex: 1 }}\r\n        >\r\n          {Object.entries(groupedTasks).sort(([a], [b]) => new Date(b) - new Date(a)).map(([date, tasksForDate]) => (\r\n            <View key={date} style={styles.section}>\r\n              <Text style={styles.sectionTitle}>\r\n                {new Date(date).toLocaleDateString('ru-RU', { day: 'numeric', month: 'long' })}\r\n              </Text>\r\n              {tasksForDate.map((task) => (\r\n                <TaskComponent key={task.id} {...task} />\r\n              ))}\r\n            </View>\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst FilterModal = ({ visible, onClose, currentFilters, filterTasks, setFilters, applyFilter, removeFilter, onResetFilters, responsibles, clients, employees, onUpdateFilters, payments, selectedStatus, setSelectedStatus, selectedClients, selectedResponsibles, setSelectedClients, setSelectedResponsibles, selectedParticipants, setSelectedParticipants, selectedPaymentMethod, setSelectedPaymentMethod, selectedStartDate, setSelectedStartDate, selectedEndDate, setSelectedEndDate }) => {\r\n  const [statusFilter, setStatusFilter] = useState('');\r\n  const [dateFilter, setDateFilter] = useState('');\r\n  const [clientFilter, setClientFilter] = useState('');\r\n  const [responsibleFilter, setResponsibleFilter] = useState('');\r\n  const [participantFilter, setParticipantFilter] = useState('');\r\n  const [paymentMethodFilter, setPaymentMethodFilter] = useState('');\r\n  const [currentPage, setCurrentPage] = useState('main');\r\n  const [isClosing, setIsClosing] = useState(false);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [isFullSize, setIsFullSize] = useState(false);\r\n\r\n  const ModalFullHeight = screenHeight * 0.25;\r\n  const ModalHeight = screenHeight * 0.35;\r\n  const modalHeight = useRef(new Animated.Value(ModalFullHeight));\r\n\r\n  useEffect(() => {\r\n    if (isFullSize) {\r\n      Animated.timing(modalHeight.current, {\r\n        toValue: ModalFullHeight,\r\n        duration: 300,\r\n        useNativeDriver: false,\r\n      }).start();\r\n    } else {\r\n      Animated.timing(modalHeight.current, {\r\n        toValue: ModalFullHeight,\r\n        duration: 300,\r\n        useNativeDriver: false,\r\n      }).start();\r\n    }\r\n  }, [isFullSize]);\r\n\r\n  const panResponder = useRef(\r\n    PanResponder.create({\r\n      onStartShouldSetPanResponder: () => true,\r\n      onPanResponderGrant: () => {\r\n        modalHeight.current.setOffset(modalHeight.current._value);\r\n        modalHeight.current.setValue(0);\r\n      },\r\n      onPanResponderMove: Animated.event(\r\n        [null, { dy: modalHeight.current }],\r\n        {\r\n          useNativeDriver: false,\r\n          listener: (event, gestureState) => {\r\n            const currentHeight = modalHeight.current.__getValue();\r\n            if (currentHeight < ModalFullHeight) {\r\n              modalHeight.current.setValue(0);\r\n            }\r\n          },\r\n        }\r\n      ),\r\n\r\n      onPanResponderRelease: (event, gestureState) => {\r\n        modalHeight.current.flattenOffset();\r\n        const currentHeight = modalHeight.current._value + gestureState.dy;\r\n        const upwardThreshold = ModalHeight + (screenHeight - ModalHeight) / 2;\r\n\r\n        if (gestureState.dy < 40) {\r\n          if (currentHeight < upwardThreshold) {\r\n            openFullModal();\r\n          } else {\r\n            closeModal();\r\n          }\r\n        } else {\r\n          if (currentHeight < ModalFullHeight) {\r\n            closeModal();\r\n          } else {\r\n            closeModal();\r\n          }\r\n        }\r\n      },\r\n\r\n\r\n    })\r\n  ).current;\r\n\r\n  const openFullModal = useCallback(() => {\r\n    Animated.spring(modalHeight.current, {\r\n      toValue: ModalFullHeight,\r\n      useNativeDriver: false,\r\n      bounciness: 0\r\n    }).start(() => setIsFullSize(true));\r\n  }, [ModalFullHeight]);\r\n\r\n  const closeModal = useCallback(() => {\r\n    setIsClosing(true);\r\n    Animated.spring(modalHeight.current, {\r\n      toValue: screenHeight,\r\n      useNativeDriver: false,\r\n      bounciness: 0\r\n    }).start(() => {\r\n      setIsFullSize(false);\r\n      modalHeight.current.setValue(ModalFullHeight); // Сбросить высоту модального окна\r\n      setIsClosing(false);\r\n      onClose(); // Обратите внимание, что теперь onClose вызывается здесь\r\n    });\r\n  }, [screenHeight, ModalFullHeight, onClose]);\r\n\r\n  const handleSelectStatus = (status) => {\r\n    if (selectedStatus === status) {\r\n      removeFilter('status');\r\n      setSelectedStatus('');\r\n    } else {\r\n      setSelectedStatus(status);\r\n      const newFilters = currentFilters.filter(f => f.type !== 'status');\r\n      newFilters.push({ type: 'status', value: status, label: `Статус: ${status}` });\r\n      setFilters(newFilters);\r\n      applyFilter('status', status);\r\n    }\r\n  };\r\n\r\n  // Функция для форматирования даты\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return '';\r\n    return format(dateString, 'dd.MM.yyyy');\r\n  };\r\n\r\n  const handleClientChange = (client) => {\r\n    if (selectedClients === client) {\r\n      removeFilter('client');\r\n      setSelectedClients('');\r\n    } else {\r\n      setSelectedClients(client);\r\n      const newFilters = currentFilters.filter(f => f.type !== 'client');\r\n      newFilters.push({ type: 'client', value: client, label: `Клиент: ${client}` });\r\n      setFilters(newFilters);\r\n      applyFilter('client', client);\r\n    }\r\n  };\r\n\r\n  const handleResponsibleChange = (responsible) => {\r\n    if (selectedResponsibles === responsible) {\r\n      removeFilter('responsible');\r\n      setSelectedResponsibles('');\r\n    } else {\r\n      setSelectedResponsibles(responsible);\r\n      const newFilters = currentFilters.filter(f => f.type !== 'responsible');\r\n      newFilters.push({ type: 'responsible', value: responsible, label: `Ответственный: ${responsible}` });\r\n      setFilters(newFilters);\r\n      applyFilter('responsible', responsible);\r\n    }\r\n  };\r\n\r\n  const handlePaymentMethodChange = (method) => {\r\n    if (selectedPaymentMethod === method) {\r\n      removeFilter('paymentMethod');\r\n      setSelectedPaymentMethod('');\r\n    } else {\r\n      setSelectedPaymentMethod(method);\r\n      const newFilters = currentFilters.filter(f => f.type !== 'paymentMethod');\r\n      newFilters.push({ type: 'paymentMethod', value: method, label: `Способ оплаты: ${method}` });\r\n      setFilters(newFilters);\r\n      applyFilter('paymentMethod', method);\r\n    }\r\n  };\r\n\r\n  const toggleParticipantSelection = (employeeId) => {\r\n\r\n    let newSelectedParticipants = selectedParticipants.includes(employeeId)\r\n      ? selectedParticipants.filter(id => id !== employeeId)\r\n      : [...selectedParticipants, employeeId];\r\n\r\n    setSelectedParticipants(newSelectedParticipants);\r\n\r\n    // Формирование обновленных фильтров\r\n    let updatedFilters = currentFilters.filter(filter => filter.type !== 'participant');\r\n\r\n    // Если есть выбранные участники, добавляем их в фильтры\r\n    if (newSelectedParticipants.length > 0) {\r\n      updatedFilters.push({ type: 'participant', value: newSelectedParticipants, label: `Участники: ${newSelectedParticipants.length}` });\r\n    }\r\n    setFilters(updatedFilters); // Обновляем фильтры в состоянии\r\n\r\n    // Вызываем filterTasks с обновленными фильтрами\r\n    filterTasks(updatedFilters);\r\n  };\r\n\r\n  const onDateChange = (dateType, selectedDate) => {\r\n    let newStartDate = selectedStartDate;\r\n    let newEndDate = selectedEndDate;\r\n\r\n    if (dateType === 'startDate') {\r\n      newStartDate = selectedDate;\r\n      setSelectedStartDate(selectedDate);\r\n    } else if (dateType === 'endDate') {\r\n      newEndDate = selectedDate;\r\n      setSelectedEndDate(selectedDate);\r\n    }\r\n\r\n    // Формирование метки и значения для фильтра\r\n    let label = '';\r\n    let value = {};\r\n    if (newStartDate && newEndDate) {\r\n      label = `С: ${formatDate(newStartDate)} До: ${formatDate(newEndDate)}`;\r\n      value = { start: newStartDate, end: newEndDate };\r\n    } else if (newStartDate) {\r\n      label = `С: ${formatDate(newStartDate)}`;\r\n      value = { start: newStartDate };\r\n    } else if (newEndDate) {\r\n      label = `До: ${formatDate(newEndDate)}`;\r\n      value = { end: newEndDate };\r\n    }\r\n\r\n    setFilters(prevFilters => {\r\n      const newFilters = prevFilters.filter(filter => filter.type !== 'dateRange');\r\n      if (label) {\r\n        newFilters.push({ type: 'dateRange', value, label });\r\n        filterTasks(newFilters);\r\n      }\r\n      return newFilters;\r\n    });\r\n  };\r\n\r\n  const renderFilterOption = (title, filterValue, setPage) => {\r\n    const isFilterSet = filterValue !== '';\r\n    return (\r\n      <TouchableOpacity style={styles.optionButton} onPress={setPage}>\r\n        <Text style={[styles.title, { fontSize: 15 }]}>{title}</Text>\r\n        <View style={styles.filterOptionRightSide}>\r\n          <Text style={{ fontSize: 12, color: 'grey' }}>{!isFilterSet ? 'Все' : ''}</Text>\r\n          <FollowIcon />\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  const renderMainPage = () => (\r\n    <View>\r\n      {renderFilterOption('Статус', statusFilter, () => setCurrentPage('status'))}\r\n      {renderFilterOption('Дата', dateFilter, () => setCurrentPage('dateRange'))}\r\n      {renderFilterOption('Клиент', clientFilter, () => setCurrentPage('client'))}\r\n      {renderFilterOption('Ответственный', responsibleFilter, () => setCurrentPage('responsible'))}\r\n      {renderFilterOption('Участники', participantFilter, () => setCurrentPage('participant'))}\r\n      {renderFilterOption('Способ оплаты', paymentMethodFilter, () => setCurrentPage('paymentMethod'))}\r\n    </View>\r\n  );\r\n\r\n  const renderStatusPage = () => {\r\n    const statuses = ['новая', 'в процессе', 'выполнено'];\r\n    return statuses.map(status => (\r\n      <TouchableOpacity\r\n        key={status}\r\n        style={styles.optionButton}\r\n        onPress={() => handleSelectStatus(status)}\r\n      >\r\n        <Text style={styles.title}>\r\n          {status}\r\n        </Text>\r\n        <View style={styles.radioButton}>\r\n          {selectedStatus === status && <View style={styles.radioButtonSelected} />}\r\n        </View>\r\n      </TouchableOpacity>\r\n    ));\r\n  };\r\n\r\n  const renderDatePage = () => (\r\n    <View style={{ flex: 1 }}>\r\n      <DateInput\r\n        date={selectedStartDate}\r\n        placeholder=\"От (гггг-мм-дд)\"\r\n        onDateChange={onDateChange}\r\n        dateType=\"startDate\"\r\n      />\r\n      <DateInput\r\n        date={selectedEndDate}\r\n        placeholder=\"До (гггг-мм-дд)\"\r\n        onDateChange={onDateChange}\r\n        dateType=\"endDate\"\r\n      />\r\n    </View>\r\n  );\r\n\r\n  const renderClientPage = () => (\r\n    <View>\r\n      {clients.map((client, index) => (\r\n        <TouchableOpacity key={index} style={styles.optionButton} onPress={() => handleClientChange(client.full_name)}>\r\n          <Text style={styles.title}>{client.full_name}</Text>\r\n          <View style={styles.radioButton}>\r\n            {selectedClients === client.full_name && <View style={styles.radioButtonSelected} />}\r\n          </View>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n\r\n\r\n  const renderResponsiblePage = () => (\r\n    <View>\r\n      {responsibles.map((responsible, index) => (\r\n        <TouchableOpacity key={index} style={styles.optionButton} onPress={() => handleResponsibleChange(responsible)}>\r\n          <Text style={styles.title}>{responsible}</Text>\r\n          <View style={styles.radioButton}>\r\n            {selectedResponsibles === responsible && <View style={styles.radioButtonSelected} />}\r\n          </View>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n\r\n  const renderParticipantPage = () => (\r\n    <View>\r\n      {employees.map(employee => (\r\n        <TouchableOpacity key={employee.id} onPress={() => toggleParticipantSelection(employee.id)}>\r\n          <View style={styles.checkboxContainer}>\r\n            <Text style={styles.title}>{employee.full_name}</Text>\r\n            <View style={styles.checkbox}>\r\n              {selectedParticipants.includes(employee.id) && <View style={styles.checkboxSelected} />}\r\n            </View>\r\n          </View>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n\r\n  const renderPaymentMethodPage = () => {\r\n    return payments.map((method, index) => (\r\n      <TouchableOpacity\r\n        key={index}\r\n        style={styles.optionButton}\r\n        onPress={() => handlePaymentMethodChange(method)}\r\n      >\r\n        <Text style={styles.title}>{method}</Text>\r\n        <View style={styles.radioButton}>\r\n          {selectedPaymentMethod === method && <View style={styles.radioButtonSelected} />}\r\n        </View>\r\n      </TouchableOpacity>\r\n    ));\r\n  };\r\n\r\n  //  <TouchableOpacity style={styles.backgroundStyle} onPress={onClose} activeOpacity={1} />\r\n  return (\r\n    <Modal\r\n      animationType=\"slide\"\r\n      transparent={true}\r\n      visible={visible}\r\n      onRequestClose={onClose}\r\n    >\r\n      <Animated.View style={[styles.modalOverlay, { top: modalHeight.current }]} {...panResponder.panHandlers}>\r\n        <View style={styles.container}>\r\n          <View style={styles.contentContainer}>\r\n            <View style={styles.taskHeader}>\r\n              {currentPage === 'main' ? (\r\n                <TouchableOpacity>\r\n                  <None />\r\n                </TouchableOpacity>\r\n              ) : (\r\n                <TouchableOpacity onPress={() => setCurrentPage('main')}>\r\n                  <BackIcon />\r\n                </TouchableOpacity>\r\n              )}\r\n              <Text style={[styles.titleMedium, { flex: 1, textAlign: 'center' }]}>Фильтры</Text>\r\n              <TouchableOpacity>\r\n                <None />\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n\r\n            {currentPage === 'main' ? renderMainPage() :\r\n              currentPage === 'status' ? renderStatusPage() :\r\n                currentPage === 'dateRange' ? renderDatePage() :\r\n                  currentPage === 'client' ? renderClientPage() :\r\n                    currentPage === 'responsible' ? renderResponsiblePage() :\r\n                      currentPage === 'participant' ? renderParticipantPage() :\r\n                        currentPage === 'paymentMethod' ? renderPaymentMethodPage() :\r\n                          null\r\n            }\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n    </Modal>\r\n\r\n  );\r\n};\r\n\r\n\r\nexport default FeedScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}