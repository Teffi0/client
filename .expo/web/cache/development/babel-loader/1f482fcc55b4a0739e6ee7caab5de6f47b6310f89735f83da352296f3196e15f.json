{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\fred\\\\Desktop\\\\client\\\\src\\\\screens\\\\ClientBaseScreen.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport axios from 'axios';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useNavigation } from '@react-navigation/native';\nimport { BackIcon, EditIcon, DeleteIcon, None, DocumentIcon } from '../icons';\nimport styles from '../styles/styles';\nimport { debounce } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Pagination = React.memo(function (_ref) {\n  var currentPage = _ref.currentPage,\n    totalPages = _ref.totalPages,\n    onPageChange = _ref.onPageChange;\n  var pages = React.useMemo(function () {\n    return Array.from({\n      length: totalPages\n    }, function (_, i) {\n      return i + 1;\n    });\n  }, [totalPages]);\n  return _jsxDEV(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    children: pages.map(function (page) {\n      return _jsxDEV(TouchableOpacity, {\n        onPress: function onPress() {\n          return onPageChange(page);\n        },\n        children: _jsxDEV(Text, {\n          style: {\n            marginHorizontal: 8,\n            color: currentPage === page ? 'blue' : 'black'\n          },\n          children: page\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, _this)\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n});\nvar ChangeHistoryModal = function ChangeHistoryModal(_ref2) {\n  var isVisible = _ref2.isVisible,\n    onClose = _ref2.onClose;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    history = _useState2[0],\n    setHistory = _useState2[1];\n  useEffect(function () {\n    var fetchHistory = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        try {\n          var response = yield axios.get(`http://31.129.101.174/clients/changes/all`);\n          setHistory(response.data);\n        } catch (error) {\n          console.error('Ошибка при получении истории изменений:', error);\n        }\n      });\n      return function fetchHistory() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    if (isVisible) {\n      fetchHistory();\n    }\n  }, [isVisible]);\n  return _jsxDEV(Modal, {\n    isVisible: isVisible,\n    onBackdropPress: onClose,\n    children: _jsxDEV(SafeAreaView, {\n      style: styles.container,\n      children: _jsxDEV(ScrollView, {\n        children: [_jsxDEV(View, {\n          style: styles.contentContainerTask,\n          children: _jsxDEV(View, {\n            style: styles.taskHeader,\n            children: [_jsxDEV(TouchableOpacity, {\n              onPress: onClose,\n              children: _jsxDEV(BackIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, _this), _jsxDEV(Text, {\n              style: [styles.titleMedium, {\n                flex: 1,\n                textAlign: 'center'\n              }],\n              children: \"\\u0416\\u0443\\u0440\\u043D\\u0430\\u043B \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0439\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, _this), _jsxDEV(TouchableOpacity, {\n              children: _jsxDEV(None, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, _this), history.map(function (change, index) {\n          return _jsxDEV(View, {\n            style: styles.historyItem,\n            children: [_jsxDEV(Text, {\n              children: [\"\\u0414\\u0430\\u0442\\u0430: \", change.change_timestamp]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, _this), _jsxDEV(Text, {\n              children: [\"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435: \", change.change_description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, _this), _jsxDEV(Text, {\n              children: [\"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C: \", change.user_id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, _this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, _this);\n};\nvar ClientBaseScreen = function ClientBaseScreen() {\n  var navigation = useNavigation();\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    clients = _useState4[0],\n    setClients = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    searchQuery = _useState6[0],\n    setSearchQuery = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedClients = _useState8[0],\n    setSelectedClients = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isEditing = _useState10[0],\n    setisEditing = _useState10[1];\n  var _useState11 = useState({}),\n    _useState12 = _slicedToArray(_useState11, 2),\n    editableClients = _useState12[0],\n    setEditableClients = _useState12[1];\n  var _useState13 = useState(1),\n    _useState14 = _slicedToArray(_useState13, 2),\n    currentPage = _useState14[0],\n    setCurrentPage = _useState14[1];\n  var _useState15 = useState(0),\n    _useState16 = _slicedToArray(_useState15, 2),\n    totalPages = _useState16[0],\n    setTotalPages = _useState16[1];\n  var limit = 10;\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    isHistoryModalVisible = _useState18[0],\n    setIsHistoryModalVisible = _useState18[1];\n  useEffect(function () {\n    fetchClients();\n  }, [currentPage]);\n  useEffect(function () {\n    if (selectedClients.length === 0 && isEditing) {\n      confirmCancelEditing();\n    }\n  }, [selectedClients, isEditing]);\n  var fetchClients = useCallback(_asyncToGenerator(function* () {\n    try {\n      var response = yield axios.get('http://31.129.101.174/clientsbase', {\n        params: {\n          page: currentPage,\n          limit: limit\n        }\n      });\n      setClients(response.data.clients);\n      setTotalPages(response.data.totalPages);\n    } catch (error) {\n      console.error('Ошибка при загрузке клиентов:', error);\n    }\n  }), [currentPage]);\n  var openHistoryModal = function openHistoryModal() {\n    return setIsHistoryModalVisible(true);\n  };\n  var debouncedSearch = useCallback(debounce(function (query) {\n    if (!query) {\n      fetchClients();\n    } else {\n      var lowercasedQuery = query.toLowerCase();\n      setClients(clients.filter(function (client) {\n        return client.full_name.toLowerCase().includes(lowercasedQuery) || client.phone_number.toLowerCase().includes(lowercasedQuery) || client.address.toLowerCase().includes(lowercasedQuery);\n      }));\n    }\n  }, 300), [clients]);\n  useEffect(function () {\n    debouncedSearch(searchQuery);\n  }, [searchQuery]);\n  var handleSearchChange = function handleSearchChange(text) {\n    return setSearchQuery(text);\n  };\n  var assembleFullAddress = useCallback(function (address) {\n    return `город ${address.city}, улица ${address.street}, дом ${address.building}, подъезд ${address.entrance}, этаж ${address.floor}`;\n  }, []);\n  var handleModalFormSubmit = useCallback(function () {\n    var _ref5 = _asyncToGenerator(function* (clientData) {\n      if (!clientData.full_name || !clientData.phone_number || Object.values(clientData.address).some(function (val) {\n        return !val;\n      })) {\n        Alert.alert('Ошибка', 'Заполните все поля.');\n        return;\n      }\n      var fullAddress = assembleFullAddress(clientData.address);\n      var dataToSend = {\n        full_name: clientData.full_name,\n        phone_number: clientData.phone_number,\n        address: fullAddress\n      };\n      try {\n        if (clientData.id && clientData.id !== 9999999) {\n          yield axios.put(`http://31.129.101.174/clients/${clientData.id}`, dataToSend);\n        } else {\n          var response = yield axios.post('http://31.129.101.174/clients', dataToSend);\n          if (response.data && response.data.id) {\n            setClients(function (prevClients) {\n              return [].concat(_toConsumableArray(prevClients), [_objectSpread(_objectSpread({}, dataToSend), {}, {\n                id: response.data.id\n              })]);\n            });\n          }\n        }\n      } catch (error) {\n        console.error('Ошибка при отправке данных клиента:', error);\n        Alert.alert('Ошибка', 'Произошла ошибка при отправке данных');\n      }\n    });\n    return function (_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }(), [assembleFullAddress]);\n  var clearEditingState = function clearEditingState() {\n    setisEditing(false);\n    setEditableClients({});\n    setSelectedClients([]);\n  };\n  var renderAddressFields = function renderAddressFields(clientId) {\n    var address = editableClients[clientId].address;\n    return _jsxDEV(View, {\n      children: [_jsxDEV(TextInput, {\n        style: styles.cell,\n        placeholder: \"\\u0413\\u043E\\u0440\\u043E\\u0434\",\n        value: address.city,\n        onChangeText: function onChangeText(text) {\n          return handleClientDataChange(clientId, 'address', _objectSpread(_objectSpread({}, address), {}, {\n            city: text\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, _this), _jsxDEV(TextInput, {\n        style: styles.cell,\n        placeholder: \"\\u0423\\u043B\\u0438\\u0446\\u0430\",\n        value: address.street,\n        onChangeText: function onChangeText(text) {\n          return handleClientDataChange(clientId, 'address', _objectSpread(_objectSpread({}, address), {}, {\n            street: text\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, _this), _jsxDEV(TextInput, {\n        style: styles.cell,\n        placeholder: \"\\u0414\\u043E\\u043C/\\u041A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430\",\n        value: address.building,\n        onChangeText: function onChangeText(text) {\n          return handleClientDataChange(clientId, 'address', _objectSpread(_objectSpread({}, address), {}, {\n            building: text\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, _this), _jsxDEV(TextInput, {\n        style: styles.cell,\n        placeholder: \"\\u041F\\u043E\\u0434\\u044A\\u0435\\u0437\\u0434\",\n        value: address.entrance,\n        onChangeText: function onChangeText(text) {\n          return handleClientDataChange(clientId, 'address', _objectSpread(_objectSpread({}, address), {}, {\n            entrance: text\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, _this), _jsxDEV(TextInput, {\n        style: styles.cell,\n        placeholder: \"\\u042D\\u0442\\u0430\\u0436\",\n        value: address.floor,\n        onChangeText: function onChangeText(text) {\n          return handleClientDataChange(clientId, 'address', _objectSpread(_objectSpread({}, address), {}, {\n            floor: text\n          }));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, _this);\n  };\n  var parseAddress = function parseAddress(fullAddress) {\n    var defaultAddress = {\n      city: '',\n      street: '',\n      building: '',\n      entrance: '',\n      floor: ''\n    };\n    if (!fullAddress) return defaultAddress;\n    var addressRegex = /город\\s([^,]*), улица\\s([^,]*), дом\\s([^,]*), подъезд\\s([^,]*), этаж\\s([^,]*)/;\n    var match = fullAddress.match(addressRegex);\n    if (!match || match.length < 6) {\n      return defaultAddress;\n    }\n    return {\n      city: match[1] || '',\n      street: match[2] || '',\n      building: match[3] || '',\n      entrance: match[4] || '',\n      floor: match[5] || ''\n    };\n  };\n  var isClientEmpty = function isClientEmpty(client) {\n    return !client.full_name && !client.phone_number && Object.values(client.address).every(function (val) {\n      return !val;\n    });\n  };\n  var handleButtonPress = React.useCallback(_asyncToGenerator(function* () {\n    if (isEditing) {\n      try {\n        yield Promise.all(Object.values(editableClients).map(function () {\n          var _ref7 = _asyncToGenerator(function* (clientData) {\n            yield handleModalFormSubmit(clientData);\n          });\n          return function (_x2) {\n            return _ref7.apply(this, arguments);\n          };\n        }()));\n        yield fetchClients();\n        clearEditingState();\n      } catch (error) {\n        console.error('Ошибка при обновлении данных клиентов:', error);\n        Alert.alert('Ошибка', 'Произошла ошибка при обновлении данных клиентов');\n      }\n    } else {\n      var newClientId = 9999999;\n      var newClientData = {\n        id: newClientId,\n        full_name: '',\n        phone_number: '',\n        address: {\n          city: '',\n          street: '',\n          building: '',\n          entrance: '',\n          floor: ''\n        }\n      };\n      setClients(function (prevClients) {\n        return [].concat(_toConsumableArray(prevClients), [newClientData]);\n      });\n      setEditableClients(_defineProperty({}, newClientId, newClientData));\n      setisEditing(true);\n      setSelectedClients([newClientId]);\n    }\n  }), [isEditing, editableClients]);\n  var handleClientDataChange = function handleClientDataChange(clientId, key, value) {\n    setEditableClients(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, clientId, _objectSpread(_objectSpread({}, prev[clientId]), {}, _defineProperty({}, key, value))));\n    });\n  };\n  var handleEditPress = function handleEditPress() {\n    if (selectedClients.length > 0) {\n      var editable = selectedClients.reduce(function (acc, clientId) {\n        var client = clients.find(function (c) {\n          return c.id === clientId;\n        });\n        if (client) {\n          var addressParts = parseAddress(client.address);\n          acc[clientId] = _objectSpread(_objectSpread({}, client), {}, {\n            address: addressParts\n          });\n        }\n        return acc;\n      }, {});\n      setEditableClients(editable);\n      setisEditing(true);\n    } else {\n      Alert.alert('Выберите клиента', 'Для редактирования выберите клиента из списка.');\n    }\n  };\n  var handleDeleteClient = function () {\n    var _ref8 = _asyncToGenerator(function* (clientId) {\n      try {\n        yield axios.delete(`http://31.129.101.174/clients/${clientId}`);\n        fetchClients();\n      } catch (error) {\n        console.error('Ошибка при удалении клиента:', error);\n      }\n    });\n    return function handleDeleteClient(_x3) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var handleSelectClient = function handleSelectClient(clientId) {\n    setSelectedClients(function (prevSelected) {\n      var newSelectedClients = prevSelected.includes(clientId) ? prevSelected.filter(function (id) {\n        return id !== clientId;\n      }) : [].concat(_toConsumableArray(prevSelected), [clientId]);\n      if (newSelectedClients.length === 0) {\n        confirmCancelEditing();\n      }\n      return newSelectedClients;\n    });\n  };\n  var handleSelectAllClients = function handleSelectAllClients() {\n    if (selectedClients.length === clients.length) {\n      setSelectedClients([]);\n    } else {\n      setSelectedClients(clients.map(function (client) {\n        return client.id;\n      }));\n    }\n  };\n  var renderRow = useCallback(function (_ref9) {\n    var item = _ref9.item;\n    return _jsxDEV(View, {\n      style: styles.row,\n      children: [_jsxDEV(View, {\n        style: styles.headercheckboxTableCell,\n        children: _jsxDEV(TouchableOpacity, {\n          style: styles.checkboxTable,\n          onPress: function onPress() {\n            return handleSelectClient(item.id);\n          },\n          children: selectedClients.includes(item.id) && _jsxDEV(View, {\n            style: styles.checkboxTableSelected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 49\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 7\n      }, _this), editableClients[item.id] ? _jsxDEV(React.Fragment, {\n        children: [_jsxDEV(TextInput, {\n          style: styles.cell,\n          value: editableClients[item.id].full_name,\n          onChangeText: function onChangeText(text) {\n            return handleClientDataChange(item.id, 'full_name', text);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, _this), _jsxDEV(TextInput, {\n          style: styles.cell,\n          value: editableClients[item.id].phone_number,\n          onChangeText: function onChangeText(text) {\n            return handleClientDataChange(item.id, 'phone_number', text);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, _this), renderAddressFields(item.id)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, _this) : _jsxDEV(React.Fragment, {\n        children: [_jsxDEV(Text, {\n          style: styles.cell,\n          children: item.full_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.cell,\n          children: item.phone_number || 'Нет номера'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: styles.cell,\n          children: item.address || 'Нет адреса'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 5\n    }, _this);\n  }, [editableClients, selectedClients]);\n  var handleBackPress = function handleBackPress() {\n    if (isEditing) {\n      if (selectedClients.length === 0) {\n        confirmCancelEditing();\n      } else {\n        Alert.alert(\"Предупреждение\", \"Данные могут не сохраниться. Отменить редактирование?\", [{\n          text: \"Нет\"\n        }, {\n          text: \"Да\",\n          onPress: confirmCancelEditing\n        }], {\n          cancelable: false\n        });\n      }\n    } else {\n      navigation.goBack();\n    }\n  };\n  var confirmCancelEditing = function confirmCancelEditing() {\n    setisEditing(false);\n    setEditableClients({});\n    setSelectedClients([]);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: _jsxDEV(View, {\n      style: styles.contentContainerTask,\n      children: [_jsxDEV(View, {\n        style: styles.taskHeader,\n        children: [_jsxDEV(TouchableOpacity, {\n          onPress: handleBackPress,\n          children: _jsxDEV(BackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, _this), _jsxDEV(Text, {\n          style: [styles.titleMedium, {\n            flex: 1,\n            textAlign: 'center'\n          }],\n          children: \"\\u041A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0441\\u043A\\u0430\\u044F \\u0431\\u0430\\u0437\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, _this), selectedClients.length === 0 ? _jsxDEV(TouchableOpacity, {\n          onPress: openHistoryModal,\n          children: _jsxDEV(DocumentIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, _this) : isEditing ? _jsxDEV(TouchableOpacity, {\n          onPress: function onPress() {\n            return handleDeleteClient(selectedClients[0]);\n          },\n          children: _jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, _this) : _jsxDEV(TouchableOpacity, {\n          onPress: handleEditPress,\n          children: _jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, _this), _jsxDEV(TextInput, {\n        style: styles.searchInput,\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\\u043C\",\n        onChangeText: handleSearchChange,\n        value: searchQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, _this), isHistoryModalVisible && _jsxDEV(ChangeHistoryModal, {\n        isVisible: isHistoryModalVisible,\n        onClose: function onClose() {\n          return setIsHistoryModalVisible(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, _this), _jsxDEV(ScrollView, {\n        horizontal: true,\n        overScrollMode: \"never\",\n        children: _jsxDEV(SafeAreaView, {\n          children: _jsxDEV(FlatList, {\n            data: clients,\n            keyExtractor: function keyExtractor(item) {\n              return String(item.id);\n            },\n            renderItem: renderRow,\n            ListHeaderComponent: _jsxDEV(View, {\n              style: styles.headerTable,\n              children: [_jsxDEV(View, {\n                style: styles.headercheckboxTableCell,\n                children: _jsxDEV(TouchableOpacity, {\n                  style: styles.checkboxTable,\n                  onPress: handleSelectAllClients,\n                  children: selectedClients.length === clients.length ? _jsxDEV(View, {\n                    style: styles.checkboxTableSelected\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 25\n                  }, _this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, _this), _jsxDEV(Text, {\n                style: styles.headerCell,\n                children: \"\\u0424\\u0418\\u041E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, _this), _jsxDEV(Text, {\n                style: styles.headerCell,\n                children: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, _this), _jsxDEV(Text, {\n                style: styles.headerCell,\n                children: \"\\u0410\\u0434\\u0440\\u0435\\u0441\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, _this),\n            ListFooterComponent: _jsxDEV(Pagination, {\n              currentPage: currentPage,\n              totalPages: totalPages,\n              onPageChange: setCurrentPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: styles.addButton,\n        onPress: handleButtonPress,\n        children: _jsxDEV(Text, {\n          style: styles.addButtonText,\n          children: isEditing ? \"Применить изменения\" : \"Добавить клиента\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 390,\n    columnNumber: 5\n  }, _this);\n};\nexport default ClientBaseScreen;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","View","Text","FlatList","ScrollView","Button","Alert","TextInput","TouchableOpacity","Modal","axios","SafeAreaView","useNavigation","BackIcon","EditIcon","DeleteIcon","None","DocumentIcon","styles","debounce","jsxDEV","_jsxDEV","Pagination","memo","_ref","currentPage","totalPages","onPageChange","pages","Array","from","length","_","i","style","flexDirection","justifyContent","children","map","page","onPress","marginHorizontal","color","fileName","_jsxFileName","lineNumber","columnNumber","_this","ChangeHistoryModal","_ref2","isVisible","onClose","_useState","_useState2","_slicedToArray","history","setHistory","fetchHistory","_ref3","_asyncToGenerator","response","get","data","error","console","apply","arguments","onBackdropPress","container","contentContainerTask","taskHeader","titleMedium","flex","textAlign","change","index","historyItem","change_timestamp","change_description","user_id","ClientBaseScreen","navigation","_useState3","_useState4","clients","setClients","_useState5","_useState6","searchQuery","setSearchQuery","_useState7","_useState8","selectedClients","setSelectedClients","_useState9","_useState10","isEditing","setisEditing","_useState11","_useState12","editableClients","setEditableClients","_useState13","_useState14","setCurrentPage","_useState15","_useState16","setTotalPages","limit","_useState17","_useState18","isHistoryModalVisible","setIsHistoryModalVisible","fetchClients","confirmCancelEditing","params","openHistoryModal","debouncedSearch","query","lowercasedQuery","toLowerCase","filter","client","full_name","includes","phone_number","address","handleSearchChange","text","assembleFullAddress","city","street","building","entrance","floor","handleModalFormSubmit","_ref5","clientData","Object","values","some","val","alert","fullAddress","dataToSend","id","put","post","prevClients","concat","_toConsumableArray","_objectSpread","_x","clearEditingState","renderAddressFields","clientId","cell","placeholder","value","onChangeText","handleClientDataChange","parseAddress","defaultAddress","addressRegex","match","isClientEmpty","every","handleButtonPress","Promise","all","_ref7","_x2","newClientId","newClientData","_defineProperty","key","prev","handleEditPress","editable","reduce","acc","find","c","addressParts","handleDeleteClient","_ref8","delete","_x3","handleSelectClient","prevSelected","newSelectedClients","handleSelectAllClients","renderRow","_ref9","item","row","headercheckboxTableCell","checkboxTable","checkboxTableSelected","Fragment","handleBackPress","cancelable","goBack","searchInput","horizontal","overScrollMode","keyExtractor","String","renderItem","ListHeaderComponent","headerTable","headerCell","ListFooterComponent","addButton","addButtonText"],"sources":["C:/Users/fred/Desktop/client/src/screens/ClientBaseScreen.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { View, Text, FlatList, ScrollView, Button, Alert, TextInput, TouchableOpacity, Modal } from 'react-native';\r\nimport axios from 'axios';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { BackIcon, EditIcon, DeleteIcon, None, DocumentIcon } from '../icons';\r\nimport styles from '../styles/styles';\r\nimport { debounce } from 'lodash';\r\n\r\nconst Pagination = React.memo(({ currentPage, totalPages, onPageChange }) => {\r\n  const pages = React.useMemo(() => {\r\n    return Array.from({ length: totalPages }, (_, i) => i + 1);\r\n  }, [totalPages]);\r\n\r\n  return (\r\n    <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\r\n      {pages.map(page => (\r\n        <TouchableOpacity key={page} onPress={() => onPageChange(page)}>\r\n          <Text style={{ marginHorizontal: 8, color: currentPage === page ? 'blue' : 'black' }}>\r\n            {page}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </View>\r\n  );\r\n});\r\n\r\nconst ChangeHistoryModal = ({ isVisible, onClose }) => {\r\n  const [history, setHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchHistory = async () => {\r\n      try {\r\n        const response = await axios.get(`http://31.129.101.174/clients/changes/all`);\r\n        setHistory(response.data);\r\n      } catch (error) {\r\n        console.error('Ошибка при получении истории изменений:', error);\r\n      }\r\n    };\r\n\r\n    if (isVisible) {\r\n      fetchHistory();\r\n    }\r\n  }, [isVisible]);\r\n\r\n  return (\r\n    <Modal isVisible={isVisible} onBackdropPress={onClose}>\r\n      <SafeAreaView style={styles.container}>\r\n        <ScrollView>\r\n          <View style={styles.contentContainerTask}>\r\n            <View style={styles.taskHeader}>\r\n              <TouchableOpacity onPress={onClose}>\r\n                <BackIcon />\r\n              </TouchableOpacity>\r\n              <Text style={[styles.titleMedium, { flex: 1, textAlign: 'center' }]}>Журнал изменений</Text>\r\n              <TouchableOpacity>\r\n                <None />\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n          {history.map((change, index) => (\r\n            <View key={index} style={styles.historyItem}>\r\n              <Text>Дата: {change.change_timestamp}</Text>\r\n              <Text>Описание: {change.change_description}</Text>\r\n              <Text>Пользователь: {change.user_id}</Text>\r\n            </View>\r\n          ))}\r\n        </ScrollView>\r\n      </SafeAreaView>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ClientBaseScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [clients, setClients] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [selectedClients, setSelectedClients] = useState([]);\r\n  const [isEditing, setisEditing] = useState(false);\r\n  const [editableClients, setEditableClients] = useState({});\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const limit = 10;\r\n  const [isHistoryModalVisible, setIsHistoryModalVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchClients();\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    if (selectedClients.length === 0 && isEditing) {\r\n      confirmCancelEditing();\r\n    }\r\n  }, [selectedClients, isEditing]);\r\n\r\n  const fetchClients = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('http://31.129.101.174/clientsbase', {\r\n        params: { page: currentPage, limit }\r\n      });\r\n      setClients(response.data.clients);\r\n      setTotalPages(response.data.totalPages);\r\n    } catch (error) {\r\n      console.error('Ошибка при загрузке клиентов:', error);\r\n    }\r\n  }, [currentPage]);\r\n\r\n  const openHistoryModal = () => setIsHistoryModalVisible(true);\r\n\r\n  const debouncedSearch = useCallback(debounce((query) => {\r\n    if (!query) {\r\n      fetchClients();\r\n    } else {\r\n      const lowercasedQuery = query.toLowerCase();\r\n      setClients(clients.filter(client =>\r\n        client.full_name.toLowerCase().includes(lowercasedQuery) ||\r\n        client.phone_number.toLowerCase().includes(lowercasedQuery) ||\r\n        client.address.toLowerCase().includes(lowercasedQuery)\r\n      ));\r\n    }\r\n  }, 300), [clients]);\r\n\r\n  useEffect(() => {\r\n    debouncedSearch(searchQuery);\r\n  }, [searchQuery]);\r\n\r\n  const handleSearchChange = (text) => setSearchQuery(text);\r\n\r\n  const assembleFullAddress = useCallback((address) => {\r\n    return `город ${address.city}, улица ${address.street}, дом ${address.building}, подъезд ${address.entrance}, этаж ${address.floor}`;\r\n  }, []);\r\n\r\n  const handleModalFormSubmit = useCallback(async (clientData) => {\r\n    if (!clientData.full_name || !clientData.phone_number || Object.values(clientData.address).some(val => !val)) {\r\n      Alert.alert('Ошибка', 'Заполните все поля.');\r\n      return;\r\n    }\r\n\r\n    const fullAddress = assembleFullAddress(clientData.address);\r\n    const dataToSend = {\r\n      full_name: clientData.full_name,\r\n      phone_number: clientData.phone_number,\r\n      address: fullAddress\r\n    };\r\n\r\n    try {\r\n      if (clientData.id && clientData.id !== 9999999) {\r\n        await axios.put(`http://31.129.101.174/clients/${clientData.id}`, dataToSend);\r\n      } else {\r\n        const response = await axios.post('http://31.129.101.174/clients', dataToSend);\r\n        if (response.data && response.data.id) {\r\n          setClients(prevClients => [...prevClients, { ...dataToSend, id: response.data.id }]);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при отправке данных клиента:', error);\r\n      Alert.alert('Ошибка', 'Произошла ошибка при отправке данных');\r\n    }\r\n  }, [assembleFullAddress]);\r\n\r\n  const clearEditingState = () => {\r\n    setisEditing(false);\r\n    setEditableClients({});\r\n    setSelectedClients([]);\r\n  };\r\n\r\n  const renderAddressFields = (clientId) => {\r\n    const address = editableClients[clientId].address;\r\n\r\n    return (\r\n      <View>\r\n        <TextInput\r\n          style={styles.cell}\r\n          placeholder=\"Город\"\r\n          value={address.city}\r\n          onChangeText={(text) => handleClientDataChange(clientId, 'address', { ...address, city: text })}\r\n        />\r\n        <TextInput\r\n          style={styles.cell}\r\n          placeholder=\"Улица\"\r\n          value={address.street}\r\n          onChangeText={(text) => handleClientDataChange(clientId, 'address', { ...address, street: text })}\r\n        />\r\n        <TextInput\r\n          style={styles.cell}\r\n          placeholder=\"Дом/Квартира\"\r\n          value={address.building}\r\n          onChangeText={(text) => handleClientDataChange(clientId, 'address', { ...address, building: text })}\r\n        />\r\n        <TextInput\r\n          style={styles.cell}\r\n          placeholder=\"Подъезд\"\r\n          value={address.entrance}\r\n          onChangeText={(text) => handleClientDataChange(clientId, 'address', { ...address, entrance: text })}\r\n        />\r\n        <TextInput\r\n          style={styles.cell}\r\n          placeholder=\"Этаж\"\r\n          value={address.floor}\r\n          onChangeText={(text) => handleClientDataChange(clientId, 'address', { ...address, floor: text })}\r\n        />\r\n      </View>\r\n    );\r\n  };\r\n  const parseAddress = (fullAddress) => {\r\n    const defaultAddress = { city: '', street: '', building: '', entrance: '', floor: '' };\r\n    if (!fullAddress) return defaultAddress;\r\n\r\n    const addressRegex = /город\\s([^,]*), улица\\s([^,]*), дом\\s([^,]*), подъезд\\s([^,]*), этаж\\s([^,]*)/;\r\n    const match = fullAddress.match(addressRegex);\r\n\r\n    if (!match || match.length < 6) {\r\n      return defaultAddress;\r\n    }\r\n\r\n    return {\r\n      city: match[1] || '',\r\n      street: match[2] || '',\r\n      building: match[3] || '',\r\n      entrance: match[4] || '',\r\n      floor: match[5] || ''\r\n    };\r\n  };\r\n\r\n  const isClientEmpty = (client) => {\r\n    return !client.full_name && !client.phone_number && Object.values(client.address).every(val => !val);\r\n  };\r\n\r\n  const handleButtonPress = React.useCallback(async () => {\r\n    if (isEditing) {\r\n      try {\r\n        // Обрабатываем каждый выбранный для редактирования клиент\r\n        await Promise.all(Object.values(editableClients).map(async (clientData) => {\r\n          await handleModalFormSubmit(clientData);\r\n        }));\r\n\r\n        // Обновляем список клиентов после редактирования\r\n        await fetchClients();\r\n\r\n        // Очищаем состояние редактирования и сбрасываем выбранных клиентов\r\n        clearEditingState();\r\n      } catch (error) {\r\n        console.error('Ошибка при обновлении данных клиентов:', error);\r\n        Alert.alert('Ошибка', 'Произошла ошибка при обновлении данных клиентов');\r\n      }\r\n    } else {\r\n      const newClientId = 9999999; // Используйте текущий временной штамп для уникального ID\r\n      const newClientData = {\r\n        id: newClientId,\r\n        full_name: '',\r\n        phone_number: '',\r\n        address: { city: '', street: '', building: '', entrance: '', floor: '' }\r\n      };\r\n\r\n      // Добавляем нового клиента в список клиентов и в список редактируемых клиентов\r\n      setClients(prevClients => [...prevClients, newClientData]);\r\n      setEditableClients({ [newClientId]: newClientData });\r\n      setisEditing(true);\r\n      setSelectedClients([newClientId]); // Выбираем нового клиента для редактирования\r\n    }\r\n  }, [isEditing, editableClients]);\r\n\r\n  const handleClientDataChange = (clientId, key, value) => {\r\n    setEditableClients(prev => ({\r\n      ...prev,\r\n      [clientId]: {\r\n        ...prev[clientId],\r\n        [key]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleEditPress = () => {\r\n    if (selectedClients.length > 0) {\r\n      const editable = selectedClients.reduce((acc, clientId) => {\r\n        const client = clients.find(c => c.id === clientId);\r\n        if (client) {\r\n          // Разбиваем адрес на компоненты\r\n          const addressParts = parseAddress(client.address);\r\n          acc[clientId] = {\r\n            ...client,\r\n            address: addressParts\r\n          };\r\n        }\r\n        return acc;\r\n      }, {});\r\n\r\n      setEditableClients(editable);\r\n      setisEditing(true);\r\n    } else {\r\n      Alert.alert('Выберите клиента', 'Для редактирования выберите клиента из списка.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteClient = async (clientId) => {\r\n    try {\r\n      await axios.delete(`http://31.129.101.174/clients/${clientId}`);\r\n      fetchClients();\r\n    } catch (error) {\r\n      console.error('Ошибка при удалении клиента:', error);\r\n    }\r\n  };\r\n\r\n  const handleSelectClient = (clientId) => {\r\n    setSelectedClients(prevSelected => {\r\n      const newSelectedClients = prevSelected.includes(clientId)\r\n        ? prevSelected.filter(id => id !== clientId)\r\n        : [...prevSelected, clientId];\r\n\r\n      // Если после изменения выбора клиентов, список стал пустым\r\n      if (newSelectedClients.length === 0) {\r\n        // Вызываем функцию для отмены редактирования и сброса изменений\r\n        confirmCancelEditing();\r\n      }\r\n\r\n      return newSelectedClients;\r\n    });\r\n  };\r\n\r\n  const handleSelectAllClients = () => {\r\n    if (selectedClients.length === clients.length) {\r\n      setSelectedClients([]); // Снимаем выбор со всех, если все уже выбраны\r\n    } else {\r\n      setSelectedClients(clients.map(client => client.id)); // Выбираем всех, если не все выбраны\r\n    }\r\n  };\r\n\r\n  const renderRow = useCallback(({ item }) => (\r\n    <View style={styles.row}>\r\n      <View style={styles.headercheckboxTableCell}>\r\n        <TouchableOpacity\r\n          style={styles.checkboxTable}\r\n          onPress={() => handleSelectClient(item.id)}\r\n        >\r\n          {selectedClients.includes(item.id) && <View style={styles.checkboxTableSelected} />}\r\n        </TouchableOpacity>\r\n      </View>\r\n      {editableClients[item.id] ? (\r\n        <React.Fragment>\r\n          <TextInput\r\n            style={styles.cell}\r\n            value={editableClients[item.id].full_name}\r\n            onChangeText={(text) => handleClientDataChange(item.id, 'full_name', text)}\r\n          />\r\n          <TextInput\r\n            style={styles.cell}\r\n            value={editableClients[item.id].phone_number}\r\n            onChangeText={(text) => handleClientDataChange(item.id, 'phone_number', text)}\r\n          />\r\n          {renderAddressFields(item.id)}\r\n        </React.Fragment>\r\n      ) : (\r\n        // Текстовое представление данных клиента\r\n        <React.Fragment>\r\n          <Text style={styles.cell}>{item.full_name}</Text>\r\n          <Text style={styles.cell}>{item.phone_number || 'Нет номера'}</Text>\r\n          <Text style={styles.cell}>{item.address || 'Нет адреса'}</Text>\r\n        </React.Fragment>\r\n      )}\r\n    </View>\r\n  ), [editableClients, selectedClients]);\r\n\r\n  const handleBackPress = () => {\r\n    if (isEditing) {\r\n      if (selectedClients.length === 0) {\r\n        confirmCancelEditing(); // Автоматическая отмена редактирования, если нет выбранных клиентов\r\n      } else {\r\n        Alert.alert(\r\n          \"Предупреждение\",\r\n          \"Данные могут не сохраниться. Отменить редактирование?\",\r\n          [\r\n            { text: \"Нет\" },\r\n            { text: \"Да\", onPress: confirmCancelEditing }\r\n          ],\r\n          { cancelable: false }\r\n        );\r\n      }\r\n    } else {\r\n      navigation.goBack(); // Возврат к предыдущему экрану, если не в режиме редактирования\r\n    }\r\n  };\r\n\r\n  const confirmCancelEditing = () => {\r\n    setisEditing(false);\r\n    setEditableClients({});\r\n    setSelectedClients([]); // Сброс выбранных клиентов\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.contentContainerTask}>\r\n        <View style={styles.taskHeader}>\r\n          <TouchableOpacity onPress={handleBackPress}>\r\n            <BackIcon />\r\n          </TouchableOpacity>\r\n          <Text style={[styles.titleMedium, { flex: 1, textAlign: 'center' }]}>Клиентская база</Text>\r\n          {selectedClients.length === 0 ? (\r\n            <TouchableOpacity onPress={openHistoryModal}>\r\n              <DocumentIcon />\r\n            </TouchableOpacity>\r\n          ) : isEditing ? (\r\n            <TouchableOpacity onPress={() => handleDeleteClient(selectedClients[0])}>\r\n              <DeleteIcon />\r\n            </TouchableOpacity>\r\n          ) : (\r\n            <TouchableOpacity onPress={handleEditPress}>\r\n              <EditIcon />\r\n            </TouchableOpacity>\r\n          )}\r\n        </View>\r\n        <TextInput\r\n          style={styles.searchInput}\r\n          placeholder=\"Поиск по клиентам\"\r\n          onChangeText={handleSearchChange}\r\n          value={searchQuery}\r\n        />\r\n        {isHistoryModalVisible && (\r\n          <ChangeHistoryModal\r\n            isVisible={isHistoryModalVisible}\r\n            onClose={() => setIsHistoryModalVisible(false)}\r\n          />\r\n        )}\r\n        <ScrollView horizontal overScrollMode=\"never\">\r\n          <SafeAreaView>\r\n            <FlatList\r\n              data={clients}\r\n              keyExtractor={(item) => String(item.id)}\r\n              renderItem={renderRow}\r\n              ListHeaderComponent={\r\n                <View style={styles.headerTable}>\r\n                  <View style={styles.headercheckboxTableCell}>\r\n                    <TouchableOpacity\r\n                      style={styles.checkboxTable}\r\n                      onPress={handleSelectAllClients}\r\n                    >\r\n                      {selectedClients.length === clients.length ? (\r\n                        <View style={styles.checkboxTableSelected} />\r\n                      ) : null}\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                  <Text style={styles.headerCell}>ФИО</Text>\r\n                  <Text style={styles.headerCell}>Телефон</Text>\r\n                  <Text style={styles.headerCell}>Адрес</Text>\r\n                </View>\r\n              }\r\n              ListFooterComponent={\r\n                <Pagination\r\n                  currentPage={currentPage}\r\n                  totalPages={totalPages}\r\n                  onPageChange={setCurrentPage}\r\n                />\r\n              }\r\n            />\r\n          </SafeAreaView>\r\n        </ScrollView>\r\n        <TouchableOpacity style={styles.addButton} onPress={handleButtonPress}>\r\n          <Text style={styles.addButtonText}>\r\n            {isEditing ? \"Применить изменения\" : \"Добавить клиента\"}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default ClientBaseScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}