{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ClientBaseScreen from \"./screens/ClientBaseScreen\";\nimport EmployeesScreen from \"./screens/EmployeesScreen\";\nimport InventoryScreen from \"./screens/InventoryScreen\";\nimport NotificationsScreen from \"./screens/NotificationsScreen\";\nimport TasksScreen from \"./screens/TasksScreen\";\nimport FeedScreen from \"./screens/FeedScreen\";\nimport FinanceScreen from \"./screens/FinanceScreen\";\nimport TaskDetailScreen from \"./screens/TaskDetailScreen\";\nimport TabIconLabel from \"./components/TabIconLabel\";\nimport styles from \"./styles/styles\";\nimport { TasksIcon, FeedIcon, FinanceIcon, ProfileIcon } from \"./icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar TabScreens = [{\n  name: 'Tasks',\n  component: TasksScreen,\n  IconComponent: TasksIcon,\n  label: 'Задачи'\n}, {\n  name: 'Feed',\n  component: FeedScreen,\n  IconComponent: FeedIcon,\n  label: 'Лента'\n}, {\n  name: 'Finance',\n  component: FinanceScreen,\n  IconComponent: FinanceIcon,\n  label: 'Доходы'\n}, {\n  name: 'Profile',\n  component: ProfileScreen,\n  IconComponent: ProfileIcon,\n  label: 'Профиль',\n  nestedScreens: [ClientBaseScreen, EmployeesScreen, InventoryScreen, NotificationsScreen]\n}];\nfunction ProfileStackScreen() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"ProfileScreen\",\n      component: ProfileScreen,\n      options: {\n        headerShown: false\n      }\n    }), TabScreens.find(function (screen) {\n      return screen.name === 'Profile';\n    }).nestedScreens.map(function (ScreenComponent, index) {\n      return _jsx(Stack.Screen, {\n        name: `Profile${ScreenComponent.name.replace('Screen', '')}`,\n        component: ScreenComponent,\n        options: {\n          headerShown: false\n        }\n      }, index);\n    })]\n  });\n}\nfunction TabNavigator() {\n  return _jsx(Tab.Navigator, {\n    initialRouteName: \"Tasks\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarActiveTintColor: styles.whiteColor.color,\n        tabBarInactiveTintColor: styles.darkGreyColor.color,\n        tabBarLabelStyle: styles.tabText,\n        tabBarStyle: styles.tabBar,\n        headerShown: false\n      };\n    },\n    children: TabScreens.map(function (_ref2) {\n      var name = _ref2.name,\n        component = _ref2.component,\n        IconComponent = _ref2.IconComponent,\n        label = _ref2.label,\n        nestedScreens = _ref2.nestedScreens;\n      return _jsx(Tab.Screen, {\n        name: name,\n        component: nestedScreens && name === 'Profile' ? ProfileStackScreen : component,\n        options: {\n          tabBarLabel: '',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var focused = _ref3.focused;\n            return _jsx(TabIconLabel, {\n              icon: _jsx(IconComponent, {\n                active: focused\n              }),\n              label: label,\n              focused: focused\n            });\n          }\n        }\n      }, name);\n    })\n  });\n}\nconsole.log(Stack);\nexport default function Navigation() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Tabs\",\n        component: TabNavigator,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"TaskDetail\",\n        component: TaskDetailScreen,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","createStackNavigator","createBottomTabNavigator","NavigationContainer","ProfileScreen","ClientBaseScreen","EmployeesScreen","InventoryScreen","NotificationsScreen","TasksScreen","FeedScreen","FinanceScreen","TaskDetailScreen","TabIconLabel","styles","TasksIcon","FeedIcon","FinanceIcon","ProfileIcon","jsx","_jsx","jsxs","_jsxs","Stack","Tab","TabScreens","name","component","IconComponent","label","nestedScreens","ProfileStackScreen","Navigator","children","Screen","options","headerShown","find","screen","map","ScreenComponent","index","replace","TabNavigator","initialRouteName","screenOptions","_ref","route","tabBarActiveTintColor","whiteColor","color","tabBarInactiveTintColor","darkGreyColor","tabBarLabelStyle","tabText","tabBarStyle","tabBar","_ref2","tabBarLabel","tabBarIcon","_ref3","focused","icon","active","console","log","Navigation"],"sources":["C:/Users/fred/Desktop/client/src/Navigation.js"],"sourcesContent":["import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\n\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport ClientBaseScreen from './screens/ClientBaseScreen';\r\nimport EmployeesScreen from './screens/EmployeesScreen';\r\nimport InventoryScreen from './screens/InventoryScreen';\r\nimport NotificationsScreen from './screens/NotificationsScreen';\r\nimport TasksScreen from './screens/TasksScreen';\r\nimport FeedScreen from './screens/FeedScreen';\r\nimport FinanceScreen from './screens/FinanceScreen';\r\nimport TaskDetailScreen from './screens/TaskDetailScreen';\r\n\r\nimport TabIconLabel from './components/TabIconLabel';\r\nimport styles from './styles/styles';\r\nimport { TasksIcon, FeedIcon, FinanceIcon, ProfileIcon } from './icons';\r\n\r\nconst Stack = createStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst TabScreens = [\r\n  { name: 'Tasks', component: TasksScreen, IconComponent: TasksIcon, label: 'Задачи' },\r\n  { name: 'Feed', component: FeedScreen, IconComponent: FeedIcon, label: 'Лента' },\r\n  { name: 'Finance', component: FinanceScreen, IconComponent: FinanceIcon, label: 'Доходы' },\r\n  { name: 'Profile', component: ProfileScreen, IconComponent: ProfileIcon, label: 'Профиль', nestedScreens: [ClientBaseScreen, EmployeesScreen, InventoryScreen, NotificationsScreen] }\r\n];\r\n\r\nfunction ProfileStackScreen() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"ProfileScreen\"\r\n        component={ProfileScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n      {TabScreens.find(screen => screen.name === 'Profile').nestedScreens.map((ScreenComponent, index) => (\r\n        <Stack.Screen\r\n          key={index}\r\n          name={`Profile${ScreenComponent.name.replace('Screen', '')}`}\r\n          component={ScreenComponent}\r\n          options={{ headerShown: false }}\r\n        />\r\n      ))}\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n\r\nfunction TabNavigator() {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"Tasks\"\r\n      screenOptions={({ route }) => ({\r\n        tabBarActiveTintColor: styles.whiteColor.color,\r\n        tabBarInactiveTintColor: styles.darkGreyColor.color,\r\n        tabBarLabelStyle: styles.tabText,\r\n        tabBarStyle: styles.tabBar,\r\n        headerShown: false\r\n      })}\r\n    >\r\n      {TabScreens.map(({ name, component, IconComponent, label, nestedScreens }) => (\r\n        <Tab.Screen\r\n          key={name}\r\n          name={name}\r\n          component={nestedScreens && name === 'Profile' ? ProfileStackScreen : component}\r\n          options={{\r\n            tabBarLabel: '',\r\n            tabBarIcon: ({ focused }) => <TabIconLabel icon={<IconComponent active={focused} />} label={label} focused={focused} />\r\n          }}\r\n        />\r\n      ))}\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nconsole.log(Stack);\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen name=\"Tabs\" component={TabNavigator} options={{ headerShown: false }} />\r\n        <Stack.Screen name=\"TaskDetail\" component={TaskDetailScreen} options={{ headerShown: false }} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}