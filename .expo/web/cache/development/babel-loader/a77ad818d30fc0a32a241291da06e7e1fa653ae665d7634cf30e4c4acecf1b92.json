{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useLayoutEffect, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { format, addMonths, startOfMonth, parseISO } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport styles from \"../styles/styles\";\nimport RenderMonth from \"./RenderMonth\";\nimport TasksForSelectedDateComponent from \"./TasksForSelectedDateComponent\";\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar screenHeight = Dimensions.get('window').height;\nvar VerticalCalendar = function VerticalCalendar(_ref) {\n  var tasks = _ref.tasks,\n    taskDates = _ref.taskDates,\n    renderAddButton = _ref.renderAddButton;\n  var flatListRef = useRef(null);\n  var _useState = useState(new Date()),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDate = _useState2[0],\n    setSelectedDate = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    modalVisible = _useState4[0],\n    setModalVisible = _useState4[1];\n  var _useState5 = useState(new Set()),\n    _useState6 = _slicedToArray(_useState5, 2),\n    expandedClients = _useState6[0],\n    setExpandedClients = _useState6[1];\n  var data = useMemo(function () {\n    return Array.from({\n      length: 5\n    }, function (_, i) {\n      return addMonths(startOfMonth(new Date()), i - 2);\n    });\n  }, []);\n  var tasksBySelectedDate = useMemo(function () {\n    return tasks.filter(function (task) {\n      return format(parseISO(task.start_date), 'yyyy-MM-dd') === format(selectedDate, 'yyyy-MM-dd');\n    }).reduce(function (acc, task) {\n      var client = task.fullname_client;\n      acc[client] = acc[client] || [];\n      acc[client].push(task);\n      return acc;\n    }, {});\n  }, [tasks, selectedDate]);\n  useLayoutEffect(function () {\n    var _flatListRef$current;\n    (_flatListRef$current = flatListRef.current) == null ? void 0 : _flatListRef$current.scrollToIndex({\n      index: 2,\n      animated: false\n    });\n  }, []);\n  var handleDatePress = function handleDatePress(day) {\n    setSelectedDate(day);\n    setModalVisible(true);\n  };\n  var handleToggleClient = function handleToggleClient(client) {\n    setExpandedClients(function (current) {\n      return new Set(current.has(client) ? current.delete(client) : current.add(client));\n    });\n  };\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(RenderMonth, {\n      date: item,\n      handleDatePress: handleDatePress,\n      taskDates: taskDates\n    });\n  };\n  var getItemLayout = function getItemLayout(_, index) {\n    return {\n      length: 400,\n      offset: 400 * index,\n      index: index\n    };\n  };\n  var keyExtractor = function keyExtractor(item, index) {\n    return `${format(item, 'yyyy-MM')}-${index}`;\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(FlatList, {\n      ref: flatListRef,\n      data: data,\n      initialNumToRender: 5,\n      maxToRenderPerBatch: 5,\n      windowSize: 5,\n      renderItem: renderItem,\n      keyExtractor: keyExtractor,\n      getItemLayout: getItemLayout,\n      onEndReachedThreshold: 0.5,\n      showsVerticalScrollIndicator: false,\n      removeClippedSubviews: true,\n      initialScrollIndex: 1\n    }), _jsxs(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      children: [_jsx(View, {\n        style: styles.container,\n        children: _jsxs(View, {\n          style: styles.contentContainer,\n          children: [_jsx(View, {\n            style: styles.taskHeader,\n            children: _jsx(Text, {\n              style: styles.modalText,\n              children: format(selectedDate, 'd-MMMM', {\n                locale: ru\n              })\n            })\n          }), _jsx(ScrollView, {\n            showsVerticalScrollIndicator: false,\n            style: styles.modalScrollView,\n            overScrollMode: \"never\",\n            children: _jsx(TasksForSelectedDateComponent, {\n              tasksByClient: tasksBySelectedDate,\n              expandedClients: expandedClients,\n              toggleClient: handleToggleClient\n            })\n          })]\n        })\n      }), !isClosing && renderAddButton()]\n    })]\n  });\n};\nVerticalCalendar.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  taskDates: PropTypes.object.isRequired,\n  renderAddButton: PropTypes.func.isRequired\n};\nexport default VerticalCalendar;","map":{"version":3,"names":["React","useState","useRef","useLayoutEffect","useMemo","View","Text","FlatList","Modal","Dimensions","ScrollView","format","addMonths","startOfMonth","parseISO","ru","styles","RenderMonth","TasksForSelectedDateComponent","PropTypes","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","screenHeight","get","height","VerticalCalendar","_ref","tasks","taskDates","renderAddButton","flatListRef","_useState","Date","_useState2","_slicedToArray","selectedDate","setSelectedDate","_useState3","_useState4","modalVisible","setModalVisible","_useState5","Set","_useState6","expandedClients","setExpandedClients","data","Array","from","length","_","i","tasksBySelectedDate","filter","task","start_date","reduce","acc","client","fullname_client","push","_flatListRef$current","current","scrollToIndex","index","animated","handleDatePress","day","handleToggleClient","has","delete","add","renderItem","_ref2","item","date","getItemLayout","offset","keyExtractor","children","ref","initialNumToRender","maxToRenderPerBatch","windowSize","onEndReachedThreshold","showsVerticalScrollIndicator","removeClippedSubviews","initialScrollIndex","animationType","transparent","visible","style","container","contentContainer","taskHeader","modalText","locale","modalScrollView","overScrollMode","tasksByClient","toggleClient","isClosing","propTypes","array","isRequired","object","func"],"sources":["C:/Users/fred/Desktop/client/src/components/VerticalCalendar.js"],"sourcesContent":["import React, { useState, useRef, useLayoutEffect, useMemo } from 'react';\r\nimport { View, Text, FlatList, Modal, Dimensions, ScrollView } from 'react-native';\r\nimport { format, addMonths, startOfMonth, parseISO } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\nimport styles from '../styles/styles';\r\nimport RenderMonth from './RenderMonth';\r\nimport TasksForSelectedDateComponent from './TasksForSelectedDateComponent';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\nconst VerticalCalendar = ({ tasks, taskDates, renderAddButton }) => {\r\n  const flatListRef = useRef(null);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [expandedClients, setExpandedClients] = useState(new Set());\r\n\r\n  const data = useMemo(() => Array.from({ length: 5 }, (_, i) => addMonths(startOfMonth(new Date()), i - 2)), []);\r\n  const tasksBySelectedDate = useMemo(() => {\r\n    return tasks.filter(task => format(parseISO(task.start_date), 'yyyy-MM-dd') === format(selectedDate, 'yyyy-MM-dd'))\r\n      .reduce((acc, task) => {\r\n        const client = task.fullname_client;\r\n        acc[client] = acc[client] || [];\r\n        acc[client].push(task);\r\n        return acc;\r\n      }, {});\r\n  }, [tasks, selectedDate]);\r\n\r\n  useLayoutEffect(() => {\r\n    flatListRef.current?.scrollToIndex({ index: 2, animated: false });\r\n  }, []);\r\n\r\n  const handleDatePress = day => {\r\n    setSelectedDate(day);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleToggleClient = client => {\r\n    setExpandedClients(current => new Set(current.has(client) ? current.delete(client) : current.add(client)));\r\n  };\r\n\r\n  const renderItem = ({ item }) => (\r\n    <RenderMonth date={item} handleDatePress={handleDatePress} taskDates={taskDates} />\r\n  );\r\n\r\n  const getItemLayout = (_, index) => ({\r\n    length: 400, offset: 400 * index, index\r\n  });\r\n\r\n  const keyExtractor = (item, index) => `${format(item, 'yyyy-MM')}-${index}`;\r\n\r\n  return (\r\n    <>\r\n      <FlatList\r\n        ref={flatListRef}\r\n        data={data}\r\n        initialNumToRender={5}\r\n        maxToRenderPerBatch={5}\r\n        windowSize={5}\r\n        renderItem={renderItem}\r\n        keyExtractor={keyExtractor}\r\n        getItemLayout={getItemLayout}\r\n        onEndReachedThreshold={0.5}\r\n        showsVerticalScrollIndicator={false}\r\n        removeClippedSubviews={true}\r\n        initialScrollIndex={1}\r\n      />\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n      >\r\n        <View style={styles.container}>\r\n          <View style={styles.contentContainer}>\r\n            <View style={styles.taskHeader}>\r\n              <Text style={styles.modalText}>{format(selectedDate, 'd-MMMM', { locale: ru })}</Text>\r\n            </View>\r\n            <ScrollView showsVerticalScrollIndicator={false} style={styles.modalScrollView} overScrollMode=\"never\">\r\n              <TasksForSelectedDateComponent\r\n                tasksByClient={tasksBySelectedDate}\r\n                expandedClients={expandedClients}\r\n                toggleClient={handleToggleClient}\r\n              />\r\n            </ScrollView>\r\n          </View>\r\n        </View>\r\n        {!isClosing && renderAddButton()}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nVerticalCalendar.propTypes = {\r\n  tasks: PropTypes.array.isRequired,\r\n  taskDates: PropTypes.object.isRequired,\r\n  renderAddButton: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default VerticalCalendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}