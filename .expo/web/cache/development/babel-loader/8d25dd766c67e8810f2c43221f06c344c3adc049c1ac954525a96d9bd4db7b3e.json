{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\fred\\\\Desktop\\\\client\\\\src\\\\components\\\\TaskForm.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nimport React, { useState, useCallback, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport styles from '../styles/styles';\nimport DateInput from './DateInput';\nimport DropdownEmployee from './DropdownEmployee';\nimport DropdownService from './DropdownService';\nimport DropdownItem from './DropdownItem';\nimport DropdownClient from './DropdownClient';\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\nimport { BackIcon, DeleteIcon } from '../icons';\nimport { format } from 'date-fns';\nimport DropdownWithSearch from './DropdownWithSearch';\nimport axios from 'axios';\nimport { fetchServiceNamesByIds, fetchTaskParticipants } from '../utils/tasks';\nimport { handleSaveTask, updateDraft } from '../utils/taskScreenHelpers';\nimport * as ImagePicker from 'expo-image-picker';\nfunction TaskForm(_ref) {\n  var _this = this;\n  var formData = _ref.formData,\n    dispatchFormData = _ref.dispatchFormData,\n    onClose = _ref.onClose,\n    draftData = _ref.draftData;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedService = _useState2[0],\n    setSelectedService = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedEmployee = _useState4[0],\n    setSelectedEmployee = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    service = _useState6[0],\n    setServices = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    employees = _useState8[0],\n    setEmployees = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    clients = _useState10[0],\n    setClients = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    inventoryItems = _useState12[0],\n    setInventoryItems = _useState12[1];\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    selectedInventory = _useState14[0],\n    setSelectedInventory = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    preselectedInventory = _useState16[0],\n    setPreselectedInventory = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    selectedClient = _useState18[0],\n    setSelectedClient = _useState18[1];\n  var _useState19 = useState([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    selectedImages = _useState20[0],\n    setSelectedImages = _useState20[1];\n  var _useState21 = useState(0),\n    _useState22 = _slicedToArray(_useState21, 2),\n    currentImageIndex = _useState22[0],\n    setCurrentImageIndex = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    fullScreenImageModalVisible = _useState24[0],\n    setFullScreenImageModalVisible = _useState24[1];\n  var _useState25 = useState(null),\n    _useState26 = _slicedToArray(_useState25, 2),\n    currentImage = _useState26[0],\n    setCurrentImage = _useState26[1];\n  var _useState27 = useState(false),\n    _useState28 = _slicedToArray(_useState27, 2),\n    isFormInitialized = _useState28[0],\n    setIsFormInitialized = _useState28[1];\n  var _useState29 = useState(false),\n    _useState30 = _slicedToArray(_useState29, 2),\n    isNewClientAdded = _useState30[0],\n    setIsNewClientAdded = _useState30[1];\n  var _useState31 = useState(false),\n    _useState32 = _slicedToArray(_useState31, 2),\n    isAddingNewClient = _useState32[0],\n    setIsAddingNewClient = _useState32[1];\n  var _useState33 = useState(false),\n    _useState34 = _slicedToArray(_useState33, 2),\n    isClientFromDraft = _useState34[0],\n    setIsClientFromDraft = _useState34[1];\n  var _useState35 = useState(false),\n    _useState36 = _slicedToArray(_useState35, 2),\n    isDeleteConfirmationVisible = _useState36[0],\n    setDeleteConfirmationVisible = _useState36[1];\n  var _useState37 = useState({\n      city: '',\n      street: '',\n      house: '',\n      entrance: '',\n      floor: ''\n    }),\n    _useState38 = _slicedToArray(_useState37, 2),\n    address = _useState38[0],\n    setAddress = _useState38[1];\n  var resetForm = function resetForm() {\n    setIsNewClientAdded(false);\n    setSelectedClient(null);\n    setAddress({\n      city: '',\n      street: '',\n      house: '',\n      entrance: '',\n      floor: ''\n    });\n    setField('phoneClient', '');\n  };\n  var handleOpenAddClientForm = function handleOpenAddClientForm() {\n    setIsAddingNewClient(true);\n    resetForm();\n  };\n  var renderClientButton = function renderClientButton() {\n    if (isClientFromDraft || selectedClient && !isAddingNewClient) {\n      return React.createElement(TouchableOpacity, {\n        onPress: handleUpdateClient,\n        style: styles.buttonClose,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\"));\n    } else if (isAddingNewClient) {\n      return React.createElement(TouchableOpacity, {\n        onPress: handleAddClient,\n        style: styles.buttonClose,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\"));\n    } else {\n      return React.createElement(TouchableOpacity, {\n        onPress: handleOpenAddClientForm,\n        style: styles.buttonClose,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.textStyle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\"));\n    }\n  };\n  var fetchClients = useCallback(_asyncToGenerator(function* () {\n    try {\n      var response = yield axios.get(`http://31.129.101.174/clients`);\n      setClients(response.data);\n    } catch (error) {\n      console.error('Ошибка при получении списка клиентов:', error);\n    }\n  }), []);\n  useEffect(function () {\n    fetchClients();\n  }, [fetchClients]);\n  var fetchInventoryItems = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch('http://31.129.101.174/inventory');\n        var data = yield response.json();\n        setInventoryItems(data);\n      } catch (error) {\n        console.error('Ошибка при получении инвентаря:', error);\n      }\n    });\n    return function fetchInventoryItems() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchInventoryItems();\n  }, []);\n  var handleInventoryChange = function handleInventoryChange(newSelectedInventory) {\n    setSelectedInventory(newSelectedInventory);\n    var selectedInventoryData = newSelectedInventory.map(function (item) {\n      return {\n        id: item.id,\n        quantity: item.quantity\n      };\n    });\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        selectedInventory: selectedInventoryData\n      }\n    });\n  };\n  var fetchSelectedInventory = function () {\n    var _ref4 = _asyncToGenerator(function* (taskId) {\n      try {\n        var response = yield axios.get(`http://31.129.101.174/tasks/${taskId}/selected-inventory`);\n        return response.data;\n      } catch (error) {\n        console.error('Ошибка при получении выбранного инвентаря:', error);\n        return [];\n      }\n    });\n    return function fetchSelectedInventory(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    var loadData = function () {\n      var _ref5 = _asyncToGenerator(function* () {\n        if (draftData && draftData.id) {\n          var selectedInventoryData = yield fetchSelectedInventory(draftData.id);\n          setPreselectedInventory(selectedInventoryData);\n        }\n      });\n      return function loadData() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    loadData();\n  }, [draftData]);\n  var fetchServices = useCallback(_asyncToGenerator(function* () {\n    try {\n      var response = yield fetch('http://31.129.101.174/services');\n      var data = yield response.json();\n      setServices(data);\n    } catch (error) {\n      console.error('Ошибка при получении инвентаря:', error);\n    }\n  }), []);\n  var fetchEmployees = useCallback(function () {\n    var _ref7 = _asyncToGenerator(function* (taskId) {\n      try {\n        var participantData = yield fetchTaskParticipants(taskId);\n        if (Array.isArray(participantData)) {\n          setEmployees(participantData);\n          var participantIds = participantData.map(function (p) {\n            return p.id;\n          });\n          setSelectedEmployee(participantIds);\n        } else {\n          console.error('Полученные данные не являются массивом:', participantData);\n        }\n      } catch (error) {\n        console.error('Ошибка при получении данных сотрудников:', error);\n      }\n    });\n    return function (_x2) {\n      return _ref7.apply(this, arguments);\n    };\n  }(), []);\n  useEffect(function () {\n    fetchServices();\n    if (draftData && !isFormInitialized) {\n      fetchEmployees(draftData.id);\n    }\n  }, [fetchServices, draftData, isFormInitialized, fetchEmployees]);\n  useEffect(function () {\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        selectedService: selectedService\n      }\n    });\n  }, [selectedService, dispatchFormData]);\n  useEffect(function () {\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        selectedEmployee: selectedEmployee\n      }\n    });\n  }, [selectedEmployee, dispatchFormData]);\n  useEffect(function () {\n    if (draftData && !isFormInitialized) {\n      _asyncToGenerator(function* () {\n        var serviceNames = yield fetchServiceNamesByIds(draftData.service);\n        if (!serviceNames.noServices) {\n          var serviceIds = Object.keys(serviceNames).map(Number);\n          setSelectedService(serviceIds);\n        }\n        var employeeData = yield fetchTaskParticipants(draftData.id);\n        if (employeeData && Array.isArray(employeeData)) {\n          var employeeIds = employeeData.map(function (employee) {\n            return employee.id;\n          });\n          setSelectedEmployee(employeeIds);\n        }\n        var formatTimeString = function formatTimeString(timeString) {\n          return timeString ? new Date('1970-01-01T' + timeString + 'Z') : null;\n        };\n        var formattedDraftData = _objectSpread(_objectSpread({}, draftData), {}, {\n          cost: draftData.cost ? draftData.cost.toString() : '',\n          description: draftData.description || '',\n          startDate: draftData.start_date ? new Date(draftData.start_date) : null,\n          endDate: draftData.end_date ? new Date(draftData.end_date) : null,\n          startDateTime: formatTimeString(draftData.start_time),\n          endDateTime: formatTimeString(draftData.end_time),\n          paymentMethod: draftData.payment || '',\n          fullnameClient: draftData.fullname_client || '',\n          phone: draftData.phone || '',\n          selectedResponsible: draftData.responsible || '',\n          addressClient: draftData.address_client || ''\n        });\n        if (formattedDraftData.fullnameClient) {\n          var client = clients.find(function (c) {\n            return c.full_name === formattedDraftData.fullnameClient;\n          });\n          if (client) {\n            setSelectedClient(client);\n            setIsClientFromDraft(true);\n          }\n        }\n        setIsFormInitialized(true);\n        if (JSON.stringify(formData) !== JSON.stringify(formattedDraftData)) {\n          dispatchFormData({\n            type: 'SET_FORM',\n            payload: formattedDraftData\n          });\n        }\n      })();\n    }\n  }, [draftData, formData, dispatchFormData, isFormInitialized, fetchServiceNamesByIds, fetchTaskParticipants, clients]);\n  useEffect(function () {\n    if (selectedClient) {\n      var addressRegex = /город\\s([^,]+), улица\\s([^,]+), дом\\s([^,]+), подъезд\\s([^,]+), этаж\\s([^,]+)/;\n      var addressMatch = selectedClient.address.match(addressRegex);\n      if (addressMatch) {\n        setAddress({\n          city: addressMatch[1] || '',\n          street: addressMatch[2] || '',\n          house: addressMatch[3] || '',\n          entrance: addressMatch[4] || '',\n          floor: addressMatch[5] || ''\n        });\n        setField('phoneClient', selectedClient.phone_number || '');\n        setIsNewClientAdded(true);\n      }\n    } else {\n      setAddress({\n        city: '',\n        street: '',\n        house: '',\n        entrance: '',\n        floor: ''\n      });\n      setField('phoneClient', '');\n      setIsNewClientAdded(false);\n    }\n  }, [selectedClient]);\n  useEffect(function () {\n    if (draftData) {\n      Object.entries(draftData).forEach(function (_ref9) {\n        var _ref10 = _slicedToArray(_ref9, 2),\n          key = _ref10[0],\n          value = _ref10[1];\n        dispatchFormData({\n          type: 'UPDATE_FORM',\n          payload: _defineProperty({}, key, value)\n        });\n      });\n    }\n  }, [draftData, dispatchFormData]);\n  useEffect(function () {\n    var totalCost = 0;\n    selectedService.forEach(function (serviceId) {\n      var serviceItem = service.find(function (s) {\n        return s.id === serviceId;\n      });\n      if (serviceItem) {\n        totalCost += parseInt(serviceItem.cost, 10);\n      }\n    });\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        cost: totalCost.toString()\n      }\n    });\n  }, [selectedService, service, dispatchFormData]);\n  var updateTotalCost = useCallback(function (selectedItems) {\n    var totalCost = 0;\n    selectedItems.forEach(function (item) {\n      var serviceItem = service.find(function (s) {\n        return s.id === item.id;\n      });\n      if (serviceItem) {\n        totalCost += parseInt(serviceItem.cost, 10);\n      }\n    });\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        cost: totalCost.toString()\n      }\n    });\n  }, [service, dispatchFormData]);\n  var handleSave = useCallback(_asyncToGenerator(function* () {\n    var updatedFormData = _objectSpread({}, formData);\n    if (!updatedFormData.startDate) {\n      var today = new Date();\n      updatedFormData.startDate = format(today, 'yyyy-MM-dd');\n    }\n    updatedFormData.status = 'черновик';\n    try {\n      var isUpdating = draftData && draftData.id;\n      if (isUpdating) {\n        yield updateDraft(draftData.id, updatedFormData);\n      } else {\n        yield handleSaveTask(updatedFormData);\n      }\n    } catch (error) {\n      console.error('Ошибка сохранения задачи', error);\n    }\n  }), [formData, draftData, handleSaveTask]);\n  var handleAddClient = function () {\n    var _ref12 = _asyncToGenerator(function* () {\n      var clientData = {\n        full_name: formData.fullnameClient,\n        phone_number: formData.phoneClient,\n        address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`\n      };\n      try {\n        var response = yield axios.post(`http://31.129.101.174/clients`, clientData);\n        alert('Клиент успешно добавлен');\n        setClients([].concat(_toConsumableArray(clients), [clientData]));\n        setSelectedClient(clientData);\n        setIsAddingNewClient(false);\n      } catch (error) {\n        console.error('Ошибка при добавлении клиента:', error);\n      }\n    });\n    return function handleAddClient() {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (selectedClient && !isNewClientAdded) {\n      var updatedClientData = _objectSpread(_objectSpread({}, selectedClient), {}, {\n        address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`,\n        phone_number: formData.phoneClient\n      });\n      setClients(function (prevClients) {\n        return prevClients.map(function (client) {\n          return client.id === selectedClient.id ? updatedClientData : client;\n        });\n      });\n      setIsNewClientAdded(true);\n    }\n  }, [selectedClient, address, formData.phoneClient]);\n  var handleUpdateClient = function () {\n    var _ref13 = _asyncToGenerator(function* () {\n      var city = address.city,\n        street = address.street,\n        house = address.house,\n        entrance = address.entrance,\n        floor = address.floor;\n      var fullAddress = `город ${city}, улица ${street}, дом ${house}, подъезд ${entrance}, этаж ${floor}`;\n      setField('addressClient', fullAddress);\n      if (!selectedClient) {\n        alert('Клиент не выбран.');\n        return;\n      }\n      var updatedClientData = {\n        full_name: formData.fullnameClient,\n        phone_number: formData.phoneClient,\n        address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`\n      };\n      try {\n        yield axios.put(`http://31.129.101.174/clients/${selectedClient.id}`, updatedClientData);\n        alert('Данные клиента обновлены');\n        var updatedClients = clients.map(function (client) {\n          return client.id === selectedClient.id ? _objectSpread(_objectSpread({}, client), updatedClientData) : client;\n        });\n        setClients(updatedClients);\n      } catch (error) {\n        console.error('Ошибка при обновлении данных клиента:', error);\n      }\n    });\n    return function handleUpdateClient() {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n  var handleAutoUpdateClient = function () {\n    var _ref14 = _asyncToGenerator(function* () {\n      var city = address.city,\n        street = address.street,\n        house = address.house,\n        entrance = address.entrance,\n        floor = address.floor;\n      var fullAddress = `город ${city}, улица ${street}, дом ${house}, подъезд ${entrance}, этаж ${floor}`;\n      setField('addressClient', fullAddress);\n      if (!selectedClient) {\n        alert('Клиент не выбран.');\n        return;\n      }\n      var updatedClientData = {\n        full_name: formData.fullnameClient,\n        phone_number: formData.phoneClient,\n        address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`\n      };\n      try {\n        var updatedClients = clients.map(function (client) {\n          return client.id === selectedClient.id ? _objectSpread(_objectSpread({}, client), updatedClientData) : client;\n        });\n        setClients(updatedClients);\n      } catch (error) {\n        console.error('Ошибка при выборе клиента:', error);\n      }\n    });\n    return function handleAutoUpdateClient() {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n  var openFullScreenImage = function openFullScreenImage(index) {\n    setCurrentImageIndex(index);\n    setFullScreenImageModalVisible(true);\n  };\n  var showNextImage = function showNextImage() {\n    if (currentImageIndex < selectedImages.length - 1) {\n      setCurrentImageIndex(currentImageIndex + 1);\n    }\n  };\n  var showPreviousImage = function showPreviousImage() {\n    if (currentImageIndex > 0) {\n      setCurrentImageIndex(currentImageIndex - 1);\n    }\n  };\n  var FullScreenImageModal = function FullScreenImageModal(_ref15) {\n    var _selectedImages$curre;\n    var isVisible = _ref15.isVisible,\n      onClose = _ref15.onClose;\n    var imageUri = (_selectedImages$curre = selectedImages[currentImageIndex]) == null ? void 0 : _selectedImages$curre.uri;\n    return React.createElement(Modal, {\n      visible: isVisible,\n      transparent: false,\n      animationType: \"fade\",\n      onRequestClose: onClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: 'black',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 17\n      }\n    }, imageUri && React.createElement(Image, {\n      source: {\n        uri: imageUri\n      },\n      style: {\n        width: '100%',\n        height: '100%',\n        resizeMode: 'contain'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 25\n      }\n    }), React.createElement(TouchableOpacity, {\n      style: {\n        position: 'absolute',\n        top: 40,\n        right: 20\n      },\n      onPress: onClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 30\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 25\n      }\n    }, \"\\xD7\")), currentImageIndex > 0 && React.createElement(TouchableOpacity, {\n      style: {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: '50%',\n        justifyContent: 'center'\n      },\n      onPress: showPreviousImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 42,\n        textAlign: 'left',\n        marginLeft: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 29\n      }\n    }, \"\\u2039\")), currentImageIndex < selectedImages.length - 1 && React.createElement(TouchableOpacity, {\n      style: {\n        position: 'absolute',\n        right: 0,\n        top: 0,\n        bottom: 0,\n        left: '50%',\n        justifyContent: 'center'\n      },\n      onPress: showNextImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 42,\n        textAlign: 'right',\n        marginRight: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 29\n      }\n    }, \"\\u203A\"))));\n  };\n  var handleRemoveImage = function handleRemoveImage(index) {\n    setSelectedImages(function (currentImages) {\n      var updatedImages = currentImages.filter(function (_, i) {\n        return i !== index;\n      });\n      dispatchFormData({\n        type: 'UPDATE_FORM',\n        payload: {\n          selectedImages: updatedImages.map(function (img) {\n            return img.uri;\n          })\n        }\n      });\n      return updatedImages;\n    });\n  };\n  var handleChoosePhoto = function () {\n    var _ref16 = _asyncToGenerator(function* () {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (!permissionResult.granted) {\n        Alert.alert('Уведомление', 'Необходим доступ к фотографиям для загрузки в отчет');\n        return;\n      }\n      try {\n        var pickerResult = yield ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.Images,\n          allowsMultipleSelection: true,\n          quality: 1\n        });\n        if (!pickerResult.canceled) {\n          var newImages = pickerResult.assets || [];\n          setSelectedImages(function (prevImages) {\n            return [].concat(_toConsumableArray(prevImages), _toConsumableArray(newImages));\n          });\n          dispatchFormData({\n            type: 'UPDATE_FORM',\n            payload: {\n              selectedImages: [].concat(_toConsumableArray(formData.selectedImages), _toConsumableArray(newImages.map(function (img) {\n                return img.uri;\n              })))\n            }\n          });\n        }\n      } catch (error) {\n        Alert.alert('Ошибка', 'Произошла ошибка при выборе фотографий');\n      }\n    });\n    return function handleChoosePhoto() {\n      return _ref16.apply(this, arguments);\n    };\n  }();\n  var uploadImages = function () {\n    var _ref17 = _asyncToGenerator(function* () {\n      if (selectedImages.length === 0) {\n        Alert.alert('Уведомление', 'Пожалуйста, выберите фотографии для загрузки');\n        return;\n      }\n      var formData = new FormData();\n      selectedImages.forEach(function (image, index) {\n        formData.append('photos', {\n          name: `photo_${index}.jpg`,\n          type: 'image/jpeg',\n          uri: Platform.OS === 'android' ? image.uri : image.uri.replace('file://', '')\n        });\n      });\n      try {\n        var taskId = task.id;\n        var response = yield fetch(`http://31.129.101.174/tasks/${taskId}/photos`, {\n          method: 'POST',\n          body: formData,\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (!response.ok) throw new Error('Сетевая ошибка при загрузке изображений');\n        setSelectedImages([]);\n      } catch (error) {\n        Alert.alert('Ошибка', 'Произошла ошибка при загрузке фотографий');\n      }\n    });\n    return function uploadImages() {\n      return _ref17.apply(this, arguments);\n    };\n  }();\n  var ImagePreview = function ImagePreview(_ref18) {\n    var images = _ref18.images,\n      onRemovePress = _ref18.onRemovePress;\n    return React.createElement(ScrollView, {\n      horizontal: true,\n      style: styles.imagePreviewContainer,\n      showsHorizontalScrollIndicator: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 9\n      }\n    }, images.map(function (image, index) {\n      return React.createElement(View, {\n        key: index,\n        style: styles.imageContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return openFullScreenImage(index);\n        },\n        style: styles.imagePreview,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: image.uri\n        },\n        style: styles.image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 25\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.removeIconContainer,\n        onPress: function onPress() {\n          return onRemovePress(index);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.removeIcon,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 29\n        }\n      }, \"\\xD7\"))));\n    }), React.createElement(TouchableOpacity, {\n      onPress: handleChoosePhoto,\n      style: styles.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.photoPickerContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: styles.photoPickerPlusIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 21\n      }\n    }, \"+\"))));\n  };\n  var processServerImages = function processServerImages(serverImages) {\n    return serverImages.map(function (img) {\n      return {\n        uri: `http://31.129.101.174${img.photo_url}`,\n        width: null,\n        height: null,\n        type: 'image'\n      };\n    });\n  };\n  var fetchTaskImages = function () {\n    var _ref19 = _asyncToGenerator(function* (taskId) {\n      try {\n        var response = yield axios.get(`http://31.129.101.174/tasks/${taskId}/photos`);\n        if (response.data && Array.isArray(response.data)) {\n          var serverImages = processServerImages(response.data);\n          setSelectedImages(function (prevImages) {\n            return [].concat(_toConsumableArray(prevImages), _toConsumableArray(serverImages));\n          });\n        }\n      } catch (error) {\n        console.error('Ошибка при загрузке изображений задачи:', error);\n      }\n    });\n    return function fetchTaskImages(_x3) {\n      return _ref19.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (draftData && draftData.id) {\n      fetchTaskImages(draftData.id);\n    }\n  }, [draftData]);\n  var handleAddressChange = useCallback(function (field, value) {\n    setAddress(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, field, value));\n    });\n  }, []);\n  var handleCostChange = useCallback(function (text) {\n    var newText = text.replace(/^0+/, '');\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        cost: newText\n      }\n    });\n  }, [dispatchFormData]);\n  useEffect(function () {\n    var backHandler = BackHandler.addEventListener('hardwareBackPress', function () {\n      Alert.alert(\"Сохранить как черновик?\", \"Вы хотите сохранить эту задачу как черновик?\", [{\n        text: \"Нет\",\n        onPress: onClose,\n        style: \"cancel\"\n      }, {\n        text: \"Сохранить\",\n        onPress: function onPress() {\n          handleSave();\n          onClose;\n        }\n      }], {\n        cancelable: false\n      });\n      return true;\n    });\n    return function () {\n      return backHandler.remove();\n    };\n  }, [formData, onClose, handleSave]);\n  var handleBackPress = function handleBackPress() {\n    if (formData.status === 'отсутствует') {\n      Alert.alert(\"Сохранить как черновик?\", \"Вы хотите сохранить эту задачу как черновик?\", [{\n        text: \"Нет\",\n        onPress: onClose,\n        style: \"cancel\"\n      }, {\n        text: \"Сохранить\",\n        onPress: function onPress() {\n          handleSave();\n          onClose();\n        }\n      }], {\n        cancelable: false\n      });\n    } else {\n      Alert.alert(\"Отменить редактирование?\", \"Вы хотите отменить редактирование?\", [{\n        text: \"Да\",\n        onPress: onClose,\n        style: \"cancel\"\n      }, {\n        text: \"Нет\"\n      }], {\n        cancelable: false\n      });\n    }\n    return true;\n  };\n  var handleDelete = useCallback(_asyncToGenerator(function* () {\n    dispatchFormData({\n      type: 'RESET_FORM'\n    });\n  }), [dispatchFormData]);\n  var deleteTask = function () {\n    var _ref21 = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.delete(`http://31.129.101.174/tasks/${formData.id}`);\n        if (response.status === 200) {\n          dispatchFormData({\n            type: 'RESET_FORM'\n          });\n          onClose();\n        }\n      } catch (error) {\n        console.error('Ошибка при удалении задачи:', error);\n      }\n    });\n    return function deleteTask() {\n      return _ref21.apply(this, arguments);\n    };\n  }();\n  var handleDeletePress = function handleDeletePress() {\n    if (formData.status && formData.status !== \"отсутствует\") {\n      setDeleteConfirmationVisible(true);\n    } else {\n      dispatchFormData({\n        type: 'RESET_FORM'\n      });\n      onClose();\n    }\n  };\n  var showDeleteConfirmationAlert = function showDeleteConfirmationAlert() {\n    Alert.alert(\"Подтвердите удаление\", \"Вы уверены, что хотите удалить эту задачу?\", [{\n      text: \"Нет\",\n      onPress: function onPress() {\n        return setDeleteConfirmationVisible(false);\n      },\n      style: \"cancel\"\n    }, {\n      text: \"Да\",\n      onPress: deleteTask\n    }]);\n  };\n  useEffect(function () {\n    if (isDeleteConfirmationVisible) {\n      showDeleteConfirmationAlert();\n    }\n  }, [isDeleteConfirmationVisible]);\n  var setField = useCallback(function (field, value) {\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: _defineProperty({}, field, value)\n    });\n  }, [dispatchFormData]);\n  var handleChange = useCallback(function (field) {\n    return function (value) {\n      setField(field, value);\n      if (field === 'fullnameClient') {\n        var client = clients.find(function (client) {\n          return client.full_name === value;\n        });\n        if (client) {\n          setSelectedClient(client);\n          setField('addressClient', client.address || '');\n          setField('phoneClient', client.phone_number || '');\n        }\n      }\n    };\n  }, [setField, clients]);\n  var toggleStartPicker = useCallback(function () {\n    setField('isStartPickerVisible', !formData.isStartPickerVisible);\n  }, [formData.isStartPickerVisible, setField]);\n  var toggleEndPicker = useCallback(function () {\n    setField('isEndPickerVisible', !formData.isEndPickerVisible);\n  }, [formData.isEndPickerVisible, setField]);\n  var handleStartPicked = useCallback(function (date) {\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        startDateTime: date\n      }\n    });\n    toggleStartPicker();\n  }, [toggleStartPicker, dispatchFormData]);\n  var handleEndPicked = useCallback(function (date) {\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        endDateTime: date\n      }\n    });\n    toggleEndPicker();\n  }, [toggleEndPicker, dispatchFormData]);\n  var handleServiceChange = useCallback(function (newSelectedServiceIds) {\n    setSelectedService(newSelectedServiceIds);\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        selectedService: newSelectedServiceIds\n      }\n    });\n  }, [dispatchFormData]);\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.contentContainerTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 13\n    }\n  }, React.createElement(FullScreenImageModal, {\n    isVisible: fullScreenImageModalVisible,\n    imageUri: currentImage,\n    onClose: function onClose() {\n      return setFullScreenImageModalVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.taskHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleBackPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 21\n    }\n  }, React.createElement(BackIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 25\n    }\n  })), React.createElement(Text, {\n    style: [styles.titleMedium, {\n      flex: 1,\n      textAlign: 'center'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 21\n    }\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"), React.createElement(TouchableOpacity, {\n    onPress: handleDeletePress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 21\n    }\n  }, React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 25\n    }\n  }))), React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    overScrollMode: \"never\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: [styles.contentContainer, {\n      backgroundColor: \"#f9f9f9\",\n      borderRadius: 24,\n      marginBottom: 24\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 21\n    }\n  }, tryRender(function () {\n    return React.createElement(React.Fragment, null, React.createElement(Text, {\n      style: [styles.headlineMedium, {\n        marginBottom: 24\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 33\n      }\n    }, \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"));\n  }), tryRender(function () {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 29\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        marginBottom: 24\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 37\n      }\n    }, \"\\u0421\\u043F\\u043E\\u0441\\u043E\\u0431 \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B\"), React.createElement(DropdownService, {\n      options: service,\n      selectedValues: selectedService,\n      onValueChange: handleServiceChange,\n      updateTotalCost: updateTotalCost,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 37\n      }\n    })), React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        marginBottom: 24\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 33\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 37\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 41\n      }\n    }, \"\\u0421\\u043F\\u043E\\u0441\\u043E\\u0431 \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B\"), React.createElement(DropdownWithSearch, {\n      options: formData.paymentMethodOptions,\n      selectedValue: formData.paymentMethod,\n      onValueChange: handleChange('paymentMethod'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 41\n      }\n    })), React.createElement(View, {\n      style: {\n        flex: 1,\n        marginLeft: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 37\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 41\n      }\n    }, \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\"), React.createElement(TextInput, {\n      style: styles.costInput,\n      placeholder: \"1000\",\n      value: formData.cost.toString(),\n      onChangeText: handleCostChange,\n      keyboardType: \"numeric\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 41\n      }\n    }))));\n  }), tryRender(function () {\n    return React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        marginBottom: 24\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 29\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        marginRight: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 37\n      }\n    }, \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430\"), React.createElement(DateInput, {\n      date: formData.startDate,\n      placeholder: \"\\u0413\\u0413\\u0413\\u0413-\\u041C\\u041C-\\u0414\\u0414\",\n      onDateChange: function onDateChange(dateType, selectedDate) {\n        return dispatchFormData({\n          type: 'UPDATE_FORM',\n          payload: _defineProperty({}, dateType, selectedDate)\n        });\n      },\n      dateType: \"startDate\",\n      minDate: new Date(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 37\n      }\n    })), React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 37\n      }\n    }, \"\\u041A\\u043E\\u043D\\u0435\\u0447\\u043D\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430\"), React.createElement(DateInput, {\n      date: formData.endDate,\n      placeholder: \"\\u0413\\u0413\\u0413\\u0413-\\u041C\\u041C-\\u0414\\u0414\",\n      onDateChange: function onDateChange(dateType, selectedDate) {\n        return dispatchFormData({\n          type: 'UPDATE_FORM',\n          payload: _defineProperty({}, dateType, selectedDate)\n        });\n      },\n      dateType: \"endDate\",\n      minDate: new Date(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 37\n      }\n    })));\n  }), tryRender(function () {\n    return React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 29\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1,\n        marginRight: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 37\n      }\n    }, \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\"), React.createElement(TouchableOpacity, {\n      onPress: toggleStartPicker,\n      style: styles.dateInputContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 37\n      }\n    }, React.createElement(TextInput, {\n      value: formData.startDateTime ? format(formData.startDateTime, 'HH:mm') : '',\n      placeholder: \"HH:mm\",\n      editable: false,\n      style: styles.selectedItemText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 41\n      }\n    }))), React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 37\n      }\n    }, \"\\u041A\\u043E\\u043D\\u0435\\u0446 \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\"), React.createElement(TouchableOpacity, {\n      onPress: toggleEndPicker,\n      style: styles.dateInputContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 37\n      }\n    }, React.createElement(TextInput, {\n      value: formData.endDateTime ? format(formData.endDateTime, 'HH:mm') : '',\n      placeholder: \"HH:mm\",\n      editable: false,\n      style: styles.selectedItemText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 41\n      }\n    }))));\n  }), React.createElement(DateTimePickerModal, {\n    isVisible: formData.isStartPickerVisible,\n    mode: \"time\",\n    onConfirm: handleStartPicked,\n    onCancel: toggleStartPicker,\n    is24Hour: true,\n    date: formData.startDateTime || new Date(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 25\n    }\n  }), React.createElement(DateTimePickerModal, {\n    isVisible: formData.isEndPickerVisible,\n    mode: \"time\",\n    onConfirm: handleEndPicked,\n    onCancel: toggleEndPicker,\n    is24Hour: true,\n    date: formData.endDateTime || new Date(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: [styles.contentContainer, {\n      backgroundColor: \"#f9f9f9\",\n      borderRadius: 24,\n      marginBottom: 24\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 21\n    }\n  }, tryRender(function () {\n    return React.createElement(React.Fragment, null, React.createElement(Text, {\n      style: [styles.headlineMedium, {\n        marginBottom: 24\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 33\n      }\n    }, \"\\u041A\\u043E\\u043C\\u0430\\u043D\\u0434\\u0430\"), React.createElement(View, {\n      style: {\n        marginBottom: 24\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 909,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 37\n      }\n    }, \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439\"), React.createElement(DropdownWithSearch, {\n      options: formData.responsibleOptions,\n      selectedValue: formData.selectedResponsible,\n      onValueChange: handleChange('selectedResponsible'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911,\n        columnNumber: 37\n      }\n    })), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 37\n      }\n    }, \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0438\"), React.createElement(DropdownEmployee, {\n      options: formData.employeesOptions,\n      selectedValues: selectedEmployee,\n      onValueChange: setSelectedEmployee,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 37\n      }\n    })));\n  })), React.createElement(View, {\n    style: [styles.contentContainer, {\n      backgroundColor: \"#f9f9f9\",\n      borderRadius: 24,\n      marginBottom: 24\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 21\n    }\n  }, tryRender(function () {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: [styles.headlineMedium, {\n        marginBottom: 24\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 33\n      }\n    }, \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\"), React.createElement(View, {\n      style: {\n        marginBottom: 24\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 37\n      }\n    }, \"\\u0424\\u0418\\u041E \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\"), React.createElement(DropdownClient, {\n      options: formData.fullnameClientOptions,\n      selectedValue: formData.fullnameClient,\n      disabled: isAddingNewClient,\n      onValueChange: function onValueChange(value) {\n        handleChange('fullnameClient')(value);\n        setAddress(function (prevAddress) {\n          return _objectSpread(_objectSpread({}, prevAddress), {}, {\n            city: '',\n            street: '',\n            house: '',\n            entrance: '',\n            floor: ''\n          });\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 37\n      }\n    })), (isAddingNewClient || selectedClient) && React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 37\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'column'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 41\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 45\n      }\n    }, \"\\u0413\\u043E\\u0440\\u043E\\u0434\"), React.createElement(TextInput, {\n      placeholder: \"\\u0413\\u043E\\u0440\\u043E\\u0434\",\n      value: address.city,\n      onChangeText: function onChangeText(text) {\n        return handleAddressChange('city', text);\n      },\n      style: [styles.addressInput, {\n        marginBottom: 24\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 45\n      }\n    }), React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 45\n      }\n    }, \"\\u0423\\u043B\\u0438\\u0446\\u0430\"), React.createElement(TextInput, {\n      placeholder: \"\\u0423\\u043B\\u0438\\u0446\\u0430\",\n      value: address.street,\n      onChangeText: function onChangeText(text) {\n        return handleAddressChange('street', text);\n      },\n      style: [styles.addressInput, {\n        marginBottom: 24\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 45\n      }\n    }), React.createElement(View, {\n      style: {\n        flexDirection: \"row\",\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 45\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: \"column\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 970,\n        columnNumber: 49\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 971,\n        columnNumber: 53\n      }\n    }, \"\\u0414\\u043E\\u043C/\\u041A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430\"), React.createElement(TextInput, {\n      placeholder: \"\\u0414\\u043E\\u043C/\\u041A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430\",\n      value: address.house,\n      onChangeText: function onChangeText(text) {\n        return handleAddressChange('house', text);\n      },\n      style: [styles.addressInput, {\n        marginBottom: 24\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 53\n      }\n    })), React.createElement(View, {\n      style: {\n        flexDirection: \"column\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 49\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 980,\n        columnNumber: 53\n      }\n    }, \"\\u041F\\u043E\\u0434\\u044A\\u0435\\u0437\\u0434\"), React.createElement(TextInput, {\n      placeholder: \"\\u041F\\u043E\\u0434\\u044A\\u0435\\u0437\\u0434\",\n      value: address.entrance,\n      onChangeText: function onChangeText(text) {\n        return handleAddressChange('entrance', text);\n      },\n      style: [styles.addressInput, {\n        marginBottom: 24,\n        marginRight: 8\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 53\n      }\n    })), React.createElement(View, {\n      style: {\n        flexDirection: \"column\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 988,\n        columnNumber: 49\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 989,\n        columnNumber: 53\n      }\n    }, \"\\u042D\\u0442\\u0430\\u0436\"), React.createElement(TextInput, {\n      placeholder: \"\\u042D\\u0442\\u0430\\u0436\",\n      value: address.floor,\n      onChangeText: function onChangeText(text) {\n        return handleAddressChange('floor', text);\n      },\n      style: [styles.addressInput, {\n        marginBottom: 24,\n        marginRight: 8\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 53\n      }\n    }))), React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 45\n      }\n    }, \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\"), React.createElement(TextInput, {\n      placeholder: \"+79999999999\",\n      value: formData.phoneClient,\n      onChangeText: function onChangeText(text) {\n        return setField('phoneClient', text);\n      },\n      keyboardType: \"phone-pad\",\n      style: [styles.addressInput, {\n        marginBottom: 24\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 45\n      }\n    }))), renderClientButton());\n  })), formData.status === \"выполнено\" && React.createElement(View, {\n    style: {\n      marginBottom: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: [styles.contentContainer, {\n      backgroundColor: \"#f9f9f9\",\n      borderRadius: 24\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1017,\n      columnNumber: 29\n    }\n  }, tryRender(function () {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1019,\n        columnNumber: 37\n      }\n    }, React.createElement(Text, {\n      style: [styles.headlineMedium, {\n        marginBottom: 24\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1020,\n        columnNumber: 41\n      }\n    }, \"\\u041E\\u0442\\u0447\\u0451\\u0442\"), React.createElement(View, {\n      style: styles.commentContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1021,\n        columnNumber: 41\n      }\n    }, React.createElement(DropdownItem, {\n      label: \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\\u043D\\u0438\\u043A\\u0438\",\n      options: inventoryItems,\n      selectedValues: selectedInventory,\n      onValueChange: handleInventoryChange,\n      preselectedItems: preselectedInventory,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1022,\n        columnNumber: 45\n      }\n    }), React.createElement(ImagePreview, {\n      images: selectedImages,\n      onAddPress: handleChoosePhoto,\n      onRemovePress: handleRemoveImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1029,\n        columnNumber: 45\n      }\n    })));\n  }))), React.createElement(View, {\n    style: {\n      marginBottom: 320\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1042,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: [styles.contentContainer, {\n      backgroundColor: \"#f9f9f9\",\n      borderRadius: 24\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 25\n    }\n  }, tryRender(function () {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1045,\n        columnNumber: 33\n      }\n    }, React.createElement(Text, {\n      style: [styles.headlineMedium, {\n        marginBottom: 24\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1046,\n        columnNumber: 37\n      }\n    }, \"\\u0414\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\"), React.createElement(View, {\n      style: styles.commentContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 37\n      }\n    }, React.createElement(Text, {\n      style: styles.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1048,\n        columnNumber: 41\n      }\n    }, \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435\"), React.createElement(TextInput, {\n      placeholder: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u043F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435\",\n      value: formData.description,\n      onChangeText: function onChangeText(text) {\n        return setField('description', text);\n      },\n      multiline: true,\n      numberOfLines: 4,\n      style: styles.commentInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1049,\n        columnNumber: 41\n      }\n    })));\n  }))))));\n  function tryRender(renderFunc) {\n    try {\n      return renderFunc();\n    } catch (error) {\n      console.error(\"Ошибка при отрисовке элемента:\", error);\n      return React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1071,\n          columnNumber: 20\n        }\n      }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u043E\\u0442\\u0440\\u0438\\u0441\\u043E\\u0432\\u043A\\u0435\");\n    }\n  }\n}\nexport default TaskForm;","map":{"version":3,"names":["React","useState","useCallback","useEffect","ScrollView","View","Text","TextInput","TouchableOpacity","Alert","BackHandler","Image","Modal","SafeAreaView","styles","DateInput","DropdownEmployee","DropdownService","DropdownItem","DropdownClient","DateTimePickerModal","BackIcon","DeleteIcon","format","DropdownWithSearch","axios","fetchServiceNamesByIds","fetchTaskParticipants","handleSaveTask","updateDraft","ImagePicker","TaskForm","_ref","_this","formData","dispatchFormData","onClose","draftData","_useState","_useState2","_slicedToArray","selectedService","setSelectedService","_useState3","_useState4","selectedEmployee","setSelectedEmployee","_useState5","_useState6","service","setServices","_useState7","_useState8","employees","setEmployees","_useState9","_useState10","clients","setClients","_useState11","_useState12","inventoryItems","setInventoryItems","_useState13","_useState14","selectedInventory","setSelectedInventory","_useState15","_useState16","preselectedInventory","setPreselectedInventory","_useState17","_useState18","selectedClient","setSelectedClient","_useState19","_useState20","selectedImages","setSelectedImages","_useState21","_useState22","currentImageIndex","setCurrentImageIndex","_useState23","_useState24","fullScreenImageModalVisible","setFullScreenImageModalVisible","_useState25","_useState26","currentImage","setCurrentImage","_useState27","_useState28","isFormInitialized","setIsFormInitialized","_useState29","_useState30","isNewClientAdded","setIsNewClientAdded","_useState31","_useState32","isAddingNewClient","setIsAddingNewClient","_useState33","_useState34","isClientFromDraft","setIsClientFromDraft","_useState35","_useState36","isDeleteConfirmationVisible","setDeleteConfirmationVisible","_useState37","city","street","house","entrance","floor","_useState38","address","setAddress","resetForm","setField","handleOpenAddClientForm","renderClientButton","createElement","onPress","handleUpdateClient","style","buttonClose","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","textStyle","handleAddClient","fetchClients","_asyncToGenerator","response","get","data","error","console","fetchInventoryItems","_ref3","fetch","json","apply","arguments","handleInventoryChange","newSelectedInventory","selectedInventoryData","map","item","id","quantity","type","payload","fetchSelectedInventory","_ref4","taskId","_x","loadData","_ref5","fetchServices","fetchEmployees","_ref7","participantData","Array","isArray","participantIds","p","_x2","serviceNames","noServices","serviceIds","Object","keys","Number","employeeData","employeeIds","employee","formatTimeString","timeString","Date","formattedDraftData","_objectSpread","cost","toString","description","startDate","start_date","endDate","end_date","startDateTime","start_time","endDateTime","end_time","paymentMethod","payment","fullnameClient","fullname_client","phone","selectedResponsible","responsible","addressClient","address_client","client","find","c","full_name","JSON","stringify","addressRegex","addressMatch","match","phone_number","entries","forEach","_ref9","_ref10","key","value","_defineProperty","totalCost","serviceId","serviceItem","s","parseInt","updateTotalCost","selectedItems","handleSave","updatedFormData","today","status","isUpdating","_ref12","clientData","phoneClient","post","alert","concat","_toConsumableArray","updatedClientData","prevClients","_ref13","fullAddress","put","updatedClients","handleAutoUpdateClient","_ref14","openFullScreenImage","index","showNextImage","length","showPreviousImage","FullScreenImageModal","_ref15","_selectedImages$curre","isVisible","imageUri","uri","visible","transparent","animationType","onRequestClose","flex","backgroundColor","justifyContent","alignItems","source","width","height","resizeMode","position","top","right","color","fontSize","left","bottom","textAlign","marginLeft","marginRight","handleRemoveImage","currentImages","updatedImages","filter","_","i","img","handleChoosePhoto","_ref16","permissionResult","requestMediaLibraryPermissionsAsync","granted","pickerResult","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsMultipleSelection","quality","canceled","newImages","assets","prevImages","uploadImages","_ref17","FormData","image","append","name","Platform","OS","replace","task","method","body","headers","ok","Error","ImagePreview","_ref18","images","onRemovePress","horizontal","imagePreviewContainer","showsHorizontalScrollIndicator","imageContainer","imagePreview","removeIconContainer","removeIcon","photoPickerContainer","photoPickerPlusIcon","processServerImages","serverImages","photo_url","fetchTaskImages","_ref19","_x3","handleAddressChange","field","prev","handleCostChange","text","newText","backHandler","addEventListener","cancelable","remove","handleBackPress","handleDelete","deleteTask","_ref21","delete","handleDeletePress","showDeleteConfirmationAlert","handleChange","toggleStartPicker","isStartPickerVisible","toggleEndPicker","isEndPickerVisible","handleStartPicked","date","handleEndPicked","handleServiceChange","newSelectedServiceIds","container","contentContainerTask","taskHeader","titleMedium","showsVerticalScrollIndicator","overScrollMode","contentContainer","borderRadius","marginBottom","tryRender","Fragment","headlineMedium","label","options","selectedValues","onValueChange","flexDirection","paymentMethodOptions","selectedValue","costInput","placeholder","onChangeText","keyboardType","onDateChange","dateType","selectedDate","minDate","dateInputContainer","editable","selectedItemText","mode","onConfirm","onCancel","is24Hour","responsibleOptions","employeesOptions","fullnameClientOptions","disabled","prevAddress","addressInput","commentContainer","preselectedItems","onAddPress","multiline","numberOfLines","commentInput","renderFunc"],"sources":["C:/Users/fred/Desktop/client/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport { ScrollView, View, Text, TextInput, TouchableOpacity, Alert, BackHandler, Image, Modal } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport styles from '../styles/styles';\r\nimport DateInput from './DateInput';\r\nimport DropdownEmployee from './DropdownEmployee';\r\nimport DropdownService from './DropdownService';\r\nimport DropdownItem from './DropdownItem';\r\nimport DropdownClient from './DropdownClient';\r\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\r\nimport { BackIcon, DeleteIcon } from '../icons';\r\nimport { format } from 'date-fns';\r\nimport DropdownWithSearch from './DropdownWithSearch';\r\nimport axios from 'axios';\r\nimport { fetchServiceNamesByIds, fetchTaskParticipants } from '../utils/tasks';\r\nimport { handleSaveTask, updateDraft } from '../utils/taskScreenHelpers';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nfunction TaskForm({ formData, dispatchFormData, onClose, draftData }) {\r\n    const [selectedService, setSelectedService] = useState([]);\r\n    const [selectedEmployee, setSelectedEmployee] = useState([]);\r\n    const [service, setServices] = useState([]);\r\n    const [employees, setEmployees] = useState([]);\r\n    const [clients, setClients] = useState([]);\r\n    const [inventoryItems, setInventoryItems] = useState([]);\r\n    const [selectedInventory, setSelectedInventory] = useState([]);\r\n    const [preselectedInventory, setPreselectedInventory] = useState([]);\r\n    const [selectedClient, setSelectedClient] = useState(null);\r\n    const [selectedImages, setSelectedImages] = useState([]);\r\n    const [currentImageIndex, setCurrentImageIndex] = useState(0);\r\n    const [fullScreenImageModalVisible, setFullScreenImageModalVisible] = useState(false);\r\n    const [currentImage, setCurrentImage] = useState(null);\r\n    const [isFormInitialized, setIsFormInitialized] = useState(false);\r\n    const [isNewClientAdded, setIsNewClientAdded] = useState(false);\r\n    const [isAddingNewClient, setIsAddingNewClient] = useState(false);\r\n    const [isClientFromDraft, setIsClientFromDraft] = useState(false);\r\n    const [isDeleteConfirmationVisible, setDeleteConfirmationVisible] = useState(false);\r\n    const [address, setAddress] = useState({\r\n        city: '',\r\n        street: '',\r\n        house: '',\r\n        entrance: '',\r\n        floor: ''\r\n    });\r\n\r\n    const resetForm = () => {\r\n        setIsNewClientAdded(false);\r\n        setSelectedClient(null);\r\n        setAddress({\r\n            city: '',\r\n            street: '',\r\n            house: '',\r\n            entrance: '',\r\n            floor: ''\r\n        });\r\n        setField('phoneClient', '');\r\n    };\r\n\r\n    const handleOpenAddClientForm = () => {\r\n        setIsAddingNewClient(true);\r\n        resetForm();\r\n    };\r\n\r\n    const renderClientButton = () => {\r\n        if (isClientFromDraft || (selectedClient && !isAddingNewClient)) {\r\n            return (\r\n                <TouchableOpacity onPress={handleUpdateClient} style={styles.buttonClose}>\r\n                    <Text style={styles.textStyle}>Обновить данные</Text>\r\n                </TouchableOpacity>\r\n            );\r\n        } else if (isAddingNewClient) {\r\n            return (\r\n                <TouchableOpacity onPress={handleAddClient} style={styles.buttonClose}>\r\n                    <Text style={styles.textStyle}>Добавить клиента</Text>\r\n                </TouchableOpacity>\r\n            );\r\n        } else {\r\n            return (\r\n                <TouchableOpacity onPress={handleOpenAddClientForm} style={styles.buttonClose}>\r\n                    <Text style={styles.textStyle}>Добавить нового клиента</Text>\r\n                </TouchableOpacity>\r\n            );\r\n        }\r\n    };\r\n\r\n    const fetchClients = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`http://31.129.101.174/clients`);\r\n            setClients(response.data);\r\n        } catch (error) {\r\n            console.error('Ошибка при получении списка клиентов:', error);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchClients();\r\n    }, [fetchClients]);\r\n\r\n    const fetchInventoryItems = async () => {\r\n        try {\r\n            const response = await fetch('http://31.129.101.174/inventory');\r\n            const data = await response.json();\r\n            setInventoryItems(data);\r\n        } catch (error) {\r\n            console.error('Ошибка при получении инвентаря:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchInventoryItems();\r\n    }, []);\r\n\r\n    const handleInventoryChange = (newSelectedInventory) => {\r\n        setSelectedInventory(newSelectedInventory);\r\n\r\n        // Создаем массив объектов, содержащих id и количество каждого выбранного предмета\r\n        const selectedInventoryData = newSelectedInventory.map(item => {\r\n            return { id: item.id, quantity: item.quantity };\r\n        });\r\n\r\n        // Обновляем formData\r\n        dispatchFormData({\r\n            type: 'UPDATE_FORM',\r\n            payload: { selectedInventory: selectedInventoryData }\r\n        });\r\n    };\r\n\r\n    const fetchSelectedInventory = async (taskId) => {\r\n        try {\r\n            const response = await axios.get(`http://31.129.101.174/tasks/${taskId}/selected-inventory`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Ошибка при получении выбранного инвентаря:', error);\r\n            return [];\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            if (draftData && draftData.id) {\r\n                const selectedInventoryData = await fetchSelectedInventory(draftData.id);\r\n                setPreselectedInventory(selectedInventoryData);\r\n            }\r\n        };\r\n\r\n        loadData();\r\n    }, [draftData]);\r\n\r\n    const fetchServices = useCallback(async () => {\r\n        try {\r\n            const response = await fetch('http://31.129.101.174/services');\r\n            const data = await response.json();\r\n            setServices(data);\r\n        } catch (error) {\r\n            console.error('Ошибка при получении инвентаря:', error);\r\n        }\r\n    }, []);\r\n\r\n    const fetchEmployees = useCallback(async (taskId) => {\r\n        try {\r\n            const participantData = await fetchTaskParticipants(taskId);\r\n            if (Array.isArray(participantData)) {\r\n                setEmployees(participantData);\r\n                const participantIds = participantData.map(p => p.id);\r\n                setSelectedEmployee(participantIds);\r\n            } else {\r\n                console.error('Полученные данные не являются массивом:', participantData);\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при получении данных сотрудников:', error);\r\n        }\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchServices();\r\n        if (draftData && !isFormInitialized) {\r\n            fetchEmployees(draftData.id);\r\n        }\r\n    }, [fetchServices, draftData, isFormInitialized, fetchEmployees]);\r\n\r\n    useEffect(() => {\r\n        dispatchFormData({\r\n            type: 'UPDATE_FORM',\r\n            payload: { selectedService }\r\n        });\r\n    }, [selectedService, dispatchFormData]);\r\n\r\n    useEffect(() => {\r\n        dispatchFormData({\r\n            type: 'UPDATE_FORM',\r\n            payload: { selectedEmployee }\r\n        });\r\n    }, [selectedEmployee, dispatchFormData]);\r\n\r\n    useEffect(() => {\r\n        if (draftData && !isFormInitialized) {\r\n            (async () => {\r\n                const serviceNames = await fetchServiceNamesByIds(draftData.service);\r\n                if (!serviceNames.noServices) {\r\n                    const serviceIds = Object.keys(serviceNames).map(Number);\r\n                    setSelectedService(serviceIds);\r\n                }\r\n\r\n                const employeeData = await fetchTaskParticipants(draftData.id);\r\n                if (employeeData && Array.isArray(employeeData)) {\r\n                    const employeeIds = employeeData.map(employee => employee.id);\r\n                    setSelectedEmployee(employeeIds);\r\n                }\r\n\r\n                const formatTimeString = (timeString) => {\r\n                    return timeString ? new Date('1970-01-01T' + timeString + 'Z') : null;\r\n                };\r\n\r\n                const formattedDraftData = {\r\n                    ...draftData,\r\n                    cost: draftData.cost ? draftData.cost.toString() : '',\r\n                    description: draftData.description || '',\r\n                    startDate: draftData.start_date ? new Date(draftData.start_date) : null,\r\n                    endDate: draftData.end_date ? new Date(draftData.end_date) : null,\r\n                    startDateTime: formatTimeString(draftData.start_time),\r\n                    endDateTime: formatTimeString(draftData.end_time),\r\n                    paymentMethod: draftData.payment || '',\r\n                    fullnameClient: draftData.fullname_client || '',\r\n                    phone: draftData.phone || '',\r\n                    selectedResponsible: draftData.responsible || '',\r\n                    addressClient: draftData.address_client || '',\r\n                };\r\n\r\n                if (formattedDraftData.fullnameClient) {\r\n                    const client = clients.find(c => c.full_name === formattedDraftData.fullnameClient);\r\n                    if (client) {\r\n                        setSelectedClient(client);\r\n                        setIsClientFromDraft(true);\r\n                    }\r\n                }\r\n\r\n                setIsFormInitialized(true);\r\n\r\n                if (JSON.stringify(formData) !== JSON.stringify(formattedDraftData)) {\r\n                    dispatchFormData({\r\n                        type: 'SET_FORM',\r\n                        payload: formattedDraftData\r\n                    });\r\n                }\r\n            })();\r\n        }\r\n    }, [draftData, formData, dispatchFormData, isFormInitialized, fetchServiceNamesByIds, fetchTaskParticipants, clients]);\r\n\r\n    useEffect(() => {\r\n        if (selectedClient) {\r\n            const addressRegex = /город\\s([^,]+), улица\\s([^,]+), дом\\s([^,]+), подъезд\\s([^,]+), этаж\\s([^,]+)/;\r\n            const addressMatch = selectedClient.address.match(addressRegex);\r\n\r\n            if (addressMatch) {\r\n                setAddress({\r\n                    city: addressMatch[1] || '',\r\n                    street: addressMatch[2] || '',\r\n                    house: addressMatch[3] || '',\r\n                    entrance: addressMatch[4] || '',\r\n                    floor: addressMatch[5] || ''\r\n                });\r\n                setField('phoneClient', selectedClient.phone_number || '');\r\n                setIsNewClientAdded(true);\r\n            }\r\n        } else {\r\n            // обнуление данных при отсутствии выбранного клиента\r\n            setAddress({\r\n                city: '',\r\n                street: '',\r\n                house: '',\r\n                entrance: '',\r\n                floor: ''\r\n            });\r\n            setField('phoneClient', '');\r\n            setIsNewClientAdded(false);\r\n        }\r\n    }, [selectedClient]);\r\n\r\n    useEffect(() => {\r\n        if (draftData) {\r\n            Object.entries(draftData).forEach(([key, value]) => {\r\n                dispatchFormData({ type: 'UPDATE_FORM', payload: { [key]: value } });\r\n            });\r\n        }\r\n    }, [draftData, dispatchFormData]);\r\n\r\n    useEffect(() => {\r\n        let totalCost = 0;\r\n        selectedService.forEach(serviceId => {\r\n            const serviceItem = service.find(s => s.id === serviceId);\r\n            if (serviceItem) {\r\n                totalCost += parseInt(serviceItem.cost, 10);\r\n            }\r\n        });\r\n\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { cost: totalCost.toString() } });\r\n    }, [selectedService, service, dispatchFormData]);\r\n\r\n    const updateTotalCost = useCallback((selectedItems) => {\r\n        let totalCost = 0;\r\n        selectedItems.forEach(item => {\r\n            const serviceItem = service.find(s => s.id === item.id);\r\n            if (serviceItem) {\r\n                totalCost += parseInt(serviceItem.cost, 10);\r\n            }\r\n        });\r\n\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { cost: totalCost.toString() } });\r\n    }, [service, dispatchFormData]);\r\n\r\n    const handleSave = useCallback(async () => {\r\n        let updatedFormData = { ...formData };\r\n\r\n        if (!updatedFormData.startDate) {\r\n            const today = new Date();\r\n            updatedFormData.startDate = format(today, 'yyyy-MM-dd');\r\n        }\r\n\r\n        updatedFormData.status = 'черновик';\r\n\r\n        try {\r\n            const isUpdating = draftData && draftData.id;\r\n            if (isUpdating) {\r\n                await updateDraft(draftData.id, updatedFormData);\r\n            } else {\r\n                await handleSaveTask(updatedFormData);\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка сохранения задачи', error);\r\n        }\r\n    }, [formData, draftData, handleSaveTask]);\r\n\r\n    const handleAddClient = async () => {\r\n        const clientData = {\r\n            full_name: formData.fullnameClient,\r\n            phone_number: formData.phoneClient,\r\n            address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`\r\n        };\r\n        try {\r\n            const response = await axios.post(`http://31.129.101.174/clients`, clientData);\r\n            alert('Клиент успешно добавлен');\r\n            setClients([...clients, clientData]);\r\n            setSelectedClient(clientData);\r\n            setIsAddingNewClient(false);\r\n        } catch (error) {\r\n            console.error('Ошибка при добавлении клиента:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (selectedClient && !isNewClientAdded) {\r\n            const updatedClientData = {\r\n                ...selectedClient,\r\n                address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`,\r\n                phone_number: formData.phoneClient\r\n            };\r\n\r\n            setClients(prevClients => {\r\n                return prevClients.map(client =>\r\n                    client.id === selectedClient.id ? updatedClientData : client\r\n                );\r\n            });\r\n\r\n            // Это установит флаг в true, чтобы предотвратить повторное обновление\r\n            setIsNewClientAdded(true);\r\n        }\r\n    }, [selectedClient, address, formData.phoneClient]);\r\n\r\n\r\n    const handleUpdateClient = async () => {\r\n        const { city, street, house, entrance, floor } = address;\r\n        const fullAddress = `город ${city}, улица ${street}, дом ${house}, подъезд ${entrance}, этаж ${floor}`;\r\n        setField('addressClient', fullAddress);\r\n        if (!selectedClient) {\r\n            alert('Клиент не выбран.');\r\n            return;\r\n        }\r\n\r\n        const updatedClientData = {\r\n            full_name: formData.fullnameClient,\r\n            phone_number: formData.phoneClient,\r\n            address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`\r\n        };\r\n\r\n        try {\r\n            await axios.put(`http://31.129.101.174/clients/${selectedClient.id}`, updatedClientData);\r\n            alert('Данные клиента обновлены');\r\n\r\n            const updatedClients = clients.map(client =>\r\n                client.id === selectedClient.id ? { ...client, ...updatedClientData } : client\r\n            );\r\n            setClients(updatedClients);\r\n\r\n        } catch (error) {\r\n            console.error('Ошибка при обновлении данных клиента:', error);\r\n        }\r\n    };\r\n\r\n    const handleAutoUpdateClient = async () => {\r\n        const { city, street, house, entrance, floor } = address;\r\n        const fullAddress = `город ${city}, улица ${street}, дом ${house}, подъезд ${entrance}, этаж ${floor}`;\r\n        setField('addressClient', fullAddress);\r\n        if (!selectedClient) {\r\n            alert('Клиент не выбран.');\r\n            return;\r\n        }\r\n\r\n        const updatedClientData = {\r\n            full_name: formData.fullnameClient,\r\n            phone_number: formData.phoneClient,\r\n            address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`\r\n        };\r\n\r\n        try {\r\n            const updatedClients = clients.map(client =>\r\n                client.id === selectedClient.id ? { ...client, ...updatedClientData } : client\r\n            );\r\n            setClients(updatedClients);\r\n\r\n        } catch (error) {\r\n            console.error('Ошибка при выборе клиента:', error);\r\n        }\r\n    };\r\n    const openFullScreenImage = (index) => {\r\n        setCurrentImageIndex(index);\r\n        setFullScreenImageModalVisible(true);\r\n    };\r\n\r\n    const showNextImage = () => {\r\n        if (currentImageIndex < selectedImages.length - 1) {\r\n            setCurrentImageIndex(currentImageIndex + 1);\r\n        }\r\n    };\r\n\r\n    const showPreviousImage = () => {\r\n        if (currentImageIndex > 0) {\r\n            setCurrentImageIndex(currentImageIndex - 1);\r\n        }\r\n    };\r\n\r\n    const FullScreenImageModal = ({ isVisible, onClose }) => {\r\n        const imageUri = selectedImages[currentImageIndex]?.uri;\r\n\r\n        return (\r\n            <Modal\r\n                visible={isVisible}\r\n                transparent={false}\r\n                animationType=\"fade\"\r\n                onRequestClose={onClose}\r\n            >\r\n                <View style={{ flex: 1, backgroundColor: 'black', justifyContent: 'center', alignItems: 'center' }}>\r\n                    {imageUri && (\r\n                        <Image\r\n                            source={{ uri: imageUri }}\r\n                            style={{ width: '100%', height: '100%', resizeMode: 'contain' }}\r\n                        />\r\n                    )}\r\n                    <TouchableOpacity style={{ position: 'absolute', top: 40, right: 20 }} onPress={onClose}>\r\n                        <Text style={{ color: 'white', fontSize: 30 }}>×</Text>\r\n                    </TouchableOpacity>\r\n\r\n                    {currentImageIndex > 0 && (\r\n                        <TouchableOpacity\r\n                            style={{ position: 'absolute', left: 0, top: 0, bottom: 0, right: '50%', justifyContent: 'center' }}\r\n                            onPress={showPreviousImage}\r\n                        >\r\n                            <Text style={{ color: 'white', fontSize: 42, textAlign: 'left', marginLeft: 20 }}>‹</Text>\r\n                        </TouchableOpacity>\r\n                    )}\r\n\r\n                    {currentImageIndex < selectedImages.length - 1 && (\r\n                        <TouchableOpacity\r\n                            style={{ position: 'absolute', right: 0, top: 0, bottom: 0, left: '50%', justifyContent: 'center' }}\r\n                            onPress={showNextImage}\r\n                        >\r\n                            <Text style={{ color: 'white', fontSize: 42, textAlign: 'right', marginRight: 20 }}>›</Text>\r\n                        </TouchableOpacity>\r\n                    )}\r\n                </View>\r\n            </Modal>\r\n        );\r\n    };\r\n\r\n    const handleRemoveImage = (index) => {\r\n        setSelectedImages(currentImages => {\r\n            const updatedImages = currentImages.filter((_, i) => i !== index);\r\n            dispatchFormData({\r\n                type: 'UPDATE_FORM',\r\n                payload: { selectedImages: updatedImages.map(img => img.uri) }\r\n            });\r\n            return updatedImages;\r\n        });\r\n    };\r\n\r\n    const handleChoosePhoto = async () => {\r\n        const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n        if (!permissionResult.granted) {\r\n            Alert.alert('Уведомление', 'Необходим доступ к фотографиям для загрузки в отчет');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const pickerResult = await ImagePicker.launchImageLibraryAsync({\r\n                mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n                allowsMultipleSelection: true,\r\n                quality: 1,\r\n            });\r\n\r\n            if (!pickerResult.canceled) {\r\n                const newImages = pickerResult.assets || [];\r\n                setSelectedImages(prevImages => [...prevImages, ...newImages]);\r\n\r\n                // Обновляем formData\r\n                dispatchFormData({\r\n                    type: 'UPDATE_FORM',\r\n                    payload: { selectedImages: [...formData.selectedImages, ...newImages.map(img => img.uri)] }\r\n                });\r\n            }\r\n        } catch (error) {\r\n            Alert.alert('Ошибка', 'Произошла ошибка при выборе фотографий');\r\n        }\r\n    };\r\n\r\n    const uploadImages = async () => {\r\n        if (selectedImages.length === 0) {\r\n            Alert.alert('Уведомление', 'Пожалуйста, выберите фотографии для загрузки');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        selectedImages.forEach((image, index) => {\r\n            formData.append('photos', {\r\n                name: `photo_${index}.jpg`,\r\n                type: 'image/jpeg', // Используем стандартный MIME-тип для JPEG\r\n                uri: Platform.OS === 'android' ? image.uri : image.uri.replace('file://', ''),\r\n            });\r\n        });\r\n\r\n        try {\r\n            // Предполагаем, что taskId доступен в текущем состоянии\r\n            const taskId = task.id; // или получить его из другого источника в зависимости от структуры приложения\r\n\r\n            const response = await fetch(`http://31.129.101.174/tasks/${taskId}/photos`, {\r\n                method: 'POST',\r\n                body: formData,\r\n                headers: { 'Content-Type': 'multipart/form-data' },\r\n            });\r\n\r\n            if (!response.ok) throw new Error('Сетевая ошибка при загрузке изображений');\r\n\r\n            setSelectedImages([]);\r\n        } catch (error) {\r\n            Alert.alert('Ошибка', 'Произошла ошибка при загрузке фотографий');\r\n        }\r\n    };\r\n\r\n    const ImagePreview = ({ images, onRemovePress }) => (\r\n        <ScrollView horizontal style={styles.imagePreviewContainer} showsHorizontalScrollIndicator={false}>\r\n            {images.map((image, index) => (\r\n                <View key={index} style={styles.imageContainer}>\r\n                    <TouchableOpacity onPress={() => openFullScreenImage(index)} style={styles.imagePreview}>\r\n                        <Image source={{ uri: image.uri }} style={styles.image} />\r\n                        <TouchableOpacity style={styles.removeIconContainer} onPress={() => onRemovePress(index)}>\r\n                            <Text style={styles.removeIcon}>×</Text>\r\n                        </TouchableOpacity>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            ))}\r\n            <TouchableOpacity onPress={handleChoosePhoto} style={styles.image}>\r\n                <View style={styles.photoPickerContainer}>\r\n                    <Text style={styles.photoPickerPlusIcon}>+</Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </ScrollView>\r\n    );\r\n\r\n    const processServerImages = (serverImages) => {\r\n        return serverImages.map(img => ({\r\n            uri: `http://31.129.101.174${img.photo_url}`, // Добавляем базовый URL сервера\r\n            width: null, // Ширина и высота обычно неизвестны для серверных изображений, если только сервер их не предоставляет\r\n            height: null,\r\n            type: 'image', // Тип можно установить статически, если все файлы являются изображениями\r\n        }));\r\n    };\r\n\r\n    // Функция для получения фотографий с сервера и их загрузки\r\n    const fetchTaskImages = async (taskId) => {\r\n        try {\r\n            const response = await axios.get(`http://31.129.101.174/tasks/${taskId}/photos`);\r\n            if (response.data && Array.isArray(response.data)) {\r\n                // Преобразуем и загружаем изображения с сервера\r\n                const serverImages = processServerImages(response.data);\r\n                setSelectedImages(prevImages => [...prevImages, ...serverImages]);\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при загрузке изображений задачи:', error);\r\n        }\r\n    };\r\n\r\n    // Вызов функции загрузки при инициализации компонента\r\n    useEffect(() => {\r\n        if (draftData && draftData.id) {\r\n            fetchTaskImages(draftData.id); // Загружаем изображения, если есть ID задачи\r\n        }\r\n    }, [draftData]);\r\n\r\n\r\n    const handleAddressChange = useCallback((field, value) => {\r\n        setAddress(prev => ({ ...prev, [field]: value }));\r\n    }, []);\r\n\r\n    const handleCostChange = useCallback(text => {\r\n        const newText = text.replace(/^0+/, '');\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { cost: newText } });\r\n    }, [dispatchFormData]);\r\n\r\n    useEffect(() => {\r\n        const backHandler = BackHandler.addEventListener(\r\n            'hardwareBackPress',\r\n            () => {\r\n                Alert.alert(\r\n                    \"Сохранить как черновик?\",\r\n                    \"Вы хотите сохранить эту задачу как черновик?\",\r\n                    [\r\n                        {\r\n                            text: \"Нет\",\r\n                            onPress: onClose, // Это закроет модальное окно без сохранения\r\n                            style: \"cancel\"\r\n                        },\r\n                        {\r\n                            text: \"Сохранить\",\r\n                            onPress: () => {\r\n                                handleSave(); // Сохраняем данные\r\n                                onClose; // Затем закрываем модальное окно\r\n                            }\r\n                        }\r\n                    ],\r\n                    { cancelable: false }\r\n                );\r\n                return true; // Предотвращает действие по умолчанию\r\n            }\r\n        );\r\n\r\n        return () => backHandler.remove();\r\n    }, [formData, onClose, handleSave]);\r\n\r\n\r\n    const handleBackPress = () => {\r\n        if (formData.status === 'отсутствует') {\r\n            Alert.alert(\r\n                \"Сохранить как черновик?\",\r\n                \"Вы хотите сохранить эту задачу как черновик?\",\r\n                [\r\n                    {\r\n                        text: \"Нет\",\r\n                        onPress: onClose,\r\n                        style: \"cancel\"\r\n                    },\r\n                    {\r\n                        text: \"Сохранить\",\r\n                        onPress: () => {\r\n                            handleSave();\r\n                            onClose();\r\n                        }\r\n                    }\r\n                ],\r\n                { cancelable: false }\r\n            );\r\n        } else {\r\n            Alert.alert(\r\n                \"Отменить редактирование?\",\r\n                \"Вы хотите отменить редактирование?\",\r\n                [\r\n                    {\r\n                        text: \"Да\",\r\n                        onPress: onClose,\r\n                        style: \"cancel\"\r\n                    },\r\n                    { text: \"Нет\" }\r\n                ],\r\n                { cancelable: false }\r\n            );\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const handleDelete = useCallback(async () => {\r\n        dispatchFormData({ type: 'RESET_FORM' });\r\n    }, [dispatchFormData]);\r\n\r\n    const deleteTask = async () => {\r\n        try {\r\n            const response = await axios.delete(`http://31.129.101.174/tasks/${formData.id}`);\r\n            if (response.status === 200) {\r\n                dispatchFormData({ type: 'RESET_FORM' });\r\n                onClose();\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при удалении задачи:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeletePress = () => {\r\n        if (formData.status && formData.status !== \"отсутствует\") {\r\n            setDeleteConfirmationVisible(true);\r\n        } else {\r\n            dispatchFormData({ type: 'RESET_FORM' });\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    const showDeleteConfirmationAlert = () => {\r\n        Alert.alert(\r\n            \"Подтвердите удаление\",\r\n            \"Вы уверены, что хотите удалить эту задачу?\",\r\n            [\r\n                {\r\n                    text: \"Нет\",\r\n                    onPress: () => setDeleteConfirmationVisible(false),\r\n                    style: \"cancel\"\r\n                },\r\n                { text: \"Да\", onPress: deleteTask }\r\n            ]\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isDeleteConfirmationVisible) {\r\n            showDeleteConfirmationAlert();\r\n        }\r\n    }, [isDeleteConfirmationVisible]);\r\n\r\n    const setField = useCallback((field, value) => {\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { [field]: value } });\r\n    }, [dispatchFormData]);\r\n\r\n    const handleChange = useCallback((field) => (value) => {\r\n        setField(field, value);\r\n\r\n        if (field === 'fullnameClient') {\r\n            const client = clients.find(client => client.full_name === value);\r\n            if (client) {\r\n                setSelectedClient(client);\r\n                setField('addressClient', client.address || '');\r\n                setField('phoneClient', client.phone_number || '');\r\n            }\r\n        }\r\n    }, [setField, clients]);\r\n\r\n    const toggleStartPicker = useCallback(() => {\r\n        setField('isStartPickerVisible', !formData.isStartPickerVisible);\r\n    }, [formData.isStartPickerVisible, setField]);\r\n\r\n    const toggleEndPicker = useCallback(() => {\r\n        setField('isEndPickerVisible', !formData.isEndPickerVisible);\r\n    }, [formData.isEndPickerVisible, setField]);\r\n\r\n    const handleStartPicked = useCallback((date) => {\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { startDateTime: date } });\r\n        toggleStartPicker();\r\n    }, [toggleStartPicker, dispatchFormData]);\r\n\r\n    const handleEndPicked = useCallback((date) => {\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { endDateTime: date } });\r\n        toggleEndPicker();\r\n    }, [toggleEndPicker, dispatchFormData]);\r\n\r\n    const handleServiceChange = useCallback((newSelectedServiceIds) => {\r\n        setSelectedService(newSelectedServiceIds);\r\n        dispatchFormData({\r\n            type: 'UPDATE_FORM',\r\n            payload: { selectedService: newSelectedServiceIds }\r\n        });\r\n    }, [dispatchFormData]);\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <View style={styles.contentContainerTask}>\r\n                <FullScreenImageModal\r\n                    isVisible={fullScreenImageModalVisible}\r\n                    imageUri={currentImage}\r\n                    onClose={() => setFullScreenImageModalVisible(false)}\r\n                />\r\n                <View style={styles.taskHeader}>\r\n                    <TouchableOpacity onPress={handleBackPress}>\r\n                        <BackIcon />\r\n                    </TouchableOpacity>\r\n                    <Text style={[styles.titleMedium, { flex: 1, textAlign: 'center' }]}>Добавление задачи</Text>\r\n                    <TouchableOpacity onPress={handleDeletePress}>\r\n                        <DeleteIcon />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <ScrollView showsVerticalScrollIndicator={false} overScrollMode=\"never\">\r\n                    <View style={[styles.contentContainer, { backgroundColor: \"#f9f9f9\", borderRadius: 24, marginBottom: 24 }]}>\r\n                        {tryRender(() => (\r\n                            <>\r\n                                <Text style={[styles.headlineMedium, { marginBottom: 24 }]}>Данные задачи</Text>\r\n\r\n                            </>\r\n                        ))}\r\n\r\n                        {tryRender(() => (\r\n                            <View>\r\n                                <View style={{ flex: 1, marginBottom: 24 }}>\r\n                                    <Text style={styles.label}>Способ оплаты</Text>\r\n                                    <DropdownService\r\n                                        options={service}\r\n                                        selectedValues={selectedService}\r\n                                        onValueChange={handleServiceChange}\r\n                                        updateTotalCost={updateTotalCost}\r\n                                    />\r\n                                </View>\r\n                                <View style={{ flexDirection: 'row', marginBottom: 24 }}>\r\n                                    <View style={{ flex: 1 }}>\r\n                                        <Text style={styles.label}>Способ оплаты</Text>\r\n                                        <DropdownWithSearch\r\n                                            options={formData.paymentMethodOptions}\r\n                                            selectedValue={formData.paymentMethod}\r\n                                            onValueChange={handleChange('paymentMethod')}\r\n                                        />\r\n                                    </View>\r\n                                    <View style={{ flex: 1, marginLeft: 8 }}>\r\n                                        <Text style={styles.label}>Стоимость</Text>\r\n                                        <TextInput\r\n                                            style={styles.costInput}\r\n                                            placeholder=\"1000\"\r\n                                            value={formData.cost.toString()}\r\n                                            onChangeText={handleCostChange}\r\n                                            keyboardType=\"numeric\"\r\n                                        />\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        ))}\r\n                        {tryRender(() => (\r\n                            <View style={{ flexDirection: 'row', marginBottom: 24 }}>\r\n                                <View style={{ flex: 1, marginRight: 8 }}>\r\n                                    <Text style={styles.label}>Начальная дата</Text>\r\n                                    <DateInput\r\n                                        date={formData.startDate}\r\n                                        placeholder=\"ГГГГ-ММ-ДД\"\r\n                                        onDateChange={(dateType, selectedDate) => dispatchFormData({ type: 'UPDATE_FORM', payload: { [dateType]: selectedDate } })}\r\n                                        dateType=\"startDate\"\r\n                                        minDate={new Date()}\r\n                                    />\r\n                                </View>\r\n                                <View style={{ flex: 1 }}>\r\n                                    <Text style={styles.label}>Конечная дата</Text>\r\n                                    <DateInput\r\n                                        date={formData.endDate}\r\n                                        placeholder=\"ГГГГ-ММ-ДД\"\r\n                                        onDateChange={(dateType, selectedDate) => dispatchFormData({ type: 'UPDATE_FORM', payload: { [dateType]: selectedDate } })}\r\n                                        dateType=\"endDate\"\r\n                                        minDate={new Date()}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                        ))}\r\n                        {tryRender(() => (\r\n                            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                                <View style={{ flex: 1, marginRight: 8 }}>\r\n                                    <Text style={styles.label}>Начало работы</Text>\r\n                                    <TouchableOpacity onPress={toggleStartPicker} style={styles.dateInputContainer}>\r\n                                        <TextInput\r\n                                            value={formData.startDateTime ? format(formData.startDateTime, 'HH:mm') : ''}\r\n                                            placeholder=\"HH:mm\"\r\n                                            editable={false}\r\n                                            style={styles.selectedItemText}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1 }}>\r\n                                    <Text style={styles.label}>Конец работы</Text>\r\n                                    <TouchableOpacity onPress={toggleEndPicker} style={styles.dateInputContainer}>\r\n                                        <TextInput\r\n                                            value={formData.endDateTime ? format(formData.endDateTime, 'HH:mm') : ''}\r\n                                            placeholder=\"HH:mm\"\r\n                                            editable={false}\r\n                                            style={styles.selectedItemText}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </View>\r\n                        ))}\r\n                        <DateTimePickerModal\r\n                            isVisible={formData.isStartPickerVisible}\r\n                            mode=\"time\"\r\n                            onConfirm={handleStartPicked}\r\n                            onCancel={toggleStartPicker}\r\n                            is24Hour={true}\r\n                            date={formData.startDateTime || new Date()}\r\n                        />\r\n\r\n                        <DateTimePickerModal\r\n                            isVisible={formData.isEndPickerVisible}\r\n                            mode=\"time\"\r\n                            onConfirm={handleEndPicked}\r\n                            onCancel={toggleEndPicker}\r\n                            is24Hour={true}\r\n                            date={formData.endDateTime || new Date()}\r\n                        />\r\n                    </View>\r\n                    <View style={[styles.contentContainer, { backgroundColor: \"#f9f9f9\", borderRadius: 24, marginBottom: 24 }]}>\r\n                        {tryRender(() => (\r\n                            <>\r\n                                <Text style={[styles.headlineMedium, { marginBottom: 24 }]}>Команда</Text>\r\n                                <View style={{ marginBottom: 24 }}>\r\n                                    <Text style={styles.label}>Ответственный</Text>\r\n                                    <DropdownWithSearch\r\n                                        options={formData.responsibleOptions}\r\n                                        selectedValue={formData.selectedResponsible}\r\n                                        onValueChange={handleChange('selectedResponsible')}\r\n                                    />\r\n\r\n                                </View>\r\n                                <View>\r\n                                    <Text style={styles.label}>Участники</Text>\r\n                                    <DropdownEmployee\r\n                                        options={formData.employeesOptions}\r\n                                        selectedValues={selectedEmployee}\r\n                                        onValueChange={setSelectedEmployee}\r\n                                    />\r\n                                </View>\r\n                            </>\r\n                        ))}\r\n                    </View>\r\n                    <View style={[styles.contentContainer, { backgroundColor: \"#f9f9f9\", borderRadius: 24, marginBottom: 24 }]}>\r\n                        {tryRender(() => (\r\n                            <View>\r\n                                <Text style={[styles.headlineMedium, { marginBottom: 24 }]}>Данные клиента</Text>\r\n                                <View style={{ marginBottom: 24 }}>\r\n                                    <Text style={styles.label}>ФИО клиента</Text>\r\n                                    <DropdownClient\r\n                                        options={formData.fullnameClientOptions}\r\n                                        selectedValue={formData.fullnameClient}\r\n                                        disabled={isAddingNewClient}\r\n                                        onValueChange={(value) => {\r\n                                            handleChange('fullnameClient')(value);\r\n                                            setAddress(prevAddress => ({\r\n                                                ...prevAddress,\r\n                                                city: '',\r\n                                                street: '',\r\n                                                house: '',\r\n                                                entrance: '',\r\n                                                floor: ''\r\n                                            }));\r\n                                        }}\r\n                                    />\r\n                                </View>\r\n                                {(isAddingNewClient || selectedClient) && (\r\n                                    <View>\r\n                                        <View style={{ flexDirection: 'column' }}>\r\n                                            <Text style={styles.label}>Город</Text>\r\n                                            <TextInput\r\n                                                placeholder=\"Город\"\r\n                                                value={address.city}\r\n                                                onChangeText={(text) => handleAddressChange('city', text)}\r\n                                                style={[styles.addressInput, { marginBottom: 24 }]}\r\n                                            />\r\n                                            <Text style={styles.label}>Улица</Text>\r\n                                            <TextInput\r\n                                                placeholder=\"Улица\"\r\n                                                value={address.street}\r\n                                                onChangeText={(text) => handleAddressChange('street', text)}\r\n                                                style={[styles.addressInput, { marginBottom: 24 }]}\r\n                                            />\r\n                                            <View style={{ flexDirection: \"row\", alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                                <View style={{ flexDirection: \"column\" }}>\r\n                                                    <Text style={styles.label}>Дом/Квартира</Text>\r\n                                                    <TextInput\r\n                                                        placeholder=\"Дом/Квартира\"\r\n                                                        value={address.house}\r\n                                                        onChangeText={(text) => handleAddressChange('house', text)}\r\n                                                        style={[styles.addressInput, { marginBottom: 24 }]}\r\n                                                    />\r\n                                                </View>\r\n                                                <View style={{ flexDirection: \"column\" }}>\r\n                                                    <Text style={styles.label}>Подъезд</Text>\r\n                                                    <TextInput\r\n                                                        placeholder=\"Подъезд\"\r\n                                                        value={address.entrance}\r\n                                                        onChangeText={(text) => handleAddressChange('entrance', text)}\r\n                                                        style={[styles.addressInput, { marginBottom: 24, marginRight: 8 }]}\r\n                                                    />\r\n                                                </View>\r\n                                                <View style={{ flexDirection: \"column\" }}>\r\n                                                    <Text style={styles.label}>Этаж</Text>\r\n                                                    <TextInput\r\n                                                        placeholder=\"Этаж\"\r\n                                                        value={address.floor}\r\n                                                        onChangeText={(text) => handleAddressChange('floor', text)}\r\n                                                        style={[styles.addressInput, { marginBottom: 24, marginRight: 8 }]}\r\n                                                    />\r\n                                                </View>\r\n                                            </View>\r\n\r\n                                            <Text style={styles.label}>Номер телефона клиента</Text>\r\n                                            <TextInput\r\n                                                placeholder=\"+79999999999\"\r\n                                                value={formData.phoneClient}\r\n                                                onChangeText={(text) => setField('phoneClient', text)}\r\n                                                keyboardType=\"phone-pad\"\r\n                                                style={[styles.addressInput, { marginBottom: 24 }]}\r\n                                            />\r\n                                        </View>\r\n\r\n                                    </View>\r\n                                )}\r\n                                {renderClientButton()}\r\n                            </View>\r\n                        ))}\r\n                    </View>\r\n                    {formData.status === \"выполнено\" && (\r\n                        <View style={{ marginBottom: 24 }}>\r\n                            <View style={[styles.contentContainer, { backgroundColor: \"#f9f9f9\", borderRadius: 24 }]}>\r\n                                {tryRender(() => (\r\n                                    <View>\r\n                                        <Text style={[styles.headlineMedium, { marginBottom: 24 }]}>Отчёт</Text>\r\n                                        <View style={styles.commentContainer}>\r\n                                            <DropdownItem\r\n                                                label=\"Расходники\"\r\n                                                options={inventoryItems}\r\n                                                selectedValues={selectedInventory}\r\n                                                onValueChange={handleInventoryChange}\r\n                                                preselectedItems={preselectedInventory}\r\n                                            />\r\n                                            <ImagePreview\r\n                                                images={selectedImages}\r\n                                                onAddPress={handleChoosePhoto}\r\n                                                onRemovePress={handleRemoveImage}\r\n                                            />\r\n                                        </View>\r\n                                    </View>\r\n                                ))}\r\n                            </View>\r\n                        </View>\r\n                    )}\r\n\r\n\r\n                    <View style={{ marginBottom: 320 }}>\r\n                        <View style={[styles.contentContainer, { backgroundColor: \"#f9f9f9\", borderRadius: 24 }]}>\r\n                            {tryRender(() => (\r\n                                <View>\r\n                                    <Text style={[styles.headlineMedium, { marginBottom: 24 }]}>Дополнительно</Text>\r\n                                    <View style={styles.commentContainer}>\r\n                                        <Text style={styles.label}>Примечание</Text>\r\n                                        <TextInput\r\n                                            placeholder=\"Добавьте примечание\"\r\n                                            value={formData.description}\r\n                                            onChangeText={(text) => setField('description', text)}\r\n                                            multiline={true}\r\n                                            numberOfLines={4}\r\n                                            style={styles.commentInput}\r\n                                        />\r\n                                    </View>\r\n                                </View>\r\n                            ))}\r\n                        </View>\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n    function tryRender(renderFunc) {\r\n        try {\r\n            return renderFunc();\r\n        } catch (error) {\r\n            console.error(\"Ошибка при отрисовке элемента:\", error);\r\n            return <Text>Ошибка при отрисовке</Text>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default TaskForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}