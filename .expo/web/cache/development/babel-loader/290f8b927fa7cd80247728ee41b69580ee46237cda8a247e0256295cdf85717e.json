{"ast":null,"code":"import React, { memo, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport VirtualizedList from \"react-native-web/dist/exports/VirtualizedList\";\nimport { format, startOfMonth, endOfMonth, startOfWeek, endOfWeek, addDays } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport styles from \"../styles/styles\";\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar calculateWeeks = function calculateWeeks(date) {\n  var start = startOfWeek(startOfMonth(date));\n  var end = endOfWeek(endOfMonth(date));\n  var weeks = [];\n  var currentDay = start;\n  while (currentDay <= end) {\n    var currentWeek = Array.from({\n      length: 7\n    }, function (_, i) {\n      return addDays(currentDay, i);\n    });\n    weeks.push(currentWeek.map(function (day) {\n      return day.getMonth() === date.getMonth() ? day : null;\n    }));\n    currentDay = addDays(currentWeek[6], 1);\n  }\n  return weeks;\n};\nvar Day = memo(function (_ref) {\n  var day = _ref.day,\n    handleDatePress = _ref.handleDatePress,\n    isSelectedDay = _ref.isSelectedDay,\n    hasTask = _ref.hasTask;\n  if (!day) return _jsx(View, {\n    style: styles.dayContainer\n  });\n  var formattedDay = format(day, 'd', {\n    locale: ru\n  });\n  var textStyle = [styles.dayText, isSelectedDay && styles.today];\n  return _jsx(View, {\n    style: styles.dayContainer,\n    children: _jsxs(TouchableOpacity, {\n      style: [styles.dayButton, {\n        flex: 1\n      }],\n      onPress: function onPress() {\n        return handleDatePress(day);\n      },\n      children: [_jsx(Text, {\n        style: textStyle,\n        children: formattedDay\n      }), hasTask && _jsx(View, {\n        style: styles.taskDotActive\n      })]\n    })\n  });\n});\nDay.propTypes = {\n  day: PropTypes.instanceOf(Date),\n  handleDatePress: PropTypes.func.isRequired,\n  isSelectedDay: PropTypes.bool.isRequired,\n  hasTask: PropTypes.bool.isRequired\n};\nvar RenderMonth = memo(function (_ref2) {\n  var date = _ref2.date,\n    handleDatePress = _ref2.handleDatePress,\n    taskDates = _ref2.taskDates;\n  var weeks = useMemo(function () {\n    return calculateWeeks(date);\n  }, [date]);\n  var todayFormatted = format(new Date(), 'yyyy-MM-dd');\n  return _jsxs(View, {\n    style: styles.monthContainer,\n    children: [_jsx(Text, {\n      style: styles.monthName,\n      children: format(date, 'MMMM', {\n        locale: ru\n      })\n    }), _jsx(VirtualizedList, {\n      data: weeks,\n      renderItem: function renderItem(_ref3) {\n        var week = _ref3.item;\n        return _jsx(View, {\n          style: styles.weekContainer,\n          children: week.map(function (day, index) {\n            var isDayDate = day instanceof Date;\n            var formattedDate = isDayDate ? format(day, 'yyyy-MM-dd') : `empty-${index}`;\n            var hasTask = isDayDate && ['в процессе', 'новая'].includes(taskDates[formattedDate]);\n            return _jsx(Day, {\n              day: day,\n              handleDatePress: handleDatePress,\n              isSelectedDay: todayFormatted === formattedDate,\n              hasTask: hasTask\n            }, formattedDate);\n          })\n        });\n      },\n      keyExtractor: function keyExtractor(_, index) {\n        return `week-${index}`;\n      },\n      getItemCount: function getItemCount() {\n        return weeks.length;\n      },\n      getItem: function getItem(data, index) {\n        return weeks[index];\n      }\n    })]\n  });\n});\nRenderMonth.propTypes = {\n  date: PropTypes.instanceOf(Date).isRequired,\n  handleDatePress: PropTypes.func.isRequired,\n  taskDates: PropTypes.object.isRequired\n};\nexport default RenderMonth;","map":{"version":3,"names":["React","memo","useMemo","View","Text","TouchableOpacity","VirtualizedList","format","startOfMonth","endOfMonth","startOfWeek","endOfWeek","addDays","ru","styles","PropTypes","jsx","_jsx","jsxs","_jsxs","calculateWeeks","date","start","end","weeks","currentDay","currentWeek","Array","from","length","_","i","push","map","day","getMonth","Day","_ref","handleDatePress","isSelectedDay","hasTask","style","dayContainer","formattedDay","locale","textStyle","dayText","today","children","dayButton","flex","onPress","taskDotActive","propTypes","instanceOf","Date","func","isRequired","bool","RenderMonth","_ref2","taskDates","todayFormatted","monthContainer","monthName","data","renderItem","_ref3","week","item","weekContainer","index","isDayDate","formattedDate","includes","keyExtractor","getItemCount","getItem","object"],"sources":["C:/Users/fred/Desktop/client/src/components/RenderMonth.js"],"sourcesContent":["import React, { memo, useMemo } from 'react';\r\nimport { View, Text, TouchableOpacity, VirtualizedList } from 'react-native';\r\nimport { format, startOfMonth, endOfMonth, startOfWeek, endOfWeek, addDays } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\nimport styles from '../styles/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst calculateWeeks = (date) => {\r\n    const start = startOfWeek(startOfMonth(date));\r\n    const end = endOfWeek(endOfMonth(date));\r\n    const weeks = [];\r\n    let currentDay = start;\r\n\r\n    while (currentDay <= end) {\r\n        const currentWeek = Array.from({ length: 7 }, (_, i) => addDays(currentDay, i));\r\n        weeks.push(currentWeek.map(day => day.getMonth() === date.getMonth() ? day : null));\r\n        currentDay = addDays(currentWeek[6], 1);\r\n    }\r\n    return weeks;\r\n};\r\n\r\nconst Day = memo(({ day, handleDatePress, isSelectedDay, hasTask }) => {\r\n    if (!day) return <View style={styles.dayContainer} />;\r\n\r\n    const formattedDay = format(day, 'd', { locale: ru });\r\n    const textStyle = [styles.dayText, isSelectedDay && styles.today];\r\n\r\n    return (\r\n        <View style={styles.dayContainer}>\r\n            <TouchableOpacity\r\n                style={[styles.dayButton, { flex: 1 }]}\r\n                onPress={() => handleDatePress(day)}\r\n            >\r\n                <Text style={textStyle}>{formattedDay}</Text>\r\n                {hasTask && <View style={styles.taskDotActive} />}\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n});\r\n\r\nDay.propTypes = {\r\n    day: PropTypes.instanceOf(Date),\r\n    handleDatePress: PropTypes.func.isRequired,\r\n    isSelectedDay: PropTypes.bool.isRequired,\r\n    hasTask: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst RenderMonth = memo(({ date, handleDatePress, taskDates }) => {\r\n    const weeks = useMemo(() => calculateWeeks(date), [date]);\r\n    const todayFormatted = format(new Date(), 'yyyy-MM-dd');\r\n\r\n    return (\r\n        <View style={styles.monthContainer}>\r\n            <Text style={styles.monthName}>{format(date, 'MMMM', { locale: ru })}</Text>\r\n            <VirtualizedList\r\n                data={weeks}\r\n                renderItem={({ item: week }) => (\r\n                    <View style={styles.weekContainer}>\r\n                        {week.map((day, index) => {\r\n                            const isDayDate = day instanceof Date;\r\n                            const formattedDate = isDayDate ? format(day, 'yyyy-MM-dd') : `empty-${index}`;\r\n                            const hasTask = isDayDate && ['в процессе', 'новая'].includes(taskDates[formattedDate]);\r\n\r\n                            return (\r\n                                <Day\r\n                                    key={formattedDate}\r\n                                    day={day}\r\n                                    handleDatePress={handleDatePress}\r\n                                    isSelectedDay={todayFormatted === formattedDate}\r\n                                    hasTask={hasTask}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </View>\r\n                )}\r\n                keyExtractor={(_, index) => `week-${index}`}\r\n                getItemCount={() => weeks.length}\r\n                getItem={(data, index) => weeks[index]}\r\n            />\r\n        </View>\r\n    );\r\n});\r\n\r\nRenderMonth.propTypes = {\r\n    date: PropTypes.instanceOf(Date).isRequired,\r\n    handleDatePress: PropTypes.func.isRequired,\r\n    taskDates: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default RenderMonth;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}