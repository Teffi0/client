{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { hideAsync as hideSplashScreen } from 'expo-splash-screen';\nimport * as Font from 'expo-font';\nimport LoadingIndicator from \"../components/LoadingIndicator\";\nimport FontError from \"../components/FontError\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar fonts = {\n  'manrope-extrabold': require(\"../../assets/fonts/Manrope-ExtraBold.ttf\"),\n  'manrope-extralight': require(\"../../assets/fonts/Manrope-ExtraLight.ttf\"),\n  'manrope-light': require(\"../../assets/fonts/Manrope-Light.ttf\"),\n  'manrope-medium': require(\"../../assets/fonts/Manrope-Medium.ttf\"),\n  'manrope-regular': require(\"../../assets/fonts/Manrope-Regular.ttf\"),\n  'manrope-bold': require(\"../../assets/fonts/Manrope-Bold.ttf\"),\n  'manrope-semibold': require(\"../../assets/fonts/Manrope-SemiBold.ttf\")\n};\nexport default function SplashScreen(_ref) {\n  var onFontsLoaded = _ref.onFontsLoaded;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    fontError = _useState2[0],\n    setFontError = _useState2[1];\n  useEffect(function () {\n    function loadFonts() {\n      return _loadFonts.apply(this, arguments);\n    }\n    function _loadFonts() {\n      _loadFonts = _asyncToGenerator(function* () {\n        try {\n          yield Font.loadAsync(fonts);\n          yield hideSplashScreen();\n          onFontsLoaded();\n        } catch (e) {\n          setFontError(e);\n          onFontsLoaded(e);\n        }\n      });\n      return _loadFonts.apply(this, arguments);\n    }\n    loadFonts();\n  }, []);\n  return _jsx(SafeAreaView, {\n    style: styles.screen,\n    children: fontError ? _jsx(FontError, {\n      message: fontError.message\n    }) : _jsx(LoadingIndicator, {})\n  });\n}\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#FFFFFF'\n  },\n  errorText: {\n    color: 'red',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","StyleSheet","hideAsync","hideSplashScreen","Font","LoadingIndicator","FontError","SafeAreaView","jsx","_jsx","fonts","require","SplashScreen","_ref","onFontsLoaded","_useState","_useState2","_slicedToArray","fontError","setFontError","loadFonts","_loadFonts","apply","arguments","_asyncToGenerator","loadAsync","e","style","styles","screen","children","message","create","flex","justifyContent","alignItems","backgroundColor","errorText","color","textAlign"],"sources":["C:/Users/fred/Desktop/crm/src/screens/SplashScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { hideAsync as hideSplashScreen } from 'expo-splash-screen';\r\nimport * as Font from 'expo-font';\r\nimport LoadingIndicator from '../components/LoadingIndicator';\r\nimport FontError from '../components/FontError';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\n\r\nconst fonts = {\r\n  'manrope-extrabold': require('../../assets/fonts/Manrope-ExtraBold.ttf'),\r\n  'manrope-extralight': require('../../assets/fonts/Manrope-ExtraLight.ttf'),\r\n  'manrope-light': require('../../assets/fonts/Manrope-Light.ttf'),\r\n  'manrope-medium': require('../../assets/fonts/Manrope-Medium.ttf'),\r\n  'manrope-regular': require('../../assets/fonts/Manrope-Regular.ttf'),\r\n  'manrope-bold': require('../../assets/fonts/Manrope-Bold.ttf'),\r\n  'manrope-semibold': require('../../assets/fonts/Manrope-SemiBold.ttf'),\r\n};\r\n\r\nexport default function SplashScreen({ onFontsLoaded }) {\r\n  const [fontError, setFontError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function loadFonts() {\r\n      try {\r\n        await Font.loadAsync(fonts);\r\n        await hideSplashScreen();\r\n        onFontsLoaded();\r\n      } catch (e) {\r\n        setFontError(e);\r\n        onFontsLoaded(e);\r\n      }\r\n    }\r\n\r\n    loadFonts();\r\n  }, []);\r\n\r\n  return (\r\n    <SafeAreaView style={styles.screen}>\r\n      {fontError ? (\r\n        <FontError message={fontError.message} />\r\n      ) : (\r\n        <LoadingIndicator />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n  }\r\n});\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAEnD,SAASC,SAAS,IAAIC,gBAAgB,QAAQ,oBAAoB;AAClE,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,OAAOC,gBAAgB;AACvB,OAAOC,SAAS;AAChB,SAASC,YAAY,QAAQ,gCAAgC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE9D,IAAMC,KAAK,GAAG;EACZ,mBAAmB,EAAEC,OAAO,2CAA2C,CAAC;EACxE,oBAAoB,EAAEA,OAAO,4CAA4C,CAAC;EAC1E,eAAe,EAAEA,OAAO,uCAAuC,CAAC;EAChE,gBAAgB,EAAEA,OAAO,wCAAwC,CAAC;EAClE,iBAAiB,EAAEA,OAAO,yCAAyC,CAAC;EACpE,cAAc,EAAEA,OAAO,sCAAsC,CAAC;EAC9D,kBAAkB,EAAEA,OAAO,0CAA0C;AACvE,CAAC;AAED,eAAe,SAASC,YAAYA,CAAAC,IAAA,EAAoB;EAAA,IAAjBC,aAAa,GAAAD,IAAA,CAAbC,aAAa;EAClD,IAAAC,SAAA,GAAkChB,QAAQ,CAAC,IAAI,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9BlB,SAAS,CAAC,YAAM;IAAA,SACCsB,SAASA,CAAA;MAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAAA,SAAAF,WAAA;MAAAA,UAAA,GAAAG,iBAAA,CAAxB,aAA2B;QACzB,IAAI;UACF,MAAMpB,IAAI,CAACqB,SAAS,CAACf,KAAK,CAAC;UAC3B,MAAMP,gBAAgB,CAAC,CAAC;UACxBW,aAAa,CAAC,CAAC;QACjB,CAAC,CAAC,OAAOY,CAAC,EAAE;UACVP,YAAY,CAACO,CAAC,CAAC;UACfZ,aAAa,CAACY,CAAC,CAAC;QAClB;MACF,CAAC;MAAA,OAAAL,UAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OACEX,IAAA,CAACF,YAAY;IAACoB,KAAK,EAAEC,MAAM,CAACC,MAAO;IAAAC,QAAA,EAChCZ,SAAS,GACRT,IAAA,CAACH,SAAS;MAACyB,OAAO,EAAEb,SAAS,CAACa;IAAQ,CAAE,CAAC,GAEzCtB,IAAA,CAACJ,gBAAgB,IAAE;EACpB,CACW,CAAC;AAEnB;AAEA,IAAMuB,MAAM,GAAG3B,UAAU,CAAC+B,MAAM,CAAC;EAC/BH,MAAM,EAAE;IACNI,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDC,SAAS,EAAE;IACTC,KAAK,EAAE,KAAK;IACZC,SAAS,EAAE;EACb;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}