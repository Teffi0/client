{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\fred\\\\Desktop\\\\client\\\\src\\\\screens\\\\NewTaskScreen.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useReducer, useEffect, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styles from '../styles/styles';\nimport TaskForm from '../components/TaskForm';\nimport { SuccessModal } from '../components/SuccessModal';\nimport { formReducer, initialState } from '../reducers/formReducer';\nimport { fetchOptions, handleSaveTask, updateDraft, validateFormData } from '../utils/taskScreenHelpers';\nimport PropTypes from 'prop-types';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewTaskScreen(_ref) {\n  var onClose = _ref.onClose,\n    draftData = _ref.draftData,\n    selectedDate = _ref.selectedDate;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    userId = _useState2[0],\n    setUserId = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isSuccessModalVisible = _useState4[0],\n    setIsSuccessModalVisible = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isPressed = _useState6[0],\n    setIsPressed = _useState6[1];\n  var addButtonTextStyles = styles.addButtonText;\n  var _useReducer = useReducer(formReducer, initialState),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    formData = _useReducer2[0],\n    dispatchFormData = _useReducer2[1];\n  var addButtonTitle = formData.status !== 'отсутствует' ? \"Применить изменения\" : \"Добавить задачу\";\n  var getUserId = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var userId = yield AsyncStorage.getItem('userId');\n      setUserId(userId);\n    });\n    return function getUserId() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getUserId();\n  }, []);\n  var handleSave = useCallback(_asyncToGenerator(function* () {\n    if (formData.status === 'отсутствует') {\n      formData.status = \"новая\";\n    }\n    if (formData.status === 'черновик') {\n      var updatedFormData = _objectSpread(_objectSpread({}, formData), {}, {\n        status: 'новая'\n      });\n      if (validateFormData(updatedFormData)) {\n        yield updateDraft(draftData.id, updatedFormData);\n        setIsSuccessModalVisible(true);\n      }\n    } else {\n      var isValid = yield handleSaveTask(formData);\n      Alert.alert(\"Успешно\", \"Задача успешно добавлена\", [{\n        text: \"OK\",\n        onPress: function onPress() {\n          return onClose();\n        }\n      }]);\n    }\n  }), [formData, draftData, userId]);\n  useEffect(function () {\n    if (draftData) {\n      dispatchFormData({\n        type: 'SET_FORM',\n        payload: draftData\n      });\n    }\n  }, [draftData, dispatchFormData]);\n  var closeSuccessModal = function closeSuccessModal() {\n    setIsSuccessModalVisible(false);\n    onClose();\n  };\n  useEffect(function () {\n    if (userId) {\n      fetchOptions(userId, dispatchFormData);\n    }\n  }, [userId]);\n  useEffect(function () {\n    if (selectedDate) {\n      dispatchFormData({\n        type: 'UPDATE_FORM',\n        payload: {\n          startDate: selectedDate\n        }\n      });\n    } else {\n      dispatchFormData({\n        type: 'UPDATE_FORM',\n        payload: {\n          startDate: new Date()\n        }\n      });\n    }\n  }, [selectedDate]);\n  var addButtonStyles = _objectSpread(_objectSpread({}, styles.addButton), isPressed && styles.addButtonPressed);\n  return _jsxDEV(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: [_jsxDEV(TaskForm, {\n      formData: formData,\n      dispatchFormData: dispatchFormData,\n      onSave: handleSave,\n      onClose: onClose,\n      draftData: draftData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: addButtonStyles,\n      onPress: handleSave,\n      children: _jsxDEV(Text, {\n        style: addButtonTextStyles,\n        children: addButtonTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), _jsxDEV(SuccessModal, {\n      isVisible: isSuccessModalVisible,\n      onClose: closeSuccessModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\nNewTaskScreen.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  draftData: PropTypes.object,\n  selectedDate: PropTypes.instanceOf(Date)\n};\nexport default NewTaskScreen;","map":{"version":3,"names":["React","useState","useReducer","useEffect","useCallback","View","TouchableOpacity","Text","Alert","styles","TaskForm","SuccessModal","formReducer","initialState","fetchOptions","handleSaveTask","updateDraft","validateFormData","PropTypes","SafeAreaView","AsyncStorage","jsxDEV","_jsxDEV","NewTaskScreen","_ref","onClose","draftData","selectedDate","_useState","_useState2","_slicedToArray","userId","setUserId","_useState3","_useState4","isSuccessModalVisible","setIsSuccessModalVisible","_useState5","_useState6","isPressed","setIsPressed","addButtonTextStyles","addButtonText","_useReducer","_useReducer2","formData","dispatchFormData","addButtonTitle","status","getUserId","_ref2","_asyncToGenerator","getItem","apply","arguments","handleSave","updatedFormData","_objectSpread","id","isValid","alert","text","onPress","type","payload","closeSuccessModal","startDate","Date","addButtonStyles","addButton","addButtonPressed","style","flex","children","onSave","fileName","_jsxFileName","lineNumber","columnNumber","isVisible","propTypes","func","isRequired","object","instanceOf"],"sources":["C:/Users/fred/Desktop/client/src/screens/NewTaskScreen.js"],"sourcesContent":["import React, { useState, useReducer, useEffect, useCallback } from 'react';\r\nimport { View, TouchableOpacity, Text, Alert } from 'react-native';\r\nimport styles from '../styles/styles';\r\nimport TaskForm from '../components/TaskForm';\r\nimport { SuccessModal } from '../components/SuccessModal';\r\nimport { formReducer, initialState } from '../reducers/formReducer';\r\nimport { fetchOptions, handleSaveTask, updateDraft, validateFormData } from '../utils/taskScreenHelpers';\r\nimport PropTypes from 'prop-types';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nfunction NewTaskScreen({ onClose, draftData, selectedDate }) {\r\n  const [userId, setUserId] = useState(null);\r\n  const [isSuccessModalVisible, setIsSuccessModalVisible] = useState(false);\r\n  const [isPressed, setIsPressed] = useState(false);\r\n  const addButtonTextStyles = styles.addButtonText;\r\n  const [formData, dispatchFormData] = useReducer(formReducer, initialState);\r\n  const addButtonTitle = formData.status !== 'отсутствует' ? \"Применить изменения\" : \"Добавить задачу\";\r\n\r\n  const getUserId = async () => {\r\n    const userId = await AsyncStorage.getItem('userId');\r\n    setUserId(userId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserId();\r\n  }, []);\r\n\r\n  const handleSave = useCallback(async () => {\r\n    if (formData.status === 'отсутствует') {\r\n      formData.status = \"новая\";\r\n    }\r\n    if (formData.status === 'черновик') {\r\n      const updatedFormData = { ...formData, status: 'новая' };\r\n      // Валидируем обновленные данные\r\n      if (validateFormData(updatedFormData)) {\r\n        await updateDraft(draftData.id, updatedFormData);\r\n        setIsSuccessModalVisible(true); // Показываем модальное окно об успешном добавлении\r\n      }\r\n    } else {\r\n      // В противном случае обновляем статус и вызываем handleSaveTask\r\n      const isValid = await handleSaveTask(formData);\r\n      Alert.alert(\"Успешно\", \"Задача успешно добавлена\", [\r\n        { text: \"OK\", onPress: () => onClose() } // Закрытие формы при нажатии OK\r\n      ]);\r\n    }\r\n  }, [formData, draftData, userId]);\r\n\r\n  useEffect(() => {\r\n    if (draftData) {\r\n      // Инициализируем форму данными для редактирования\r\n      dispatchFormData({ type: 'SET_FORM', payload: draftData });\r\n    }\r\n  }, [draftData, dispatchFormData]);\r\n\r\n  const closeSuccessModal = () => {\r\n    setIsSuccessModalVisible(false);\r\n    onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      fetchOptions(userId, dispatchFormData);\r\n    }\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    if (selectedDate) {\r\n      // Заполняем начальную дату в formData\r\n      dispatchFormData({ type: 'UPDATE_FORM', payload: { startDate: selectedDate } });\r\n    } else {\r\n      // Если selectedDate не определен, устанавливаем сегодняшнюю дату\r\n      dispatchFormData({ type: 'UPDATE_FORM', payload: { startDate: new Date() } });\r\n    }\r\n  }, [selectedDate]);\r\n\r\n  const addButtonStyles = {\r\n    ...styles.addButton,\r\n    ...(isPressed && styles.addButtonPressed),\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1 }}>\r\n      <TaskForm\r\n        formData={formData}\r\n        dispatchFormData={dispatchFormData}\r\n        onSave={handleSave}\r\n        onClose={onClose}\r\n        draftData={draftData}\r\n      />\r\n      <TouchableOpacity style={addButtonStyles} onPress={handleSave}>\r\n        <Text style={addButtonTextStyles}>{addButtonTitle}</Text>\r\n      </TouchableOpacity>\r\n      <SuccessModal isVisible={isSuccessModalVisible} onClose={closeSuccessModal} />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nNewTaskScreen.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  draftData: PropTypes.object,\r\n  selectedDate: PropTypes.instanceOf(Date) // Убираем isRequired\r\n};\r\n\r\nexport default NewTaskScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}