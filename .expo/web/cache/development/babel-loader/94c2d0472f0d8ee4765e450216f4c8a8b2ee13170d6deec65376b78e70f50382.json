{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fred\\\\Desktop\\\\client\\\\src\\\\components\\\\RenderMonth.js\",\n  _this = this;\nimport React, { memo, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport VirtualizedList from \"react-native-web/dist/exports/VirtualizedList\";\nimport { format, startOfMonth, endOfMonth, startOfWeek, endOfWeek, addDays } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport styles from '../styles/styles';\nimport PropTypes from 'prop-types';\nvar calculateWeeks = function calculateWeeks(date) {\n  var start = startOfWeek(startOfMonth(date), {\n    weekStartsOn: 1\n  });\n  var end = endOfWeek(endOfMonth(date), {\n    weekStartsOn: 1\n  });\n  var currentDay = start;\n  var weeks = [];\n  while (currentDay <= end) {\n    weeks.push(Array.from({\n      length: 7\n    }, function (_, i) {\n      var day = addDays(currentDay, i);\n      return day.getMonth() === date.getMonth() ? day : null;\n    }));\n    currentDay = addDays(currentDay, 7);\n  }\n  return weeks;\n};\nvar Day = memo(function (_ref) {\n  var day = _ref.day,\n    handleDatePress = _ref.handleDatePress,\n    isSelectedDay = _ref.isSelectedDay,\n    hasTask = _ref.hasTask;\n  return React.createElement(View, {\n    style: styles.dayContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, day ? React.createElement(TouchableOpacity, {\n    style: [styles.dayButton, {\n      flex: 1\n    }],\n    onPress: function onPress() {\n      return handleDatePress(day);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: [styles.dayText, isSelectedDay && styles.today],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, format(day, 'd', {\n    locale: ru\n  })), hasTask && React.createElement(View, {\n    style: styles.taskDotActive,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  })) : null);\n});\nDay.propTypes = {\n  day: PropTypes.instanceOf(Date),\n  handleDatePress: PropTypes.func.isRequired,\n  isSelectedDay: PropTypes.bool.isRequired,\n  hasTask: PropTypes.bool\n};\nDay.defaultProps = {\n  hasTask: false\n};\nvar RenderMonth = memo(function (_ref2) {\n  var date = _ref2.date,\n    handleDatePress = _ref2.handleDatePress,\n    taskDates = _ref2.taskDates;\n  var weeks = useMemo(function () {\n    return calculateWeeks(date);\n  }, [date]);\n  var todayFormatted = format(new Date(), 'yyyy-MM-dd');\n  return React.createElement(View, {\n    style: styles.monthContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.monthName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, format(date, 'MMMM', {\n    locale: ru\n  })), React.createElement(VirtualizedList, {\n    data: weeks,\n    renderItem: function renderItem(_ref3) {\n      var week = _ref3.item;\n      return React.createElement(View, {\n        style: styles.weekContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, week.map(function (day, index) {\n        return React.createElement(Day, {\n          key: day ? format(day, 'yyyy-MM-dd') : `empty-${index}`,\n          day: day,\n          handleDatePress: handleDatePress,\n          isSelectedDay: !!day && format(day, 'yyyy-MM-dd') === todayFormatted,\n          hasTask: day ? ['в процессе', 'новая'].includes(taskDates[format(day, 'yyyy-MM-dd')]) : false,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }\n        });\n      }));\n    },\n    keyExtractor: function keyExtractor(_, index) {\n      return `week-${index}`;\n    },\n    getItemCount: function getItemCount() {\n      return weeks.length;\n    },\n    getItem: function getItem(data, index) {\n      return weeks[index];\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }));\n});\nRenderMonth.propTypes = {\n  date: PropTypes.instanceOf(Date).isRequired,\n  handleDatePress: PropTypes.func.isRequired,\n  taskDates: PropTypes.object.isRequired\n};\nexport default RenderMonth;","map":{"version":3,"names":["React","memo","useMemo","View","Text","TouchableOpacity","VirtualizedList","format","startOfMonth","endOfMonth","startOfWeek","endOfWeek","addDays","ru","styles","PropTypes","calculateWeeks","date","start","weekStartsOn","end","currentDay","weeks","push","Array","from","length","_","i","day","getMonth","Day","_ref","handleDatePress","isSelectedDay","hasTask","createElement","style","dayContainer","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","dayButton","flex","onPress","dayText","today","locale","taskDotActive","propTypes","instanceOf","Date","func","isRequired","bool","defaultProps","RenderMonth","_ref2","taskDates","todayFormatted","monthContainer","monthName","data","renderItem","_ref3","week","item","weekContainer","map","index","key","includes","keyExtractor","getItemCount","getItem","object"],"sources":["C:/Users/fred/Desktop/client/src/components/RenderMonth.js"],"sourcesContent":["import React, { memo, useMemo } from 'react';\r\nimport { View, Text, TouchableOpacity, VirtualizedList } from 'react-native';\r\nimport { format, startOfMonth, endOfMonth, startOfWeek, endOfWeek, addDays } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\nimport styles from '../styles/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst calculateWeeks = (date) => {\r\n    const start = startOfWeek(startOfMonth(date), { weekStartsOn: 1 });\r\n    const end = endOfWeek(endOfMonth(date), { weekStartsOn: 1 });\r\n    let currentDay = start;\r\n    const weeks = [];\r\n\r\n    while (currentDay <= end) {\r\n        weeks.push(Array.from({ length: 7 }, (_, i) => {\r\n            const day = addDays(currentDay, i);\r\n            return day.getMonth() === date.getMonth() ? day : null;\r\n        }));\r\n        currentDay = addDays(currentDay, 7);\r\n    }\r\n    return weeks;\r\n};\r\n\r\n\r\nconst Day = memo(({ day, handleDatePress, isSelectedDay, hasTask }) => (\r\n    <View style={styles.dayContainer}>\r\n        {day ? (\r\n            <TouchableOpacity\r\n                style={[styles.dayButton, { flex: 1 }]}\r\n                onPress={() => handleDatePress(day)}\r\n            >\r\n                <Text style={[styles.dayText, isSelectedDay && styles.today]}>\r\n                    {format(day, 'd', { locale: ru })}\r\n                </Text>\r\n                {hasTask && <View style={styles.taskDotActive} />}\r\n            </TouchableOpacity>\r\n        ) : null}\r\n    </View>\r\n));\r\n\r\nDay.propTypes = {\r\n    day: PropTypes.instanceOf(Date),\r\n    handleDatePress: PropTypes.func.isRequired,\r\n    isSelectedDay: PropTypes.bool.isRequired,\r\n    hasTask: PropTypes.bool\r\n};\r\n\r\nDay.defaultProps = {\r\n    hasTask: false\r\n};\r\n\r\nconst RenderMonth = memo(({ date, handleDatePress, taskDates }) => {\r\n    const weeks = useMemo(() => calculateWeeks(date), [date]);\r\n    const todayFormatted = format(new Date(), 'yyyy-MM-dd');\r\n\r\n    return (\r\n        <View style={styles.monthContainer}>\r\n            <Text style={styles.monthName}>{format(date, 'MMMM', { locale: ru })}</Text>\r\n            <VirtualizedList\r\n                data={weeks}\r\n                renderItem={({ item: week }) => (\r\n                    <View style={styles.weekContainer}>\r\n                        {week.map((day, index) => (\r\n                            <Day\r\n                                key={day ? format(day, 'yyyy-MM-dd') : `empty-${index}`}\r\n                                day={day}\r\n                                handleDatePress={handleDatePress}\r\n                                isSelectedDay={!!day && format(day, 'yyyy-MM-dd') === todayFormatted}\r\n                                hasTask={day ? ['в процессе', 'новая'].includes(taskDates[format(day, 'yyyy-MM-dd')]) : false}\r\n                            />\r\n                        ))}\r\n                    </View>\r\n                )}\r\n                keyExtractor={(_, index) => `week-${index}`}\r\n                getItemCount={() => weeks.length}\r\n                getItem={(data, index) => weeks[index]}\r\n            />\r\n        </View>\r\n    );\r\n});\r\n\r\nRenderMonth.propTypes = {\r\n    date: PropTypes.instanceOf(Date).isRequired,\r\n    handleDatePress: PropTypes.func.isRequired,\r\n    taskDates: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default RenderMonth;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}