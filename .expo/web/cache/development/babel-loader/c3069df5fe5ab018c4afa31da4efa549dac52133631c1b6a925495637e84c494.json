{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\nvar _styles = _interopRequireDefault(require(\"../styles/styles\"));\nvar _DateInput = _interopRequireDefault(require(\"./DateInput\"));\nvar _DropdownEmployee = _interopRequireDefault(require(\"./DropdownEmployee\"));\nvar _DropdownService = _interopRequireDefault(require(\"./DropdownService\"));\nvar _reactNativeModalDatetimePicker = _interopRequireDefault(require(\"react-native-modal-datetime-picker\"));\nvar _icons = require(\"../icons\");\nvar _dateFns = require(\"date-fns\");\nvar _DropdownWithSearch = _interopRequireDefault(require(\"./DropdownWithSearch\"));\nvar _axios = _interopRequireDefault(require(\"axios\"));\nvar _tasks = require(\"../utils/tasks\");\nvar _taskScreenHelpers = require(\"../utils/taskScreenHelpers\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"C:\\\\Users\\\\fred\\\\Desktop\\\\client\\\\src\\\\components\\\\TaskForm.js\";\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction TaskForm(_ref) {\n  var _this = this;\n  var formData = _ref.formData,\n    dispatchFormData = _ref.dispatchFormData,\n    onClose = _ref.onClose,\n    draftData = _ref.draftData;\n  var _useState = (0, _react.useState)([]),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    selectedService = _useState2[0],\n    setSelectedService = _useState2[1];\n  var _useState3 = (0, _react.useState)([]),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    selectedEmployee = _useState4[0],\n    setSelectedEmployee = _useState4[1];\n  var _useState5 = (0, _react.useState)([]),\n    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n    service = _useState6[0],\n    setServices = _useState6[1];\n  var _useState7 = (0, _react.useState)([]),\n    _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n    employees = _useState8[0],\n    setEmployees = _useState8[1];\n  var _useState9 = (0, _react.useState)([]),\n    _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n    clients = _useState10[0],\n    setClients = _useState10[1];\n  var _useState11 = (0, _react.useState)(null),\n    _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n    selectedClient = _useState12[0],\n    setSelectedClient = _useState12[1];\n  var _useState13 = (0, _react.useState)(false),\n    _useState14 = (0, _slicedToArray2.default)(_useState13, 2),\n    isFormInitialized = _useState14[0],\n    setIsFormInitialized = _useState14[1];\n  var _useState15 = (0, _react.useState)(false),\n    _useState16 = (0, _slicedToArray2.default)(_useState15, 2),\n    isNewClientAdded = _useState16[0],\n    setIsNewClientAdded = _useState16[1];\n  var _useState17 = (0, _react.useState)(false),\n    _useState18 = (0, _slicedToArray2.default)(_useState17, 2),\n    isAddingNewClient = _useState18[0],\n    setIsAddingNewClient = _useState18[1];\n  var _useState19 = (0, _react.useState)(false),\n    _useState20 = (0, _slicedToArray2.default)(_useState19, 2),\n    isClientFromDraft = _useState20[0],\n    setIsClientFromDraft = _useState20[1];\n  var _useState21 = (0, _react.useState)(false),\n    _useState22 = (0, _slicedToArray2.default)(_useState21, 2),\n    isDeleteConfirmationVisible = _useState22[0],\n    setDeleteConfirmationVisible = _useState22[1];\n  var _useState23 = (0, _react.useState)({\n      city: '',\n      street: '',\n      house: '',\n      entrance: '',\n      floor: ''\n    }),\n    _useState24 = (0, _slicedToArray2.default)(_useState23, 2),\n    address = _useState24[0],\n    setAddress = _useState24[1];\n  var resetForm = function resetForm() {\n    setIsNewClientAdded(false);\n    setSelectedClient(null);\n    setAddress({\n      city: '',\n      street: '',\n      house: '',\n      entrance: '',\n      floor: ''\n    });\n    setField('phoneClient', '');\n  };\n  var handleOpenAddClientForm = function handleOpenAddClientForm() {\n    setIsAddingNewClient(true);\n    resetForm();\n  };\n  var renderClientButton = function renderClientButton() {\n    if (isClientFromDraft || selectedClient && !isAddingNewClient) {\n      return (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n        onPress: handleUpdateClient,\n        style: _styles.default.buttonClose,\n        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: _styles.default.textStyle,\n          children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\"\n        })\n      });\n    } else if (isAddingNewClient) {\n      return (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n        onPress: handleAddClient,\n        style: _styles.default.buttonClose,\n        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: _styles.default.textStyle,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\"\n        })\n      });\n    } else {\n      return (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n        onPress: handleOpenAddClientForm,\n        style: _styles.default.buttonClose,\n        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: _styles.default.textStyle,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\"\n        })\n      });\n    }\n  };\n  var fetchClients = (0, _react.useCallback)((0, _asyncToGenerator2.default)(function* () {\n    try {\n      var response = yield _axios.default.get(`http://31.129.101.174/clients`);\n      setClients(response.data);\n    } catch (error) {\n      console.error('Ошибка при получении списка клиентов:', error);\n    }\n  }), []);\n  (0, _react.useEffect)(function () {\n    fetchClients();\n  }, [fetchClients]);\n  var fetchServices = (0, _react.useCallback)((0, _asyncToGenerator2.default)(function* () {\n    try {\n      var response = yield fetch('http://31.129.101.174/services');\n      var data = yield response.json();\n      setServices(data);\n    } catch (error) {\n      console.error('Ошибка при получении инвентаря:', error);\n    }\n  }), []);\n  var fetchEmployees = (0, _react.useCallback)(function () {\n    var _ref4 = (0, _asyncToGenerator2.default)(function* (taskId) {\n      try {\n        var participantData = yield (0, _tasks.fetchTaskParticipants)(taskId);\n        if (Array.isArray(participantData)) {\n          setEmployees(participantData);\n          var participantIds = participantData.map(function (p) {\n            return p.id;\n          });\n          setSelectedEmployee(participantIds);\n        } else {\n          console.error('Полученные данные не являются массивом:', participantData);\n        }\n      } catch (error) {\n        console.error('Ошибка при получении данных сотрудников:', error);\n      }\n    });\n    return function (_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), []);\n  (0, _react.useEffect)(function () {\n    fetchServices();\n    if (draftData && !isFormInitialized) {\n      fetchEmployees(draftData.id);\n    }\n  }, [fetchServices, draftData, isFormInitialized, fetchEmployees]);\n  (0, _react.useEffect)(function () {\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        selectedService: selectedService\n      }\n    });\n  }, [selectedService, dispatchFormData]);\n  (0, _react.useEffect)(function () {\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        selectedEmployee: selectedEmployee\n      }\n    });\n  }, [selectedEmployee, dispatchFormData]);\n  (0, _react.useEffect)(function () {\n    if (draftData && !isFormInitialized) {\n      (0, _asyncToGenerator2.default)(function* () {\n        var serviceNames = yield (0, _tasks.fetchServiceNamesByIds)(draftData.service);\n        if (!serviceNames.noServices) {\n          var serviceIds = Object.keys(serviceNames).map(Number);\n          setSelectedService(serviceIds);\n        }\n        var employeeData = yield (0, _tasks.fetchTaskParticipants)(draftData.id);\n        if (employeeData && Array.isArray(employeeData)) {\n          var employeeIds = employeeData.map(function (employee) {\n            return employee.id;\n          });\n          setSelectedEmployee(employeeIds);\n        }\n        var formatTimeString = function formatTimeString(timeString) {\n          return timeString ? new Date('1970-01-01T' + timeString + 'Z') : null;\n        };\n        var formattedDraftData = Object.assign({}, draftData, {\n          cost: draftData.cost ? draftData.cost.toString() : '',\n          description: draftData.description || '',\n          startDate: draftData.start_date ? new Date(draftData.start_date) : null,\n          endDate: draftData.end_date ? new Date(draftData.end_date) : null,\n          startDateTime: formatTimeString(draftData.start_time),\n          endDateTime: formatTimeString(draftData.end_time),\n          paymentMethod: draftData.payment || '',\n          fullnameClient: draftData.fullname_client || '',\n          phone: draftData.phone || '',\n          selectedResponsible: draftData.responsible || '',\n          addressClient: draftData.address_client || ''\n        });\n        if (formattedDraftData.fullnameClient) {\n          var client = clients.find(function (c) {\n            return c.full_name === formattedDraftData.fullnameClient;\n          });\n          if (client) {\n            setSelectedClient(client);\n            setIsClientFromDraft(true);\n          }\n        }\n        setIsFormInitialized(true);\n        if (JSON.stringify(formData) !== JSON.stringify(formattedDraftData)) {\n          dispatchFormData({\n            type: 'SET_FORM',\n            payload: formattedDraftData\n          });\n        }\n      })();\n    }\n  }, [draftData, formData, dispatchFormData, isFormInitialized, _tasks.fetchServiceNamesByIds, _tasks.fetchTaskParticipants, clients]);\n  (0, _react.useEffect)(function () {\n    if (formData.fullnameClient) {\n      var _selectedClient = clients.find(function (client) {\n        return client.full_name === formData.fullnameClient;\n      });\n      if (_selectedClient) {\n        var addressRegex = /город\\s([^,]+), улица\\s([^,]+), дом\\s([^,]+), подъезд\\s([^,]+), этаж\\s([^,]+)/;\n        var addressMatch = _selectedClient.address.match(addressRegex);\n        if (addressMatch) {\n          setAddress({\n            city: addressMatch[1] || '',\n            street: addressMatch[2] || '',\n            house: addressMatch[3] || '',\n            entrance: addressMatch[4] || '',\n            floor: addressMatch[5] || ''\n          });\n          setField('phoneClient', _selectedClient.phone_number || '');\n          setIsNewClientAdded(true);\n        }\n      } else {\n        setAddress({\n          city: '',\n          street: '',\n          house: '',\n          entrance: '',\n          floor: ''\n        });\n        setField('phoneClient', '');\n        setIsNewClientAdded(false);\n      }\n    }\n  }, [formData.fullnameClient, clients]);\n  (0, _react.useEffect)(function () {\n    if (draftData) {\n      Object.entries(draftData).forEach(function (_ref6) {\n        var _ref7 = (0, _slicedToArray2.default)(_ref6, 2),\n          key = _ref7[0],\n          value = _ref7[1];\n        dispatchFormData({\n          type: 'UPDATE_FORM',\n          payload: (0, _defineProperty2.default)({}, key, value)\n        });\n      });\n    }\n  }, [draftData, dispatchFormData]);\n  (0, _react.useEffect)(function () {\n    var totalCost = 0;\n    selectedService.forEach(function (serviceId) {\n      var serviceItem = service.find(function (s) {\n        return s.id === serviceId;\n      });\n      if (serviceItem) {\n        totalCost += parseInt(serviceItem.cost, 10);\n      }\n    });\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        cost: totalCost.toString()\n      }\n    });\n  }, [selectedService, service, dispatchFormData]);\n  var updateTotalCost = (0, _react.useCallback)(function (selectedItems) {\n    var totalCost = 0;\n    selectedItems.forEach(function (item) {\n      var serviceItem = service.find(function (s) {\n        return s.id === item.id;\n      });\n      if (serviceItem) {\n        totalCost += parseInt(serviceItem.cost, 10);\n      }\n    });\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        cost: totalCost.toString()\n      }\n    });\n  }, [service, dispatchFormData]);\n  var handleSave = (0, _react.useCallback)((0, _asyncToGenerator2.default)(function* () {\n    var updatedFormData = Object.assign({}, formData);\n    if (!updatedFormData.startDate) {\n      var today = new Date();\n      updatedFormData.startDate = (0, _dateFns.format)(today, 'yyyy-MM-dd');\n    }\n    updatedFormData.status = 'черновик';\n    try {\n      var isUpdating = draftData && draftData.id;\n      if (isUpdating) {\n        yield (0, _taskScreenHelpers.updateDraft)(draftData.id, updatedFormData);\n      } else {\n        yield (0, _taskScreenHelpers.handleSaveTask)(updatedFormData);\n      }\n    } catch (error) {\n      console.error('Ошибка сохранения задачи', error);\n    }\n  }), [formData, draftData, _taskScreenHelpers.handleSaveTask]);\n  var handleAddClient = function () {\n    var _ref9 = (0, _asyncToGenerator2.default)(function* () {\n      var clientData = {\n        full_name: formData.fullnameClient,\n        phone_number: formData.phoneClient,\n        address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`\n      };\n      try {\n        var response = yield _axios.default.post(`http://31.129.101.174/clients`, clientData);\n        alert('Клиент успешно добавлен');\n        setClients([].concat((0, _toConsumableArray2.default)(clients), [response.data]));\n        setSelectedClient(response.data);\n        setIsAddingNewClient(false);\n      } catch (error) {\n        console.error('Ошибка при добавлении клиента:', error);\n      }\n    });\n    return function handleAddClient() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  (0, _react.useEffect)(function () {\n    if (selectedClient && !isNewClientAdded) {\n      var updatedClientData = Object.assign({}, selectedClient, {\n        address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`,\n        phone_number: formData.phoneClient\n      });\n      setClients(function (prevClients) {\n        return prevClients.map(function (client) {\n          return client.id === selectedClient.id ? updatedClientData : client;\n        });\n      });\n      setIsNewClientAdded(true);\n    }\n  }, [selectedClient, address, formData.phoneClient]);\n  var handleUpdateClient = function () {\n    var _ref10 = (0, _asyncToGenerator2.default)(function* () {\n      var city = address.city,\n        street = address.street,\n        house = address.house,\n        entrance = address.entrance,\n        floor = address.floor;\n      var fullAddress = `город ${city}, улица ${street}, дом ${house}, подъезд ${entrance}, этаж ${floor}`;\n      setField('addressClient', fullAddress);\n      if (!selectedClient) {\n        alert('Клиент не выбран.');\n        return;\n      }\n      var updatedClientData = {\n        full_name: formData.fullnameClient,\n        phone_number: formData.phoneClient,\n        address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`\n      };\n      try {\n        yield _axios.default.put(`http://31.129.101.174/clients/${selectedClient.id}`, updatedClientData);\n        alert('Данные клиента обновлены');\n        var updatedClients = clients.map(function (client) {\n          return client.id === selectedClient.id ? Object.assign({}, client, updatedClientData) : client;\n        });\n        setClients(updatedClients);\n      } catch (error) {\n        console.error('Ошибка при обновлении данных клиента:', error);\n      }\n    });\n    return function handleUpdateClient() {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n  var handleAddressChange = (0, _react.useCallback)(function (field, value) {\n    setAddress(function (prev) {\n      return Object.assign({}, prev, (0, _defineProperty2.default)({}, field, value));\n    });\n  }, []);\n  var handleCostChange = (0, _react.useCallback)(function (text) {\n    var newText = text.replace(/^0+/, '');\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        cost: newText\n      }\n    });\n  }, [dispatchFormData]);\n  (0, _react.useEffect)(function () {\n    var backHandler = _reactNative.BackHandler.addEventListener('hardwareBackPress', function () {\n      _reactNative.Alert.alert(\"Сохранить как черновик?\", \"Вы хотите сохранить эту задачу как черновик?\", [{\n        text: \"Нет\",\n        onPress: onClose,\n        style: \"cancel\"\n      }, {\n        text: \"Сохранить\",\n        onPress: function onPress() {\n          handleSave();\n          onClose;\n        }\n      }], {\n        cancelable: false\n      });\n      return true;\n    });\n    return function () {\n      return backHandler.remove();\n    };\n  }, [formData, onClose, handleSave]);\n  var handleBackPress = function handleBackPress() {\n    _reactNative.Alert.alert(\"Сохранить как черновик?\", \"Вы хотите сохранить эту задачу как черновик?\", [{\n      text: \"Нет\",\n      onPress: onClose,\n      style: \"cancel\"\n    }, {\n      text: \"Сохранить\",\n      onPress: function onPress() {\n        handleSave();\n        onClose();\n      }\n    }], {\n      cancelable: false\n    });\n    return true;\n  };\n  var handleDelete = (0, _react.useCallback)((0, _asyncToGenerator2.default)(function* () {\n    dispatchFormData({\n      type: 'RESET_FORM'\n    });\n  }), [dispatchFormData]);\n  var deleteTask = function () {\n    var _ref12 = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        var response = yield _axios.default.delete(`http://31.129.101.174/tasks/${formData.id}`);\n        if (response.status === 200) {\n          dispatchFormData({\n            type: 'RESET_FORM'\n          });\n          onClose();\n        }\n      } catch (error) {\n        console.error('Ошибка при удалении задачи:', error);\n      }\n    });\n    return function deleteTask() {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n  var handleDeletePress = function handleDeletePress() {\n    if (formData.status && formData.status !== \"отсутствует\") {\n      setDeleteConfirmationVisible(true);\n    } else {\n      dispatchFormData({\n        type: 'RESET_FORM'\n      });\n      onClose();\n    }\n  };\n  var showDeleteConfirmationAlert = function showDeleteConfirmationAlert() {\n    _reactNative.Alert.alert(\"Подтвердите удаление\", \"Вы уверены, что хотите удалить эту задачу?\", [{\n      text: \"Нет\",\n      onPress: function onPress() {\n        return setDeleteConfirmationVisible(false);\n      },\n      style: \"cancel\"\n    }, {\n      text: \"Да\",\n      onPress: deleteTask\n    }]);\n  };\n  (0, _react.useEffect)(function () {\n    if (isDeleteConfirmationVisible) {\n      showDeleteConfirmationAlert();\n    }\n  }, [isDeleteConfirmationVisible]);\n  var setField = (0, _react.useCallback)(function (field, value) {\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: (0, _defineProperty2.default)({}, field, value)\n    });\n  }, [dispatchFormData]);\n  var handleChange = (0, _react.useCallback)(function (field) {\n    return function (value) {\n      if (field === 'fullnameClient') {\n        var client = clients.find(function (client) {\n          return client.full_name === value;\n        });\n        setSelectedClient(client || null);\n      }\n      setField(field, value);\n    };\n  }, [setField, clients]);\n  var toggleStartPicker = (0, _react.useCallback)(function () {\n    setField('isStartPickerVisible', !formData.isStartPickerVisible);\n  }, [formData.isStartPickerVisible, setField]);\n  var toggleEndPicker = (0, _react.useCallback)(function () {\n    setField('isEndPickerVisible', !formData.isEndPickerVisible);\n  }, [formData.isEndPickerVisible, setField]);\n  var handleStartPicked = (0, _react.useCallback)(function (date) {\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        startDateTime: date\n      }\n    });\n    toggleStartPicker();\n  }, [toggleStartPicker, dispatchFormData]);\n  var handleEndPicked = (0, _react.useCallback)(function (date) {\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        endDateTime: date\n      }\n    });\n    toggleEndPicker();\n  }, [toggleEndPicker, dispatchFormData]);\n  var handleServiceChange = (0, _react.useCallback)(function (newSelectedServiceIds) {\n    setSelectedService(newSelectedServiceIds);\n    dispatchFormData({\n      type: 'UPDATE_FORM',\n      payload: {\n        selectedService: newSelectedServiceIds\n      }\n    });\n  }, [dispatchFormData]);\n  return (0, _jsxRuntime.jsx)(_reactNativeSafeAreaContext.SafeAreaView, {\n    style: _styles.default.container,\n    children: (0, _jsxRuntime.jsxs)(_reactNative.View, {\n      style: _styles.default.contentContainerTask,\n      children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n        style: _styles.default.taskHeader,\n        children: [(0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n          onPress: handleBackPress,\n          children: (0, _jsxRuntime.jsx)(_icons.BackIcon, {})\n        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: [_styles.default.titleMedium, {\n            flex: 1,\n            textAlign: 'center'\n          }],\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"\n        }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n          onPress: handleDeletePress,\n          children: (0, _jsxRuntime.jsx)(_icons.DeleteIcon, {})\n        })]\n      }), (0, _jsxRuntime.jsxs)(_reactNative.ScrollView, {\n        showsVerticalScrollIndicator: false,\n        overScrollMode: \"never\",\n        children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n          style: [_styles.default.contentContainer, {\n            backgroundColor: \"#f9f9f9\",\n            borderRadius: 24,\n            marginBottom: 24\n          }],\n          children: [tryRender(function () {\n            return (0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {\n              children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n                style: [_styles.default.headlineMedium, {\n                  marginBottom: 24\n                }],\n                children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\"\n              })\n            });\n          }), tryRender(function () {\n            return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n              children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n                style: {\n                  flex: 1,\n                  marginBottom: 24\n                },\n                children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                  style: _styles.default.label,\n                  children: \"\\u0421\\u043F\\u043E\\u0441\\u043E\\u0431 \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B\"\n                }), (0, _jsxRuntime.jsx)(_DropdownService.default, {\n                  options: service,\n                  selectedValues: selectedService,\n                  onValueChange: handleServiceChange,\n                  updateTotalCost: updateTotalCost\n                })]\n              }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n                style: {\n                  flexDirection: 'row',\n                  marginBottom: 24\n                },\n                children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n                  style: {\n                    flex: 1\n                  },\n                  children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                    style: _styles.default.label,\n                    children: \"\\u0421\\u043F\\u043E\\u0441\\u043E\\u0431 \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B\"\n                  }), (0, _jsxRuntime.jsx)(_DropdownWithSearch.default, {\n                    options: formData.paymentMethodOptions,\n                    selectedValue: formData.paymentMethod,\n                    onValueChange: handleChange('paymentMethod')\n                  })]\n                }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n                  style: {\n                    flex: 1,\n                    marginLeft: 8\n                  },\n                  children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                    style: _styles.default.label,\n                    children: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\"\n                  }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n                    style: _styles.default.costInput,\n                    placeholder: \"1000\",\n                    value: formData.cost.toString(),\n                    onChangeText: handleCostChange,\n                    keyboardType: \"numeric\"\n                  })]\n                })]\n              })]\n            });\n          }), tryRender(function () {\n            return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n              style: {\n                flexDirection: 'row',\n                marginBottom: 24\n              },\n              children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n                style: {\n                  flex: 1,\n                  marginRight: 8\n                },\n                children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                  style: _styles.default.label,\n                  children: \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430\"\n                }), (0, _jsxRuntime.jsx)(_DateInput.default, {\n                  date: formData.startDate,\n                  placeholder: \"\\u0413\\u0413\\u0413\\u0413-\\u041C\\u041C-\\u0414\\u0414\",\n                  onDateChange: function onDateChange(dateType, selectedDate) {\n                    return dispatchFormData({\n                      type: 'UPDATE_FORM',\n                      payload: (0, _defineProperty2.default)({}, dateType, selectedDate)\n                    });\n                  },\n                  dateType: \"startDate\",\n                  minDate: new Date()\n                })]\n              }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n                style: {\n                  flex: 1\n                },\n                children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                  style: _styles.default.label,\n                  children: \"\\u041A\\u043E\\u043D\\u0435\\u0447\\u043D\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430\"\n                }), (0, _jsxRuntime.jsx)(_DateInput.default, {\n                  date: formData.endDate,\n                  placeholder: \"\\u0413\\u0413\\u0413\\u0413-\\u041C\\u041C-\\u0414\\u0414\",\n                  onDateChange: function onDateChange(dateType, selectedDate) {\n                    return dispatchFormData({\n                      type: 'UPDATE_FORM',\n                      payload: (0, _defineProperty2.default)({}, dateType, selectedDate)\n                    });\n                  },\n                  dateType: \"endDate\",\n                  minDate: new Date()\n                })]\n              })]\n            });\n          }), tryRender(function () {\n            return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n              style: {\n                flexDirection: 'row',\n                alignItems: 'center'\n              },\n              children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n                style: {\n                  flex: 1,\n                  marginRight: 8\n                },\n                children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                  style: _styles.default.label,\n                  children: \"\\u041D\\u0430\\u0447\\u0430\\u043B\\u043E \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\"\n                }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n                  onPress: toggleStartPicker,\n                  style: _styles.default.dateInputContainer,\n                  children: (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n                    value: formData.startDateTime ? (0, _dateFns.format)(formData.startDateTime, 'HH:mm') : '',\n                    placeholder: \"HH:mm\",\n                    editable: false,\n                    style: _styles.default.selectedItemText\n                  })\n                })]\n              }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n                style: {\n                  flex: 1\n                },\n                children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                  style: _styles.default.label,\n                  children: \"\\u041A\\u043E\\u043D\\u0435\\u0446 \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\"\n                }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n                  onPress: toggleEndPicker,\n                  style: _styles.default.dateInputContainer,\n                  children: (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n                    value: formData.endDateTime ? (0, _dateFns.format)(formData.endDateTime, 'HH:mm') : '',\n                    placeholder: \"HH:mm\",\n                    editable: false,\n                    style: _styles.default.selectedItemText\n                  })\n                })]\n              })]\n            });\n          }), (0, _jsxRuntime.jsx)(_reactNativeModalDatetimePicker.default, {\n            isVisible: formData.isStartPickerVisible,\n            mode: \"time\",\n            onConfirm: handleStartPicked,\n            onCancel: toggleStartPicker,\n            is24Hour: true,\n            date: formData.startDateTime || new Date()\n          }), (0, _jsxRuntime.jsx)(_reactNativeModalDatetimePicker.default, {\n            isVisible: formData.isEndPickerVisible,\n            mode: \"time\",\n            onConfirm: handleEndPicked,\n            onCancel: toggleEndPicker,\n            is24Hour: true,\n            date: formData.endDateTime || new Date()\n          })]\n        }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: [_styles.default.contentContainer, {\n            backgroundColor: \"#f9f9f9\",\n            borderRadius: 24,\n            marginBottom: 24\n          }],\n          children: tryRender(function () {\n            return (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {\n              children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                style: [_styles.default.headlineMedium, {\n                  marginBottom: 24\n                }],\n                children: \"\\u041A\\u043E\\u043C\\u0430\\u043D\\u0434\\u0430\"\n              }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n                style: {\n                  marginBottom: 24\n                },\n                children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                  style: _styles.default.label,\n                  children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439\"\n                }), (0, _jsxRuntime.jsx)(_DropdownWithSearch.default, {\n                  options: formData.responsibleOptions,\n                  selectedValue: formData.selectedResponsible,\n                  onValueChange: handleChange('selectedResponsible')\n                })]\n              }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n                children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                  style: _styles.default.label,\n                  children: \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0438\"\n                }), (0, _jsxRuntime.jsx)(_DropdownEmployee.default, {\n                  options: formData.employeesOptions,\n                  selectedValues: selectedEmployee,\n                  onValueChange: setSelectedEmployee\n                })]\n              })]\n            });\n          })\n        }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: [_styles.default.contentContainer, {\n            backgroundColor: \"#f9f9f9\",\n            borderRadius: 24,\n            marginBottom: 24\n          }],\n          children: tryRender(function () {\n            return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n              children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                style: [_styles.default.headlineMedium, {\n                  marginBottom: 24\n                }],\n                children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\"\n              }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n                style: {\n                  marginBottom: 24\n                },\n                children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                  style: _styles.default.label,\n                  children: \"\\u0424\\u0418\\u041E \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\"\n                }), (0, _jsxRuntime.jsx)(_DropdownWithSearch.default, {\n                  options: formData.fullnameClientOptions,\n                  selectedValue: formData.fullnameClient,\n                  onValueChange: function onValueChange(value) {\n                    handleChange('fullnameClient')(value);\n                    setAddress(function (prevAddress) {\n                      return Object.assign({}, prevAddress, {\n                        city: '',\n                        street: '',\n                        house: '',\n                        entrance: '',\n                        floor: ''\n                      });\n                    });\n                  }\n                })]\n              }), (isAddingNewClient || selectedClient) && (0, _jsxRuntime.jsx)(_reactNative.View, {\n                children: (0, _jsxRuntime.jsxs)(_reactNative.View, {\n                  style: {\n                    flexDirection: 'column'\n                  },\n                  children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                    style: _styles.default.label,\n                    children: \"\\u0413\\u043E\\u0440\\u043E\\u0434\"\n                  }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n                    placeholder: \"\\u0413\\u043E\\u0440\\u043E\\u0434\",\n                    value: address.city,\n                    onChangeText: function onChangeText(text) {\n                      return handleAddressChange('city', text);\n                    },\n                    style: [_styles.default.addressInput, {\n                      marginBottom: 24\n                    }]\n                  }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n                    style: _styles.default.label,\n                    children: \"\\u0423\\u043B\\u0438\\u0446\\u0430\"\n                  }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n                    placeholder: \"\\u0423\\u043B\\u0438\\u0446\\u0430\",\n                    value: address.street,\n                    onChangeText: function onChangeText(text) {\n                      return handleAddressChange('street', text);\n                    },\n                    style: [_styles.default.addressInput, {\n                      marginBottom: 24\n                    }]\n                  }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n                    style: {\n                      flexDirection: \"row\",\n                      alignItems: 'center',\n                      justifyContent: 'space-between'\n                    },\n                    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {\n                      style: {\n                        flexDirection: \"column\"\n                      },\n                      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                        style: _styles.default.label,\n                        children: \"\\u0414\\u043E\\u043C/\\u041A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430\"\n                      }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n                        placeholder: \"\\u0414\\u043E\\u043C/\\u041A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440\\u0430\",\n                        value: address.house,\n                        onChangeText: function onChangeText(text) {\n                          return handleAddressChange('house', text);\n                        },\n                        style: [_styles.default.addressInput, {\n                          marginBottom: 24\n                        }]\n                      })]\n                    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n                      style: {\n                        flexDirection: \"column\"\n                      },\n                      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                        style: _styles.default.label,\n                        children: \"\\u041F\\u043E\\u0434\\u044A\\u0435\\u0437\\u0434\"\n                      }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n                        placeholder: \"\\u041F\\u043E\\u0434\\u044A\\u0435\\u0437\\u0434\",\n                        value: address.entrance,\n                        onChangeText: function onChangeText(text) {\n                          return handleAddressChange('entrance', text);\n                        },\n                        style: [_styles.default.addressInput, {\n                          marginBottom: 24,\n                          marginRight: 8\n                        }]\n                      })]\n                    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n                      style: {\n                        flexDirection: \"column\"\n                      },\n                      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                        style: _styles.default.label,\n                        children: \"\\u042D\\u0442\\u0430\\u0436\"\n                      }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n                        placeholder: \"\\u042D\\u0442\\u0430\\u0436\",\n                        value: address.floor,\n                        onChangeText: function onChangeText(text) {\n                          return handleAddressChange('floor', text);\n                        },\n                        style: [_styles.default.addressInput, {\n                          marginBottom: 24,\n                          marginRight: 8\n                        }]\n                      })]\n                    })]\n                  }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n                    style: _styles.default.label,\n                    children: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\"\n                  }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n                    placeholder: \"+79999999999\",\n                    value: formData.phoneClient,\n                    onChangeText: function onChangeText(text) {\n                      return setField('phoneClient', text);\n                    },\n                    keyboardType: \"phone-pad\",\n                    style: [_styles.default.addressInput, {\n                      marginBottom: 24\n                    }]\n                  })]\n                })\n              }), renderClientButton()]\n            });\n          })\n        }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: {\n            marginBottom: 320\n          },\n          children: (0, _jsxRuntime.jsx)(_reactNative.View, {\n            style: [_styles.default.contentContainer, {\n              backgroundColor: \"#f9f9f9\",\n              borderRadius: 24\n            }],\n            children: tryRender(function () {\n              return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n                children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                  style: [_styles.default.headlineMedium, {\n                    marginBottom: 24\n                  }],\n                  children: \"\\u0414\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\"\n                }), (0, _jsxRuntime.jsxs)(_reactNative.View, {\n                  style: _styles.default.commentContainer,\n                  children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n                    style: _styles.default.label,\n                    children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435\"\n                  }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n                    placeholder: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u043F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435\",\n                    value: formData.description,\n                    onChangeText: function onChangeText(text) {\n                      return setField('description', text);\n                    },\n                    multiline: true,\n                    numberOfLines: 4,\n                    style: _styles.default.commentInput\n                  })]\n                })]\n              });\n            })\n          })\n        })]\n      })]\n    })\n  });\n  function tryRender(renderFunc) {\n    try {\n      return renderFunc();\n    } catch (error) {\n      console.error(\"Ошибка при отрисовке элемента:\", error);\n      return (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u043E\\u0442\\u0440\\u0438\\u0441\\u043E\\u0432\\u043A\\u0435\"\n      });\n    }\n  }\n}\nvar _default = exports.default = TaskForm;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_reactNativeSafeAreaContext","_styles","_interopRequireDefault","_DateInput","_DropdownEmployee","_DropdownService","_reactNativeModalDatetimePicker","_icons","_dateFns","_DropdownWithSearch","_axios","_tasks","_taskScreenHelpers","_jsxRuntime","_jsxFileName","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","TaskForm","_ref","_this","formData","dispatchFormData","onClose","draftData","_useState","useState","_useState2","_slicedToArray2","selectedService","setSelectedService","_useState3","_useState4","selectedEmployee","setSelectedEmployee","_useState5","_useState6","service","setServices","_useState7","_useState8","employees","setEmployees","_useState9","_useState10","clients","setClients","_useState11","_useState12","selectedClient","setSelectedClient","_useState13","_useState14","isFormInitialized","setIsFormInitialized","_useState15","_useState16","isNewClientAdded","setIsNewClientAdded","_useState17","_useState18","isAddingNewClient","setIsAddingNewClient","_useState19","_useState20","isClientFromDraft","setIsClientFromDraft","_useState21","_useState22","isDeleteConfirmationVisible","setDeleteConfirmationVisible","_useState23","city","street","house","entrance","floor","_useState24","address","setAddress","resetForm","setField","handleOpenAddClientForm","renderClientButton","jsx","TouchableOpacity","onPress","handleUpdateClient","style","styles","buttonClose","children","Text","textStyle","handleAddClient","fetchClients","useCallback","_asyncToGenerator2","response","axios","data","error","console","useEffect","fetchServices","fetch","json","fetchEmployees","_ref4","taskId","participantData","fetchTaskParticipants","Array","isArray","participantIds","map","p","id","_x","apply","arguments","type","payload","serviceNames","fetchServiceNamesByIds","noServices","serviceIds","keys","Number","employeeData","employeeIds","employee","formatTimeString","timeString","Date","formattedDraftData","assign","cost","toString","description","startDate","start_date","endDate","end_date","startDateTime","start_time","endDateTime","end_time","paymentMethod","payment","fullnameClient","fullname_client","phone","selectedResponsible","responsible","addressClient","address_client","client","find","c","full_name","JSON","stringify","addressRegex","addressMatch","match","phone_number","entries","forEach","_ref6","_ref7","key","value","_defineProperty2","totalCost","serviceId","serviceItem","s","parseInt","updateTotalCost","selectedItems","item","handleSave","updatedFormData","today","format","status","isUpdating","updateDraft","handleSaveTask","_ref9","clientData","phoneClient","post","alert","concat","_toConsumableArray2","updatedClientData","prevClients","_ref10","fullAddress","put","updatedClients","handleAddressChange","field","prev","handleCostChange","text","newText","replace","backHandler","BackHandler","addEventListener","Alert","cancelable","remove","handleBackPress","handleDelete","deleteTask","_ref12","delete","handleDeletePress","showDeleteConfirmationAlert","handleChange","toggleStartPicker","isStartPickerVisible","toggleEndPicker","isEndPickerVisible","handleStartPicked","date","handleEndPicked","handleServiceChange","newSelectedServiceIds","SafeAreaView","container","jsxs","View","contentContainerTask","taskHeader","BackIcon","titleMedium","flex","textAlign","DeleteIcon","ScrollView","showsVerticalScrollIndicator","overScrollMode","contentContainer","backgroundColor","borderRadius","marginBottom","tryRender","Fragment","headlineMedium","label","options","selectedValues","onValueChange","flexDirection","paymentMethodOptions","selectedValue","marginLeft","TextInput","costInput","placeholder","onChangeText","keyboardType","marginRight","onDateChange","dateType","selectedDate","minDate","alignItems","dateInputContainer","editable","selectedItemText","isVisible","mode","onConfirm","onCancel","is24Hour","responsibleOptions","employeesOptions","fullnameClientOptions","prevAddress","addressInput","justifyContent","commentContainer","multiline","numberOfLines","commentInput","renderFunc","_default","exports"],"sources":["C:/Users/fred/Desktop/client/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport { ScrollView, View, Text, TextInput, TouchableOpacity, Alert, BackHandler } from 'react-native';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport styles from '../styles/styles';\r\nimport DateInput from './DateInput';\r\nimport DropdownEmployee from './DropdownEmployee';\r\nimport DropdownService from './DropdownService';\r\nimport DateTimePickerModal from 'react-native-modal-datetime-picker';\r\nimport { BackIcon, DeleteIcon } from '../icons';\r\nimport { format } from 'date-fns';\r\nimport DropdownWithSearch from './DropdownWithSearch';\r\nimport axios from 'axios';\r\nimport { fetchServiceNamesByIds, fetchTaskParticipants } from '../utils/tasks';\r\nimport { handleSaveTask, updateDraft } from '../utils/taskScreenHelpers';\r\n\r\nfunction TaskForm({ formData, dispatchFormData, onClose, draftData }) {\r\n    const [selectedService, setSelectedService] = useState([]);\r\n    const [selectedEmployee, setSelectedEmployee] = useState([]);\r\n    const [service, setServices] = useState([]);\r\n    const [employees, setEmployees] = useState([]);\r\n    const [clients, setClients] = useState([]);\r\n    const [selectedClient, setSelectedClient] = useState(null);\r\n    const [isFormInitialized, setIsFormInitialized] = useState(false);\r\n    const [isNewClientAdded, setIsNewClientAdded] = useState(false);\r\n    const [isAddingNewClient, setIsAddingNewClient] = useState(false);\r\n    const [isClientFromDraft, setIsClientFromDraft] = useState(false);\r\n    const [isDeleteConfirmationVisible, setDeleteConfirmationVisible] = useState(false);\r\n    const [address, setAddress] = useState({\r\n        city: '',\r\n        street: '',\r\n        house: '',\r\n        entrance: '',\r\n        floor: ''\r\n    });\r\n\r\n    const resetForm = () => {\r\n        setIsNewClientAdded(false);\r\n        setSelectedClient(null);\r\n        setAddress({\r\n            city: '',\r\n            street: '',\r\n            house: '',\r\n            entrance: '',\r\n            floor: ''\r\n        });\r\n        setField('phoneClient', '');\r\n    };\r\n\r\n    const handleOpenAddClientForm = () => {\r\n        setIsAddingNewClient(true);\r\n        resetForm();\r\n    };\r\n\r\n    const renderClientButton = () => {\r\n        if (isClientFromDraft || (selectedClient && !isAddingNewClient)) {\r\n            return (\r\n                <TouchableOpacity onPress={handleUpdateClient} style={styles.buttonClose}>\r\n                    <Text style={styles.textStyle}>Обновить данные</Text>\r\n                </TouchableOpacity>\r\n            );\r\n        } else if (isAddingNewClient) {\r\n            return (\r\n                <TouchableOpacity onPress={handleAddClient} style={styles.buttonClose}>\r\n                    <Text style={styles.textStyle}>Добавить клиента</Text>\r\n                </TouchableOpacity>\r\n            );\r\n        } else {\r\n            return (\r\n                <TouchableOpacity onPress={handleOpenAddClientForm} style={styles.buttonClose}>\r\n                    <Text style={styles.textStyle}>Добавить нового клиента</Text>\r\n                </TouchableOpacity>\r\n            );\r\n        }\r\n    };\r\n\r\n    const fetchClients = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`http://31.129.101.174/clients`);\r\n            setClients(response.data);\r\n        } catch (error) {\r\n            console.error('Ошибка при получении списка клиентов:', error);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchClients();\r\n    }, [fetchClients]);\r\n\r\n    const fetchServices = useCallback(async () => {\r\n        try {\r\n            const response = await fetch('http://31.129.101.174/services');\r\n            const data = await response.json();\r\n            setServices(data);\r\n        } catch (error) {\r\n            console.error('Ошибка при получении инвентаря:', error);\r\n        }\r\n    }, []);\r\n\r\n    const fetchEmployees = useCallback(async (taskId) => {\r\n        try {\r\n            const participantData = await fetchTaskParticipants(taskId);\r\n            if (Array.isArray(participantData)) {\r\n                setEmployees(participantData);\r\n                const participantIds = participantData.map(p => p.id);\r\n                setSelectedEmployee(participantIds);\r\n            } else {\r\n                console.error('Полученные данные не являются массивом:', participantData);\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при получении данных сотрудников:', error);\r\n        }\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        fetchServices();\r\n        if (draftData && !isFormInitialized) {\r\n            fetchEmployees(draftData.id);\r\n        }\r\n    }, [fetchServices, draftData, isFormInitialized, fetchEmployees]);\r\n\r\n    useEffect(() => {\r\n        dispatchFormData({\r\n            type: 'UPDATE_FORM',\r\n            payload: { selectedService }\r\n        });\r\n    }, [selectedService, dispatchFormData]);\r\n\r\n    useEffect(() => {\r\n        dispatchFormData({\r\n            type: 'UPDATE_FORM',\r\n            payload: { selectedEmployee }\r\n        });\r\n    }, [selectedEmployee, dispatchFormData]);\r\n\r\n    useEffect(() => {\r\n        if (draftData && !isFormInitialized) {\r\n            (async () => {\r\n                const serviceNames = await fetchServiceNamesByIds(draftData.service);\r\n                if (!serviceNames.noServices) {\r\n                    const serviceIds = Object.keys(serviceNames).map(Number);\r\n                    setSelectedService(serviceIds);\r\n                }\r\n\r\n                const employeeData = await fetchTaskParticipants(draftData.id);\r\n                if (employeeData && Array.isArray(employeeData)) {\r\n                    const employeeIds = employeeData.map(employee => employee.id);\r\n                    setSelectedEmployee(employeeIds);\r\n                }\r\n\r\n                const formatTimeString = (timeString) => {\r\n                    return timeString ? new Date('1970-01-01T' + timeString + 'Z') : null;\r\n                };\r\n\r\n                const formattedDraftData = {\r\n                    ...draftData,\r\n                    cost: draftData.cost ? draftData.cost.toString() : '',\r\n                    description: draftData.description || '',\r\n                    startDate: draftData.start_date ? new Date(draftData.start_date) : null,\r\n                    endDate: draftData.end_date ? new Date(draftData.end_date) : null,\r\n                    startDateTime: formatTimeString(draftData.start_time),\r\n                    endDateTime: formatTimeString(draftData.end_time),\r\n                    paymentMethod: draftData.payment || '',\r\n                    fullnameClient: draftData.fullname_client || '',\r\n                    phone: draftData.phone || '',\r\n                    selectedResponsible: draftData.responsible || '',\r\n                    addressClient: draftData.address_client || '',\r\n                };\r\n\r\n                if (formattedDraftData.fullnameClient) {\r\n                    const client = clients.find(c => c.full_name === formattedDraftData.fullnameClient);\r\n                    if (client) {\r\n                        setSelectedClient(client);\r\n                        setIsClientFromDraft(true);\r\n                    }\r\n                }\r\n\r\n                setIsFormInitialized(true);\r\n\r\n                if (JSON.stringify(formData) !== JSON.stringify(formattedDraftData)) {\r\n                    dispatchFormData({\r\n                        type: 'SET_FORM',\r\n                        payload: formattedDraftData\r\n                    });\r\n                }\r\n            })();\r\n        }\r\n    }, [draftData, formData, dispatchFormData, isFormInitialized, fetchServiceNamesByIds, fetchTaskParticipants, clients]);\r\n\r\n    useEffect(() => {\r\n        if (formData.fullnameClient) {\r\n            const selectedClient = clients.find(client => client.full_name === formData.fullnameClient);\r\n\r\n            if (selectedClient) {\r\n                const addressRegex = /город\\s([^,]+), улица\\s([^,]+), дом\\s([^,]+), подъезд\\s([^,]+), этаж\\s([^,]+)/;\r\n                const addressMatch = selectedClient.address.match(addressRegex);\r\n\r\n                if (addressMatch) {\r\n                    setAddress({\r\n                        city: addressMatch[1] || '',\r\n                        street: addressMatch[2] || '',\r\n                        house: addressMatch[3] || '',\r\n                        entrance: addressMatch[4] || '',\r\n                        floor: addressMatch[5] || ''\r\n                    });\r\n                    setField('phoneClient', selectedClient.phone_number || '');\r\n                    setIsNewClientAdded(true);\r\n                }\r\n            } else {\r\n                setAddress({\r\n                    city: '',\r\n                    street: '',\r\n                    house: '',\r\n                    entrance: '',\r\n                    floor: ''\r\n                });\r\n                setField('phoneClient', '');\r\n                setIsNewClientAdded(false);\r\n            }\r\n        }\r\n    }, [formData.fullnameClient, clients]);\r\n\r\n    useEffect(() => {\r\n        if (draftData) {\r\n          Object.entries(draftData).forEach(([key, value]) => {\r\n            dispatchFormData({ type: 'UPDATE_FORM', payload: { [key]: value } });\r\n          });\r\n        }\r\n      }, [draftData, dispatchFormData]);\r\n\r\n    useEffect(() => {\r\n        let totalCost = 0;\r\n        selectedService.forEach(serviceId => {\r\n            const serviceItem = service.find(s => s.id === serviceId);\r\n            if (serviceItem) {\r\n                totalCost += parseInt(serviceItem.cost, 10);\r\n            }\r\n        });\r\n\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { cost: totalCost.toString() } });\r\n    }, [selectedService, service, dispatchFormData]);\r\n\r\n    const updateTotalCost = useCallback((selectedItems) => {\r\n        let totalCost = 0;\r\n        selectedItems.forEach(item => {\r\n            const serviceItem = service.find(s => s.id === item.id);\r\n            if (serviceItem) {\r\n                totalCost += parseInt(serviceItem.cost, 10);\r\n            }\r\n        });\r\n\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { cost: totalCost.toString() } });\r\n    }, [service, dispatchFormData]);\r\n\r\n    const handleSave = useCallback(async () => {\r\n        let updatedFormData = { ...formData };\r\n\r\n        if (!updatedFormData.startDate) {\r\n            const today = new Date();\r\n            updatedFormData.startDate = format(today, 'yyyy-MM-dd');\r\n        }\r\n\r\n        updatedFormData.status = 'черновик';\r\n\r\n        try {\r\n            const isUpdating = draftData && draftData.id;\r\n            if (isUpdating) {\r\n                await updateDraft(draftData.id, updatedFormData);\r\n            } else {\r\n                await handleSaveTask(updatedFormData);\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка сохранения задачи', error);\r\n        }\r\n    }, [formData, draftData, handleSaveTask]);\r\n\r\n    const handleAddClient = async () => {\r\n        const clientData = {\r\n            full_name: formData.fullnameClient,\r\n            phone_number: formData.phoneClient,\r\n            address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(`http://31.129.101.174/clients`, clientData);\r\n            alert('Клиент успешно добавлен');\r\n            setClients([...clients, response.data]);\r\n            setSelectedClient(response.data);\r\n            setIsAddingNewClient(false);\r\n        } catch (error) {\r\n            console.error('Ошибка при добавлении клиента:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (selectedClient && !isNewClientAdded) {\r\n          const updatedClientData = {\r\n            ...selectedClient,\r\n            address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`,\r\n            phone_number: formData.phoneClient\r\n          };\r\n      \r\n          setClients(prevClients => {\r\n            return prevClients.map(client => \r\n              client.id === selectedClient.id ? updatedClientData : client\r\n            );\r\n          });\r\n          \r\n          // Это установит флаг в true, чтобы предотвратить повторное обновление\r\n          setIsNewClientAdded(true);\r\n        }\r\n      }, [selectedClient, address, formData.phoneClient]);\r\n      \r\n\r\n    const handleUpdateClient = async () => {\r\n        const { city, street, house, entrance, floor } = address;\r\n        const fullAddress = `город ${city}, улица ${street}, дом ${house}, подъезд ${entrance}, этаж ${floor}`;\r\n        setField('addressClient', fullAddress);\r\n        if (!selectedClient) {\r\n            alert('Клиент не выбран.');\r\n            return;\r\n        }\r\n\r\n        const updatedClientData = {\r\n            full_name: formData.fullnameClient,\r\n            phone_number: formData.phoneClient,\r\n            address: `город ${address.city}, улица ${address.street}, дом ${address.house}, подъезд ${address.entrance}, этаж ${address.floor}`\r\n        };\r\n\r\n        try {\r\n            await axios.put(`http://31.129.101.174/clients/${selectedClient.id}`, updatedClientData);\r\n            alert('Данные клиента обновлены');\r\n\r\n            const updatedClients = clients.map(client =>\r\n                client.id === selectedClient.id ? { ...client, ...updatedClientData } : client\r\n            );\r\n            setClients(updatedClients);\r\n\r\n        } catch (error) {\r\n            console.error('Ошибка при обновлении данных клиента:', error);\r\n        }\r\n    };\r\n\r\n\r\n    const handleAddressChange = useCallback((field, value) => {\r\n        setAddress(prev => ({ ...prev, [field]: value }));\r\n    }, []);\r\n\r\n    const handleCostChange = useCallback(text => {\r\n        const newText = text.replace(/^0+/, '');\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { cost: newText } });\r\n    }, [dispatchFormData]);\r\n\r\n    useEffect(() => {\r\n        const backHandler = BackHandler.addEventListener(\r\n          'hardwareBackPress',\r\n          () => {\r\n            Alert.alert(\r\n              \"Сохранить как черновик?\",\r\n              \"Вы хотите сохранить эту задачу как черновик?\",\r\n              [\r\n                { \r\n                  text: \"Нет\", \r\n                  onPress: onClose, // Это закроет модальное окно без сохранения\r\n                  style: \"cancel\"\r\n                },\r\n                { \r\n                  text: \"Сохранить\", \r\n                  onPress: () => {\r\n                    handleSave(); // Сохраняем данные\r\n                    onClose; // Затем закрываем модальное окно\r\n                  }\r\n                }\r\n              ],\r\n              { cancelable: false }\r\n            );\r\n            return true; // Предотвращает действие по умолчанию\r\n          }\r\n        );\r\n      \r\n        return () => backHandler.remove();\r\n      }, [formData, onClose, handleSave]);\r\n      \r\n\r\n    const handleBackPress = () => {\r\n        Alert.alert(\r\n            \"Сохранить как черновик?\",\r\n            \"Вы хотите сохранить эту задачу как черновик?\",\r\n            [\r\n              { \r\n                text: \"Нет\", \r\n                onPress: onClose, // Это закроет модальное окно без сохранения\r\n                style: \"cancel\"\r\n              },\r\n              { \r\n                text: \"Сохранить\", \r\n                onPress: () => {\r\n                  handleSave(); // Сохраняем данные\r\n                  onClose(); // Затем закрываем модальное окно\r\n                }\r\n              }\r\n            ],\r\n            { cancelable: false }\r\n          );\r\n        return true; // Возвращает true, чтобы предотвратить действие по умолчанию\r\n    };\r\n\r\n    const handleDelete = useCallback(async () => {\r\n        dispatchFormData({ type: 'RESET_FORM' });\r\n    }, [dispatchFormData]);\r\n\r\n    const deleteTask = async () => {\r\n        try {\r\n            const response = await axios.delete(`http://31.129.101.174/tasks/${formData.id}`);\r\n            if (response.status === 200) {\r\n                dispatchFormData({ type: 'RESET_FORM' });\r\n                onClose();\r\n            }\r\n        } catch (error) {\r\n            console.error('Ошибка при удалении задачи:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeletePress = () => {\r\n        if (formData.status && formData.status !== \"отсутствует\") {\r\n            setDeleteConfirmationVisible(true);\r\n        } else {\r\n            dispatchFormData({ type: 'RESET_FORM' });\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    const showDeleteConfirmationAlert = () => {\r\n        Alert.alert(\r\n            \"Подтвердите удаление\",\r\n            \"Вы уверены, что хотите удалить эту задачу?\",\r\n            [\r\n                {\r\n                    text: \"Нет\",\r\n                    onPress: () => setDeleteConfirmationVisible(false),\r\n                    style: \"cancel\"\r\n                },\r\n                { text: \"Да\", onPress: deleteTask }\r\n            ]\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isDeleteConfirmationVisible) {\r\n            showDeleteConfirmationAlert();\r\n        }\r\n    }, [isDeleteConfirmationVisible]);\r\n\r\n    const setField = useCallback((field, value) => {\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { [field]: value } });\r\n    }, [dispatchFormData]);\r\n\r\n    const handleChange = useCallback((field) => (value) => {\r\n        if (field === 'fullnameClient') {\r\n            const client = clients.find(client => client.full_name === value);\r\n            setSelectedClient(client || null);\r\n        }\r\n        setField(field, value);\r\n    }, [setField, clients]);\r\n\r\n    const toggleStartPicker = useCallback(() => {\r\n        setField('isStartPickerVisible', !formData.isStartPickerVisible);\r\n    }, [formData.isStartPickerVisible, setField]);\r\n\r\n    const toggleEndPicker = useCallback(() => {\r\n        setField('isEndPickerVisible', !formData.isEndPickerVisible);\r\n    }, [formData.isEndPickerVisible, setField]);\r\n\r\n    const handleStartPicked = useCallback((date) => {\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { startDateTime: date } });\r\n        toggleStartPicker();\r\n    }, [toggleStartPicker, dispatchFormData]);\r\n\r\n    const handleEndPicked = useCallback((date) => {\r\n        dispatchFormData({ type: 'UPDATE_FORM', payload: { endDateTime: date } });\r\n        toggleEndPicker();\r\n    }, [toggleEndPicker, dispatchFormData]);\r\n\r\n    const handleServiceChange = useCallback((newSelectedServiceIds) => {\r\n        setSelectedService(newSelectedServiceIds);\r\n        dispatchFormData({\r\n            type: 'UPDATE_FORM',\r\n            payload: { selectedService: newSelectedServiceIds }\r\n        });\r\n    }, [dispatchFormData]);\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <View style={styles.contentContainerTask}>\r\n                <View style={styles.taskHeader}>\r\n                    <TouchableOpacity onPress={handleBackPress}>\r\n                        <BackIcon />\r\n                    </TouchableOpacity>\r\n                    <Text style={[styles.titleMedium, { flex: 1, textAlign: 'center' }]}>Добавление задачи</Text>\r\n                    <TouchableOpacity onPress={handleDeletePress}>\r\n                        <DeleteIcon />\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <ScrollView showsVerticalScrollIndicator={false} overScrollMode=\"never\">\r\n                    <View style={[styles.contentContainer, { backgroundColor: \"#f9f9f9\", borderRadius: 24, marginBottom: 24 }]}>\r\n                        {tryRender(() => (\r\n                            <>\r\n                                <Text style={[styles.headlineMedium, { marginBottom: 24 }]}>Данные задачи</Text>\r\n\r\n                            </>\r\n                        ))}\r\n\r\n                        {tryRender(() => (\r\n                            <View>\r\n                                <View style={{ flex: 1, marginBottom: 24 }}>\r\n                                    <Text style={styles.label}>Способ оплаты</Text>\r\n                                    <DropdownService\r\n                                        options={service}\r\n                                        selectedValues={selectedService}\r\n                                        onValueChange={handleServiceChange}\r\n                                        updateTotalCost={updateTotalCost}\r\n                                    />\r\n                                </View>\r\n                                <View style={{ flexDirection: 'row', marginBottom: 24 }}>\r\n                                    <View style={{ flex: 1 }}>\r\n                                        <Text style={styles.label}>Способ оплаты</Text>\r\n                                        <DropdownWithSearch\r\n                                            options={formData.paymentMethodOptions}\r\n                                            selectedValue={formData.paymentMethod}\r\n                                            onValueChange={handleChange('paymentMethod')}\r\n                                        />\r\n                                    </View>\r\n                                    <View style={{ flex: 1, marginLeft: 8 }}>\r\n                                        <Text style={styles.label}>Стоимость</Text>\r\n                                        <TextInput\r\n                                            style={styles.costInput}\r\n                                            placeholder=\"1000\"\r\n                                            value={formData.cost.toString()}\r\n                                            onChangeText={handleCostChange}\r\n                                            keyboardType=\"numeric\"\r\n                                        />\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        ))}\r\n                        {tryRender(() => (\r\n                            <View style={{ flexDirection: 'row', marginBottom: 24 }}>\r\n                                <View style={{ flex: 1, marginRight: 8 }}>\r\n                                    <Text style={styles.label}>Начальная дата</Text>\r\n                                    <DateInput\r\n                                        date={formData.startDate}\r\n                                        placeholder=\"ГГГГ-ММ-ДД\"\r\n                                        onDateChange={(dateType, selectedDate) => dispatchFormData({ type: 'UPDATE_FORM', payload: { [dateType]: selectedDate } })}\r\n                                        dateType=\"startDate\"\r\n                                        minDate={new Date()}\r\n                                    />\r\n                                </View>\r\n                                <View style={{ flex: 1 }}>\r\n                                    <Text style={styles.label}>Конечная дата</Text>\r\n                                    <DateInput\r\n                                        date={formData.endDate}\r\n                                        placeholder=\"ГГГГ-ММ-ДД\"\r\n                                        onDateChange={(dateType, selectedDate) => dispatchFormData({ type: 'UPDATE_FORM', payload: { [dateType]: selectedDate } })}\r\n                                        dateType=\"endDate\"\r\n                                        minDate={new Date()}\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                        ))}\r\n                        {tryRender(() => (\r\n                            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                                <View style={{ flex: 1, marginRight: 8 }}>\r\n                                    <Text style={styles.label}>Начало работы</Text>\r\n                                    <TouchableOpacity onPress={toggleStartPicker} style={styles.dateInputContainer}>\r\n                                        <TextInput\r\n                                            value={formData.startDateTime ? format(formData.startDateTime, 'HH:mm') : ''}\r\n                                            placeholder=\"HH:mm\"\r\n                                            editable={false}\r\n                                            style={styles.selectedItemText}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n\r\n                                <View style={{ flex: 1 }}>\r\n                                    <Text style={styles.label}>Конец работы</Text>\r\n                                    <TouchableOpacity onPress={toggleEndPicker} style={styles.dateInputContainer}>\r\n                                        <TextInput\r\n                                            value={formData.endDateTime ? format(formData.endDateTime, 'HH:mm') : ''}\r\n                                            placeholder=\"HH:mm\"\r\n                                            editable={false}\r\n                                            style={styles.selectedItemText}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </View>\r\n                        ))}\r\n                        <DateTimePickerModal\r\n                            isVisible={formData.isStartPickerVisible}\r\n                            mode=\"time\"\r\n                            onConfirm={handleStartPicked}\r\n                            onCancel={toggleStartPicker}\r\n                            is24Hour={true}\r\n                            date={formData.startDateTime || new Date()}\r\n                        />\r\n\r\n                        <DateTimePickerModal\r\n                            isVisible={formData.isEndPickerVisible}\r\n                            mode=\"time\"\r\n                            onConfirm={handleEndPicked}\r\n                            onCancel={toggleEndPicker}\r\n                            is24Hour={true}\r\n                            date={formData.endDateTime || new Date()}\r\n                        />\r\n                    </View>\r\n                    <View style={[styles.contentContainer, { backgroundColor: \"#f9f9f9\", borderRadius: 24, marginBottom: 24 }]}>\r\n                        {tryRender(() => (\r\n                            <>\r\n                                <Text style={[styles.headlineMedium, { marginBottom: 24 }]}>Команда</Text>\r\n                                <View style={{ marginBottom: 24 }}>\r\n                                    <Text style={styles.label}>Ответственный</Text>\r\n                                    <DropdownWithSearch\r\n                                        options={formData.responsibleOptions}\r\n                                        selectedValue={formData.selectedResponsible}\r\n                                        onValueChange={handleChange('selectedResponsible')}\r\n                                    />\r\n\r\n                                </View>\r\n                                <View>\r\n                                    <Text style={styles.label}>Участники</Text>\r\n                                    <DropdownEmployee\r\n                                        options={formData.employeesOptions}\r\n                                        selectedValues={selectedEmployee}\r\n                                        onValueChange={setSelectedEmployee}\r\n                                    />\r\n                                </View>\r\n                            </>\r\n                        ))}\r\n                    </View>\r\n                    <View style={[styles.contentContainer, { backgroundColor: \"#f9f9f9\", borderRadius: 24, marginBottom: 24 }]}>\r\n                        {tryRender(() => (\r\n                            <View>\r\n                                <Text style={[styles.headlineMedium, { marginBottom: 24 }]}>Данные клиента</Text>\r\n                                <View style={{ marginBottom: 24 }}>\r\n                                    <Text style={styles.label}>ФИО клиента</Text>\r\n                                    <DropdownWithSearch\r\n                                        options={formData.fullnameClientOptions}\r\n                                        selectedValue={formData.fullnameClient}\r\n                                        onValueChange={(value) => {\r\n                                            handleChange('fullnameClient')(value);\r\n                                            setAddress(prevAddress => ({\r\n                                                ...prevAddress,\r\n                                                city: '',\r\n                                                street: '',\r\n                                                house: '',\r\n                                                entrance: '',\r\n                                                floor: ''\r\n                                            }));\r\n                                        }}\r\n                                    />\r\n                                </View>\r\n                                {(isAddingNewClient || selectedClient) && (\r\n                                    <View>\r\n                                        <View style={{ flexDirection: 'column' }}>\r\n                                            <Text style={styles.label}>Город</Text>\r\n                                            <TextInput\r\n                                                placeholder=\"Город\"\r\n                                                value={address.city}\r\n                                                onChangeText={(text) => handleAddressChange('city', text)}\r\n                                                style={[styles.addressInput, { marginBottom: 24 }]}\r\n                                            />\r\n                                            <Text style={styles.label}>Улица</Text>\r\n                                            <TextInput\r\n                                                placeholder=\"Улица\"\r\n                                                value={address.street}\r\n                                                onChangeText={(text) => handleAddressChange('street', text)}\r\n                                                style={[styles.addressInput, { marginBottom: 24 }]}\r\n                                            />\r\n                                            <View style={{ flexDirection: \"row\", alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                                <View style={{ flexDirection: \"column\" }}>\r\n                                                    <Text style={styles.label}>Дом/Квартира</Text>\r\n                                                    <TextInput\r\n                                                        placeholder=\"Дом/Квартира\"\r\n                                                        value={address.house}\r\n                                                        onChangeText={(text) => handleAddressChange('house', text)}\r\n                                                        style={[styles.addressInput, { marginBottom: 24 }]}\r\n                                                    />\r\n                                                </View>\r\n                                                <View style={{ flexDirection: \"column\" }}>\r\n                                                    <Text style={styles.label}>Подъезд</Text>\r\n                                                    <TextInput\r\n                                                        placeholder=\"Подъезд\"\r\n                                                        value={address.entrance}\r\n                                                        onChangeText={(text) => handleAddressChange('entrance', text)}\r\n                                                        style={[styles.addressInput, { marginBottom: 24, marginRight: 8 }]}\r\n                                                    />\r\n                                                </View>\r\n                                                <View style={{ flexDirection: \"column\" }}>\r\n                                                    <Text style={styles.label}>Этаж</Text>\r\n                                                    <TextInput\r\n                                                        placeholder=\"Этаж\"\r\n                                                        value={address.floor}\r\n                                                        onChangeText={(text) => handleAddressChange('floor', text)}\r\n                                                        style={[styles.addressInput, { marginBottom: 24, marginRight: 8 }]}\r\n                                                    />\r\n                                                </View>\r\n                                            </View>\r\n\r\n                                            <Text style={styles.label}>Номер телефона клиента</Text>\r\n                                            <TextInput\r\n                                                placeholder=\"+79999999999\"\r\n                                                value={formData.phoneClient}\r\n                                                onChangeText={(text) => setField('phoneClient', text)}\r\n                                                keyboardType=\"phone-pad\"\r\n                                                style={[styles.addressInput, { marginBottom: 24 }]}\r\n                                            />\r\n                                        </View>\r\n\r\n                                    </View>\r\n                                )}\r\n                                {renderClientButton()}\r\n                            </View>\r\n                        ))}\r\n                    </View>\r\n                    <View style={{ marginBottom: 320 }}>\r\n                        <View style={[styles.contentContainer, { backgroundColor: \"#f9f9f9\", borderRadius: 24 }]}>\r\n                            {tryRender(() => (\r\n                                <View>\r\n                                    <Text style={[styles.headlineMedium, { marginBottom: 24 }]}>Дополнительно</Text>\r\n                                    <View style={styles.commentContainer}>\r\n                                        <Text style={styles.label}>Примечание</Text>\r\n                                        <TextInput\r\n                                            placeholder=\"Добавьте примечание\"\r\n                                            value={formData.description}\r\n                                            onChangeText={(text) => setField('description', text)}\r\n                                            multiline={true}\r\n                                            numberOfLines={4}\r\n                                            style={styles.commentInput}\r\n                                        />\r\n                                    </View>\r\n                                </View>\r\n                            ))}\r\n                        </View>\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n    function tryRender(renderFunc) {\r\n        try {\r\n            return renderFunc();\r\n        } catch (error) {\r\n            console.error(\"Ошибка при отрисовке элемента:\", error);\r\n            return <Text>Ошибка при отрисовке</Text>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default TaskForm;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}